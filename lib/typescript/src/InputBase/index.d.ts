import React from 'react';
import { TextInput } from 'react-native';
import type { TextInputProps, ViewStyle, TextStyle, ColorValue } from 'react-native';
export type InputVariant = 'outlined' | 'filled' | 'underlined';
export type InputSize = 'small' | 'medium' | 'large';
export type InputType = 'text' | 'email' | 'password' | 'number' | 'phone' | 'url';
interface InputBaseProps extends Omit<TextInputProps, 'style'> {
    label?: string;
    placeholder?: string;
    value?: string;
    defaultValue?: string;
    onChangeText?: (text: string) => void;
    onFocus?: () => void;
    onBlur?: () => void;
    variant?: InputVariant;
    size?: InputSize;
    type?: InputType;
    backgroundColor?: ColorValue;
    borderColor?: ColorValue;
    textColor?: ColorValue;
    placeholderColor?: ColorValue;
    labelColor?: ColorValue;
    focusColor?: ColorValue;
    errorColor?: ColorValue;
    disabled?: boolean;
    error?: boolean;
    errorMessage?: string;
    required?: boolean;
    readonly?: boolean;
    fullWidth?: boolean;
    multiline?: boolean;
    numberOfLines?: number;
    maxLength?: number;
    style?: ViewStyle;
    inputStyle?: TextStyle;
    labelStyle?: TextStyle;
    errorStyle?: TextStyle;
    containerStyle?: ViewStyle;
    leftIcon?: React.ReactNode;
    rightIcon?: React.ReactNode;
    onRightIconPress?: () => void;
    onLeftIconPress?: () => void;
    animated?: boolean;
    floatingLabel?: boolean;
    validateOnBlur?: boolean;
    validateOnChange?: boolean;
    validator?: (value: string) => string | null;
    accessibilityLabel?: string;
    accessibilityHint?: string;
    borderRadius?: number;
    borderWidth?: number;
    borderStyle?: 'solid' | 'dotted' | 'dashed';
    shadow?: boolean;
    shadowColor?: ColorValue;
    shadowOffset?: {
        width: number;
        height: number;
    };
    shadowOpacity?: number;
    shadowRadius?: number;
    margin?: number;
    marginTop?: number;
    marginBottom?: number;
    marginLeft?: number;
    marginRight?: number;
    _padding?: number;
    _paddingTop?: number;
    _paddingBottom?: number;
    _paddingLeft?: number;
    _paddingRight?: number;
}
export declare const InputBase: React.ForwardRefExoticComponent<InputBaseProps & React.RefAttributes<TextInput>>;
export type { InputBaseProps };
