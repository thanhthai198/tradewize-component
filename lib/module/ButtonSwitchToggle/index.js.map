{"version":3,"names":["React","useState","useCallback","useRef","useEffect","useMemo","View","StyleSheet","Animated","TouchableOpacity","Vibration","useSwitchToggle","value","onValueChange","disabled","loading","hapticFeedback","hapticType","internalValue","setInternalValue","currentValue","undefined","triggerHaptic","vibrate","handleToggle","newValue","useSwitchDimensions","size","width","height","thumbSize","_sizes","_sizes2","_sizes3","sizes","small","medium","large","dimensions","maxTranslateX","useSwitchColors","variant","activeBackgroundColor","inactiveBackgroundColor","thumbColor","activeThumbColor","inactiveThumbColor","variantColors","primary","active","inactive","secondary","outline","ghost","danger","success","warning","variantColor","backgroundColor","ButtonSwitchToggle","style","containerStyle","animationDuration","useSpringAnimation","springConfig","tension","friction","shadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","accessibilityLabel","accessibilityHint","customTrack","customThumb","switchWidth","switchHeight","thumbDiameter","currentThumbColor","translateX","Value","current","animateToPosition","toValue","callback","spring","useNativeDriver","start","timing","duration","newTranslateX","switchStyle","styles","switch","borderRadius","elevation","thumbStyle","thumb","transform","interpolate","inputRange","outputRange","accessibilityProps","accessibilityRole","accessibilityState","checked","accessibilityActions","name","label","createElement","container","_extends","onPress","activeOpacity","create","alignItems","justifyContent","position"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n  useMemo,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  Animated,\n  TouchableOpacity,\n  Vibration,\n} from 'react-native';\nimport type { ViewStyle } from 'react-native';\n\nexport interface ButtonSwitchToggleProps {\n  // Basic props\n  value?: boolean;\n  onValueChange?: (value: boolean) => void;\n  disabled?: boolean;\n  loading?: boolean;\n\n  // Styling props\n  size?: 'small' | 'medium' | 'large';\n  variant?:\n    | 'primary'\n    | 'secondary'\n    | 'outline'\n    | 'ghost'\n    | 'danger'\n    | 'success'\n    | 'warning';\n\n  // Custom colors\n  activeBackgroundColor?: string;\n  inactiveBackgroundColor?: string;\n  thumbColor?: string;\n  activeThumbColor?: string;\n  inactiveThumbColor?: string;\n\n  // Layout props\n  width?: number;\n  height?: number;\n  thumbSize?: number;\n\n  // Custom styles\n  style?: ViewStyle;\n  containerStyle?: ViewStyle;\n\n  // Animation props\n  animationDuration?: number;\n  useSpringAnimation?: boolean;\n  springConfig?: {\n    tension?: number;\n    friction?: number;\n  };\n\n  // Shadow props\n  shadow?: boolean;\n  shadowColor?: string;\n  shadowOffset?: { width: number; height: number };\n  shadowOpacity?: number;\n  shadowRadius?: number;\n\n  // Accessibility props\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n\n  // Haptic feedback\n  hapticFeedback?: boolean;\n  hapticType?: 'light' | 'medium' | 'heavy';\n\n  // Custom components\n  customTrack?: React.ReactNode;\n  customThumb?: React.ReactNode;\n}\n\n// Custom hook for switch logic\nconst useSwitchToggle = (\n  value: boolean,\n  onValueChange?: (value: boolean) => void,\n  disabled = false,\n  loading = false,\n  hapticFeedback = false,\n  hapticType: 'light' | 'medium' | 'heavy' = 'light'\n) => {\n  const [internalValue, setInternalValue] = useState(value);\n  const currentValue = value !== undefined ? value : internalValue;\n\n  const triggerHaptic = useCallback(() => {\n    if (hapticFeedback) {\n      switch (hapticType) {\n        case 'light':\n          Vibration.vibrate(10);\n          break;\n        case 'medium':\n          Vibration.vibrate(50);\n          break;\n        case 'heavy':\n          Vibration.vibrate(100);\n          break;\n      }\n    }\n  }, [hapticFeedback, hapticType]);\n\n  const handleToggle = useCallback(() => {\n    if (disabled || loading) return;\n\n    const newValue = !currentValue;\n\n    // Update internal state if uncontrolled\n    if (value === undefined) {\n      setInternalValue(newValue);\n    }\n\n    // Trigger haptic feedback\n    triggerHaptic();\n\n    // Call external callback\n    onValueChange?.(newValue);\n  }, [currentValue, disabled, loading, value, onValueChange, triggerHaptic]);\n\n  return {\n    currentValue,\n    handleToggle,\n  };\n};\n\n// Custom hook for switch dimensions\nconst useSwitchDimensions = (\n  size: string,\n  width?: number,\n  height?: number,\n  thumbSize?: number\n) => {\n  return useMemo(() => {\n    const sizes = {\n      small: { width: 44, height: 24, thumbSize: 20 },\n      medium: { width: 52, height: 28, thumbSize: 24 },\n      large: { width: 60, height: 32, thumbSize: 28 },\n    };\n\n    const dimensions = {\n      width:\n        width || sizes[size as keyof typeof sizes]?.width || sizes.medium.width,\n      height:\n        height ||\n        sizes[size as keyof typeof sizes]?.height ||\n        sizes.medium.height,\n      thumbSize:\n        thumbSize ||\n        sizes[size as keyof typeof sizes]?.thumbSize ||\n        sizes.medium.thumbSize,\n    };\n\n    return {\n      ...dimensions,\n      maxTranslateX: dimensions.width - dimensions.thumbSize,\n    };\n  }, [size, width, height, thumbSize]);\n};\n\n// Custom hook for switch colors\nconst useSwitchColors = (\n  variant: string,\n  currentValue: boolean,\n  activeBackgroundColor?: string,\n  inactiveBackgroundColor?: string,\n  thumbColor?: string,\n  activeThumbColor?: string,\n  inactiveThumbColor?: string\n) => {\n  return useMemo(() => {\n    const variantColors = {\n      primary: { active: '#007bff', inactive: '#e9ecef' },\n      secondary: { active: '#6c757d', inactive: '#e9ecef' },\n      outline: { active: '#007bff', inactive: '#e9ecef' },\n      ghost: { active: '#007bff', inactive: '#e9ecef' },\n      danger: { active: '#dc3545', inactive: '#e9ecef' },\n      success: { active: '#28a745', inactive: '#e9ecef' },\n      warning: { active: '#ffc107', inactive: '#e9ecef' },\n    };\n\n    const variantColor =\n      variantColors[variant as keyof typeof variantColors] ||\n      variantColors.primary;\n\n    return {\n      backgroundColor: currentValue\n        ? activeBackgroundColor || variantColor.active\n        : inactiveBackgroundColor || variantColor.inactive,\n      thumbColor: currentValue\n        ? activeThumbColor || thumbColor || '#ffffff'\n        : inactiveThumbColor || thumbColor || '#ffffff',\n    };\n  }, [\n    variant,\n    currentValue,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    thumbColor,\n    activeThumbColor,\n    inactiveThumbColor,\n  ]);\n};\n\nconst ButtonSwitchToggle: React.FC<ButtonSwitchToggleProps> = ({\n  // Basic props\n  value = false,\n  onValueChange,\n  disabled = false,\n  loading = false,\n\n  // Styling props\n  size = 'medium',\n  variant = 'primary',\n\n  // Custom colors\n  activeBackgroundColor,\n  inactiveBackgroundColor,\n  thumbColor,\n  activeThumbColor,\n  inactiveThumbColor,\n\n  // Layout props\n  width,\n  height,\n  thumbSize,\n\n  // Custom styles\n  style,\n  containerStyle,\n\n  // Animation props\n  animationDuration = 300,\n  useSpringAnimation = false,\n  springConfig = { tension: 100, friction: 8 },\n\n  // Shadow props\n  shadow = false,\n  shadowColor = '#000',\n  shadowOffset = { width: 0, height: 2 },\n  shadowOpacity = 0.25,\n  shadowRadius = 3.84,\n\n  // Accessibility props\n  accessibilityLabel,\n  accessibilityHint,\n\n  // Haptic feedback\n  hapticFeedback = false,\n  hapticType = 'light',\n\n  // Custom components\n  customTrack,\n  customThumb,\n}) => {\n  // Custom hooks\n  const { currentValue, handleToggle } = useSwitchToggle(\n    value,\n    onValueChange,\n    disabled,\n    loading,\n    hapticFeedback,\n    hapticType\n  );\n\n  const {\n    width: switchWidth,\n    height: switchHeight,\n    thumbSize: thumbDiameter,\n    maxTranslateX,\n  } = useSwitchDimensions(size, width, height, thumbSize);\n\n  const { backgroundColor, thumbColor: currentThumbColor } = useSwitchColors(\n    variant,\n    currentValue,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    thumbColor,\n    activeThumbColor,\n    inactiveThumbColor\n  );\n\n  // Initialize translateX after maxTranslateX is calculated\n  const translateX = useRef(\n    new Animated.Value(currentValue ? maxTranslateX : 0)\n  ).current;\n\n  // Animate to position with improved animation\n  const animateToPosition = useCallback(\n    (toValue: number, callback?: () => void) => {\n      if (useSpringAnimation) {\n        Animated.spring(translateX, {\n          toValue,\n          useNativeDriver: true,\n          ...springConfig,\n        }).start(callback);\n      } else {\n        Animated.timing(translateX, {\n          toValue,\n          duration: animationDuration,\n          useNativeDriver: true,\n        }).start(callback);\n      }\n    },\n    [translateX, animationDuration, useSpringAnimation, springConfig]\n  );\n\n  // Update animation when value changes externally\n  useEffect(() => {\n    const newTranslateX = currentValue ? maxTranslateX : 0;\n    animateToPosition(newTranslateX);\n  }, [currentValue, maxTranslateX, animateToPosition]);\n\n  // Memoized styles for better performance\n  const switchStyle = useMemo(\n    (): ViewStyle[] => [\n      styles.switch,\n      {\n        width: switchWidth,\n        height: switchHeight,\n        backgroundColor,\n        borderRadius: switchHeight / 2,\n        ...(shadow && {\n          shadowColor,\n          shadowOffset,\n          shadowOpacity,\n          shadowRadius,\n          elevation: shadowRadius,\n        }),\n      },\n      ...(style ? [style] : []),\n    ],\n    [\n      switchWidth,\n      switchHeight,\n      backgroundColor,\n      shadow,\n      shadowColor,\n      shadowOffset,\n      shadowOpacity,\n      shadowRadius,\n      style,\n    ]\n  );\n\n  const thumbStyle = useMemo(\n    (): ViewStyle[] => [\n      styles.thumb,\n      {\n        width: thumbDiameter,\n        height: thumbDiameter,\n        borderRadius: thumbDiameter / 2,\n        backgroundColor: currentThumbColor,\n        transform: [\n          {\n            translateX: translateX.interpolate({\n              inputRange: [0, maxTranslateX],\n              outputRange: [0, maxTranslateX],\n            }),\n          },\n        ],\n      },\n    ],\n    [thumbDiameter, currentThumbColor, translateX, maxTranslateX]\n  );\n\n  // Accessibility props\n  const accessibilityProps = useMemo(\n    () => ({\n      accessibilityLabel:\n        accessibilityLabel || `${currentValue ? 'ON' : 'OFF'} toggle switch`,\n      accessibilityHint:\n        accessibilityHint ||\n        `Double tap to ${currentValue ? 'turn off' : 'turn on'}`,\n      accessibilityRole: 'switch' as const,\n      accessibilityState: { checked: currentValue },\n      accessibilityActions: [\n        { name: 'activate', label: currentValue ? 'Turn off' : 'Turn on' },\n      ],\n    }),\n    [accessibilityLabel, accessibilityHint, currentValue]\n  );\n\n  return (\n    <View style={[styles.container, containerStyle]}>\n      <TouchableOpacity\n        onPress={handleToggle}\n        disabled={disabled || loading}\n        activeOpacity={0.8}\n        style={switchStyle}\n        {...accessibilityProps}\n      >\n        {customTrack || (\n          <Animated.View style={thumbStyle}>{customThumb}</Animated.View>\n        )}\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  switch: {\n    position: 'relative',\n    justifyContent: 'center',\n  },\n  thumb: {\n    position: 'absolute',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n});\n\nexport default ButtonSwitchToggle;\n"],"mappings":"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","ignoreList":[]}