{"version":3,"names":["React","useState","useCallback","useRef","useEffect","useMemo","View","StyleSheet","Animated","Vibration","ButtonBase","useSwitchToggle","value","onValueChange","disabled","loading","hapticFeedback","hapticType","internalValue","setInternalValue","currentValue","undefined","triggerHaptic","vibrate","handleToggle","newValue","useSwitchDimensions","size","width","height","thumbSize","_sizes","_sizes2","_sizes3","sizes","small","medium","large","dimensions","maxTranslateX","useSwitchColors","variant","activeBackgroundColor","inactiveBackgroundColor","thumbColor","activeThumbColor","inactiveThumbColor","variantColors","primary","active","inactive","secondary","outline","ghost","danger","success","warning","variantColor","backgroundColor","ButtonSwitchToggle","style","containerStyle","animationDuration","useSpringAnimation","springConfig","tension","friction","shadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","accessibilityLabel","accessibilityHint","customTrack","customThumb","switchWidth","switchHeight","thumbDiameter","currentThumbColor","translateX","Value","current","animateToPosition","toValue","callback","spring","useNativeDriver","start","timing","duration","newTranslateX","switchStyle","styles","switch","borderRadius","elevation","thumbStyle","thumb","transform","interpolate","inputRange","outputRange","accessibilityProps","accessibilityRole","createElement","container","_extends","onPress","activeOpacity","create","alignItems","justifyContent","position"],"sources":["index.tsx"],"sourcesContent":["import React, {\r\n  useState,\r\n  useCallback,\r\n  useRef,\r\n  useEffect,\r\n  useMemo,\r\n} from 'react';\r\nimport { View, StyleSheet, Animated, Vibration } from 'react-native';\r\nimport type { ViewStyle } from 'react-native';\r\nimport { ButtonBase } from '../ButtonBase';\r\n\r\nexport interface ButtonSwitchToggleProps {\r\n  // Basic props\r\n  value?: boolean;\r\n  onValueChange?: (value: boolean) => void;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n\r\n  // Styling props\r\n  size?: 'small' | 'medium' | 'large';\r\n  variant?:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'outline'\r\n    | 'ghost'\r\n    | 'danger'\r\n    | 'success'\r\n    | 'warning';\r\n\r\n  // Custom colors\r\n  activeBackgroundColor?: string;\r\n  inactiveBackgroundColor?: string;\r\n  thumbColor?: string;\r\n  activeThumbColor?: string;\r\n  inactiveThumbColor?: string;\r\n\r\n  // Layout props\r\n  width?: number;\r\n  height?: number;\r\n  thumbSize?: number;\r\n\r\n  // Custom styles\r\n  style?: ViewStyle;\r\n  containerStyle?: ViewStyle;\r\n\r\n  // Animation props\r\n  animationDuration?: number;\r\n  useSpringAnimation?: boolean;\r\n  springConfig?: {\r\n    tension?: number;\r\n    friction?: number;\r\n  };\r\n\r\n  // Shadow props\r\n  shadow?: boolean;\r\n  shadowColor?: string;\r\n  shadowOffset?: { width: number; height: number };\r\n  shadowOpacity?: number;\r\n  shadowRadius?: number;\r\n\r\n  // Accessibility props\r\n  accessibilityLabel?: string;\r\n  accessibilityHint?: string;\r\n\r\n  // Haptic feedback\r\n  hapticFeedback?: boolean;\r\n  hapticType?: 'light' | 'medium' | 'heavy';\r\n\r\n  // Custom components\r\n  customTrack?: React.ReactNode;\r\n  customThumb?: React.ReactNode;\r\n}\r\n\r\n// Custom hook for switch logic\r\nconst useSwitchToggle = (\r\n  value: boolean,\r\n  onValueChange?: (value: boolean) => void,\r\n  disabled = false,\r\n  loading = false,\r\n  hapticFeedback = false,\r\n  hapticType: 'light' | 'medium' | 'heavy' = 'light'\r\n) => {\r\n  const [internalValue, setInternalValue] = useState(value);\r\n  const currentValue = value !== undefined ? value : internalValue;\r\n\r\n  const triggerHaptic = useCallback(() => {\r\n    if (hapticFeedback) {\r\n      switch (hapticType) {\r\n        case 'light':\r\n          Vibration.vibrate(10);\r\n          break;\r\n        case 'medium':\r\n          Vibration.vibrate(50);\r\n          break;\r\n        case 'heavy':\r\n          Vibration.vibrate(100);\r\n          break;\r\n      }\r\n    }\r\n  }, [hapticFeedback, hapticType]);\r\n\r\n  const handleToggle = useCallback(() => {\r\n    if (disabled || loading) return;\r\n\r\n    const newValue = !currentValue;\r\n\r\n    // Update internal state if uncontrolled\r\n    if (value === undefined) {\r\n      setInternalValue(newValue);\r\n    }\r\n\r\n    // Trigger haptic feedback\r\n    triggerHaptic();\r\n\r\n    // Call external callback\r\n    onValueChange?.(newValue);\r\n  }, [currentValue, disabled, loading, value, onValueChange, triggerHaptic]);\r\n\r\n  return {\r\n    currentValue,\r\n    handleToggle,\r\n  };\r\n};\r\n\r\n// Custom hook for switch dimensions\r\nconst useSwitchDimensions = (\r\n  size: string,\r\n  width?: number,\r\n  height?: number,\r\n  thumbSize?: number\r\n) => {\r\n  return useMemo(() => {\r\n    const sizes = {\r\n      small: { width: 44, height: 24, thumbSize: 20 },\r\n      medium: { width: 52, height: 28, thumbSize: 24 },\r\n      large: { width: 60, height: 32, thumbSize: 28 },\r\n    };\r\n\r\n    const dimensions = {\r\n      width:\r\n        width || sizes[size as keyof typeof sizes]?.width || sizes.medium.width,\r\n      height:\r\n        height ||\r\n        sizes[size as keyof typeof sizes]?.height ||\r\n        sizes.medium.height,\r\n      thumbSize:\r\n        thumbSize ||\r\n        sizes[size as keyof typeof sizes]?.thumbSize ||\r\n        sizes.medium.thumbSize,\r\n    };\r\n\r\n    return {\r\n      ...dimensions,\r\n      maxTranslateX: dimensions.width - dimensions.thumbSize,\r\n    };\r\n  }, [size, width, height, thumbSize]);\r\n};\r\n\r\n// Custom hook for switch colors\r\nconst useSwitchColors = (\r\n  variant: string,\r\n  currentValue: boolean,\r\n  activeBackgroundColor?: string,\r\n  inactiveBackgroundColor?: string,\r\n  thumbColor?: string,\r\n  activeThumbColor?: string,\r\n  inactiveThumbColor?: string\r\n) => {\r\n  return useMemo(() => {\r\n    const variantColors = {\r\n      primary: { active: '#007bff', inactive: '#e9ecef' },\r\n      secondary: { active: '#6c757d', inactive: '#e9ecef' },\r\n      outline: { active: '#007bff', inactive: '#e9ecef' },\r\n      ghost: { active: '#007bff', inactive: '#e9ecef' },\r\n      danger: { active: '#dc3545', inactive: '#e9ecef' },\r\n      success: { active: '#28a745', inactive: '#e9ecef' },\r\n      warning: { active: '#ffc107', inactive: '#e9ecef' },\r\n    };\r\n\r\n    const variantColor =\r\n      variantColors[variant as keyof typeof variantColors] ||\r\n      variantColors.primary;\r\n\r\n    return {\r\n      backgroundColor: currentValue\r\n        ? activeBackgroundColor || variantColor.active\r\n        : inactiveBackgroundColor || variantColor.inactive,\r\n      thumbColor: currentValue\r\n        ? activeThumbColor || thumbColor || '#ffffff'\r\n        : inactiveThumbColor || thumbColor || '#ffffff',\r\n    };\r\n  }, [\r\n    variant,\r\n    currentValue,\r\n    activeBackgroundColor,\r\n    inactiveBackgroundColor,\r\n    thumbColor,\r\n    activeThumbColor,\r\n    inactiveThumbColor,\r\n  ]);\r\n};\r\n\r\nexport const ButtonSwitchToggle: React.FC<ButtonSwitchToggleProps> = ({\r\n  // Basic props\r\n  value = false,\r\n  onValueChange,\r\n  disabled = false,\r\n  loading = false,\r\n\r\n  // Styling props\r\n  size = 'medium',\r\n  variant = 'primary',\r\n\r\n  // Custom colors\r\n  activeBackgroundColor,\r\n  inactiveBackgroundColor,\r\n  thumbColor,\r\n  activeThumbColor,\r\n  inactiveThumbColor,\r\n\r\n  // Layout props\r\n  width,\r\n  height,\r\n  thumbSize,\r\n\r\n  // Custom styles\r\n  style,\r\n  containerStyle,\r\n\r\n  // Animation props\r\n  animationDuration = 300,\r\n  useSpringAnimation = false,\r\n  springConfig = { tension: 100, friction: 8 },\r\n\r\n  // Shadow props\r\n  shadow = false,\r\n  shadowColor = '#000',\r\n  shadowOffset = { width: 0, height: 2 },\r\n  shadowOpacity = 0.25,\r\n  shadowRadius = 3.84,\r\n\r\n  // Accessibility props\r\n  accessibilityLabel,\r\n  accessibilityHint,\r\n\r\n  // Haptic feedback\r\n  hapticFeedback = false,\r\n  hapticType = 'light',\r\n\r\n  // Custom components\r\n  customTrack,\r\n  customThumb,\r\n}) => {\r\n  // Custom hooks\r\n  const { currentValue, handleToggle } = useSwitchToggle(\r\n    value,\r\n    onValueChange,\r\n    disabled,\r\n    loading,\r\n    hapticFeedback,\r\n    hapticType\r\n  );\r\n\r\n  const {\r\n    width: switchWidth,\r\n    height: switchHeight,\r\n    thumbSize: thumbDiameter,\r\n    maxTranslateX,\r\n  } = useSwitchDimensions(size, width, height, thumbSize);\r\n\r\n  const { backgroundColor, thumbColor: currentThumbColor } = useSwitchColors(\r\n    variant,\r\n    currentValue,\r\n    activeBackgroundColor,\r\n    inactiveBackgroundColor,\r\n    thumbColor,\r\n    activeThumbColor,\r\n    inactiveThumbColor\r\n  );\r\n\r\n  // Initialize translateX after maxTranslateX is calculated\r\n  const translateX = useRef(\r\n    new Animated.Value(currentValue ? maxTranslateX : 0)\r\n  ).current;\r\n\r\n  // Animate to position with improved animation\r\n  const animateToPosition = useCallback(\r\n    (toValue: number, callback?: () => void) => {\r\n      if (useSpringAnimation) {\r\n        Animated.spring(translateX, {\r\n          toValue,\r\n          useNativeDriver: true,\r\n          ...springConfig,\r\n        }).start(callback);\r\n      } else {\r\n        Animated.timing(translateX, {\r\n          toValue,\r\n          duration: animationDuration,\r\n          useNativeDriver: true,\r\n        }).start(callback);\r\n      }\r\n    },\r\n    [translateX, animationDuration, useSpringAnimation, springConfig]\r\n  );\r\n\r\n  // Update animation when value changes externally\r\n  useEffect(() => {\r\n    const newTranslateX = currentValue ? maxTranslateX : 0;\r\n    animateToPosition(newTranslateX);\r\n  }, [currentValue, maxTranslateX, animateToPosition]);\r\n\r\n  // Memoized styles for better performance\r\n  const switchStyle = useMemo(\r\n    (): ViewStyle => ({\r\n      ...styles.switch,\r\n      width: switchWidth,\r\n      height: switchHeight,\r\n      backgroundColor,\r\n      borderRadius: switchHeight / 2,\r\n      ...(shadow && {\r\n        shadowColor,\r\n        shadowOffset,\r\n        shadowOpacity,\r\n        shadowRadius,\r\n        elevation: shadowRadius,\r\n      }),\r\n      ...style,\r\n    }),\r\n    [\r\n      switchWidth,\r\n      switchHeight,\r\n      backgroundColor,\r\n      shadow,\r\n      shadowColor,\r\n      shadowOffset,\r\n      shadowOpacity,\r\n      shadowRadius,\r\n      style,\r\n    ]\r\n  );\r\n\r\n  const thumbStyle = useMemo(\r\n    (): ViewStyle => ({\r\n      ...styles.thumb,\r\n      width: thumbDiameter,\r\n      height: thumbDiameter,\r\n      borderRadius: thumbDiameter / 2,\r\n      backgroundColor: currentThumbColor,\r\n      transform: [\r\n        {\r\n          translateX: translateX.interpolate({\r\n            inputRange: [0, maxTranslateX],\r\n            outputRange: [0, maxTranslateX],\r\n          }),\r\n        },\r\n      ],\r\n    }),\r\n    [thumbDiameter, currentThumbColor, translateX, maxTranslateX]\r\n  );\r\n\r\n  // Accessibility props\r\n  const accessibilityProps = useMemo(\r\n    () => ({\r\n      accessibilityLabel:\r\n        accessibilityLabel || `${currentValue ? 'ON' : 'OFF'} toggle switch`,\r\n      accessibilityHint:\r\n        accessibilityHint ||\r\n        `Double tap to ${currentValue ? 'turn off' : 'turn on'}`,\r\n      accessibilityRole: 'button' as const,\r\n    }),\r\n    [accessibilityLabel, accessibilityHint, currentValue]\r\n  );\r\n\r\n  return (\r\n    <View style={[styles.container, containerStyle]}>\r\n      <ButtonBase\r\n        onPress={handleToggle}\r\n        disabled={disabled || loading}\r\n        activeOpacity={0.8}\r\n        style={switchStyle}\r\n        {...accessibilityProps}\r\n      >\r\n        {customTrack || (\r\n          <Animated.View style={thumbStyle}>{customThumb}</Animated.View>\r\n        )}\r\n      </ButtonBase>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  switch: {\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n  },\r\n  thumb: {\r\n    position: 'absolute',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]}