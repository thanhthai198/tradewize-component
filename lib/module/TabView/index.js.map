{"version":3,"names":["React","useState","useRef","useEffect","useCallback","View","ScrollView","StyleSheet","Dimensions","Animated","ButtonBase","TabView","tabs","initialTabIndex","onTabChange","tabBarPosition","scrollable","fullWidth","equalWidth","tabBarStyle","tabStyle","contentStyle","indicatorStyle","showIndicator","tabVariant","tabSize","tabShape","activeTabVariant","activeTabBackgroundColor","activeTabTextColor","inactiveTabBackgroundColor","inactiveTabTextColor","indicatorColor","animated","animationDuration","scrollViewProps","containerStyle","tabBarContainerStyle","contentContainerStyle","activeTabIndex","setActiveTabIndex","tabLayouts","setTabLayouts","tabBarRef","indicatorAnim","Value","current","tabWidthAnim","length","activeTab","key","layout","x","width","parallel","timing","toValue","duration","useNativeDriver","start","setValue","handleTabPress","index","tab","disabled","screenWidth","get","scrollToX","Math","max","scrollTo","handleTabLayout","tabKey","event","nativeEvent","prev","renderTabBar","tabBarContent","createElement","style","styles","tabBar","map","isActive","isDisabled","tabContainer","tabContainerEqualWidth","onLayout","title","variant","size","shape","backgroundColor","textColor","onPress","leftIcon","icon","rightIcon","badge","badgeContainer","String","textStyle","fontSize","undefined","tabButton","activeTabButton","textAlign","indicator","transform","translateX","_extends","ref","horizontal","showsHorizontalScrollIndicator","scrollableTabBar","flexGrow","tabBarContainer","renderContent","content","container","create","flex","borderBottomWidth","borderBottomColor","overflow","flexDirection","position","alignItems","flexShrink","minWidth","borderRadius","bottom","height","marginLeft"],"sources":["index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Animated,\r\n} from 'react-native';\r\nimport type { ScrollViewProps, ViewStyle } from 'react-native';\r\nimport { ButtonBase } from '../ButtonBase';\r\n\r\nexport interface TabItem {\r\n  key: string;\r\n  title: string;\r\n  content?: React.ReactNode;\r\n  disabled?: boolean;\r\n  badge?: string | number;\r\n  icon?: React.ReactNode;\r\n}\r\n\r\nexport interface TabViewProps {\r\n  // Basic props\r\n  tabs: TabItem[];\r\n  initialTabIndex?: number;\r\n  onTabChange?: (index: number, tab: TabItem) => void;\r\n\r\n  // Layout props\r\n  tabBarPosition?: 'top' | 'bottom';\r\n  scrollable?: boolean;\r\n  fullWidth?: boolean;\r\n  equalWidth?: boolean; // New prop to explicitly control equal width distribution\r\n\r\n  // Styling props\r\n  tabBarStyle?: ViewStyle;\r\n  tabStyle?: ViewStyle;\r\n  contentStyle?: ViewStyle;\r\n  indicatorStyle?: ViewStyle;\r\n  showIndicator?: boolean; // New prop to control indicator visibility\r\n\r\n  // Tab button props\r\n  tabVariant?:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'outline'\r\n    | 'ghost'\r\n    | 'danger'\r\n    | 'success'\r\n    | 'warning';\r\n  tabSize?: 'small' | 'medium' | 'large' | 'xlarge';\r\n  tabShape?: 'rounded' | 'pill' | 'square';\r\n  activeTabVariant?:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'outline'\r\n    | 'ghost'\r\n    | 'danger'\r\n    | 'success'\r\n    | 'warning';\r\n\r\n  // Colors\r\n  activeTabBackgroundColor?: string;\r\n  activeTabTextColor?: string;\r\n  inactiveTabBackgroundColor?: string;\r\n  inactiveTabTextColor?: string;\r\n  indicatorColor?: string;\r\n\r\n  // Animation props\r\n  animated?: boolean;\r\n  animationDuration?: number;\r\n\r\n  // ScrollView props\r\n  scrollViewProps?: ScrollViewProps;\r\n\r\n  // Custom styles\r\n  containerStyle?: ViewStyle;\r\n  tabBarContainerStyle?: ViewStyle;\r\n  contentContainerStyle?: ViewStyle;\r\n}\r\n\r\nexport const TabView: React.FC<TabViewProps> = ({\r\n  // Basic props\r\n  tabs,\r\n  initialTabIndex = 0,\r\n  onTabChange,\r\n\r\n  // Layout props\r\n  tabBarPosition = 'top',\r\n  scrollable = false,\r\n  fullWidth = false,\r\n  equalWidth = false,\r\n\r\n  // Styling props\r\n  tabBarStyle,\r\n  tabStyle,\r\n  contentStyle,\r\n  indicatorStyle,\r\n  showIndicator = false,\r\n\r\n  // Tab button props\r\n  tabVariant = 'ghost',\r\n  tabSize = 'medium',\r\n  tabShape = 'rounded',\r\n  activeTabVariant = 'primary',\r\n\r\n  // Colors\r\n  activeTabBackgroundColor,\r\n  activeTabTextColor,\r\n  inactiveTabBackgroundColor,\r\n  inactiveTabTextColor,\r\n  indicatorColor = '#007bff',\r\n\r\n  // Animation props\r\n  animated = true,\r\n  animationDuration = 300,\r\n\r\n  // ScrollView props\r\n  scrollViewProps,\r\n\r\n  // Custom styles\r\n  containerStyle,\r\n  tabBarContainerStyle,\r\n  contentContainerStyle,\r\n}) => {\r\n  const [activeTabIndex, setActiveTabIndex] = useState(initialTabIndex);\r\n  const [tabLayouts, setTabLayouts] = useState<{\r\n    [key: string]: { x: number; width: number };\r\n  }>({});\r\n  const tabBarRef = useRef<ScrollView>(null);\r\n  const indicatorAnim = useRef(new Animated.Value(0)).current;\r\n  const tabWidthAnim = useRef(new Animated.Value(0)).current;\r\n\r\n  // Validate initial tab index\r\n  useEffect(() => {\r\n    if (initialTabIndex >= 0 && initialTabIndex < tabs.length) {\r\n      setActiveTabIndex(initialTabIndex);\r\n    }\r\n  }, [initialTabIndex, tabs.length]);\r\n\r\n  // Animate indicator when active tab changes\r\n  useEffect(() => {\r\n    const activeTab = tabs[activeTabIndex];\r\n    if (activeTab && tabLayouts[activeTab.key]) {\r\n      const layout = tabLayouts[activeTab.key];\r\n      if (layout) {\r\n        const { x, width } = layout;\r\n\r\n        if (animated) {\r\n          Animated.parallel([\r\n            Animated.timing(indicatorAnim, {\r\n              toValue: x,\r\n              duration: animationDuration,\r\n              useNativeDriver: false,\r\n            }),\r\n            Animated.timing(tabWidthAnim, {\r\n              toValue: width,\r\n              duration: animationDuration,\r\n              useNativeDriver: false,\r\n            }),\r\n          ]).start();\r\n        } else {\r\n          indicatorAnim.setValue(x);\r\n          tabWidthAnim.setValue(width);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    activeTabIndex,\r\n    tabLayouts,\r\n    animated,\r\n    animationDuration,\r\n    indicatorAnim,\r\n    tabWidthAnim,\r\n    tabs,\r\n  ]);\r\n\r\n  const handleTabPress = useCallback(\r\n    (index: number, tab: TabItem) => {\r\n      if (tab.disabled) return;\r\n\r\n      setActiveTabIndex(index);\r\n      onTabChange?.(index, tab);\r\n\r\n      // Scroll to tab if scrollable\r\n      if (scrollable && tabBarRef.current) {\r\n        const activeTab = tabs[index];\r\n        if (activeTab && tabLayouts[activeTab.key]) {\r\n          const layout = tabLayouts[activeTab.key];\r\n          if (layout) {\r\n            const { x, width } = layout;\r\n            const screenWidth = Dimensions.get('window').width;\r\n            const scrollToX = Math.max(0, x - screenWidth / 2 + width / 2);\r\n\r\n            tabBarRef.current.scrollTo({\r\n              x: scrollToX,\r\n              animated: true,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [scrollable, tabLayouts, onTabChange, tabs]\r\n  );\r\n\r\n  const handleTabLayout = useCallback((tabKey: string, event: any) => {\r\n    const { x, width } = event.nativeEvent.layout;\r\n    setTabLayouts((prev) => ({\r\n      ...prev,\r\n      [tabKey]: { x, width },\r\n    }));\r\n  }, []);\r\n\r\n  const renderTabBar = () => {\r\n    const tabBarContent = (\r\n      <View style={[styles.tabBar, tabBarStyle]}>\r\n        {tabs.map((tab, index) => {\r\n          const isActive = index === activeTabIndex;\r\n          const isDisabled = tab.disabled;\r\n\r\n          return (\r\n            <View\r\n              key={tab.key}\r\n              style={[\r\n                styles.tabContainer,\r\n                (fullWidth || equalWidth) && styles.tabContainerEqualWidth,\r\n                tabStyle,\r\n              ]}\r\n              onLayout={(event) => handleTabLayout(tab.key, event)}\r\n            >\r\n              <ButtonBase\r\n                title={tab.title}\r\n                variant={isActive ? activeTabVariant : tabVariant}\r\n                size={tabSize}\r\n                shape={tabShape}\r\n                backgroundColor={\r\n                  isActive\r\n                    ? activeTabBackgroundColor\r\n                    : inactiveTabBackgroundColor\r\n                }\r\n                textColor={isActive ? activeTabTextColor : inactiveTabTextColor}\r\n                disabled={isDisabled}\r\n                onPress={() => handleTabPress(index, tab)}\r\n                fullWidth={fullWidth || equalWidth}\r\n                leftIcon={tab.icon}\r\n                rightIcon={\r\n                  tab.badge ? (\r\n                    <View style={styles.badgeContainer}>\r\n                      <ButtonBase\r\n                        title={String(tab.badge)}\r\n                        size=\"small\"\r\n                        variant=\"danger\"\r\n                        shape=\"pill\"\r\n                        style={styles.badge}\r\n                        // eslint-disable-next-line react-native/no-inline-styles\r\n                        textStyle={{ fontSize: 10 }}\r\n                      />\r\n                    </View>\r\n                  ) : undefined\r\n                }\r\n                style={{\r\n                  ...styles.tabButton,\r\n                  ...(isActive ? styles.activeTabButton : {}),\r\n                }}\r\n                // eslint-disable-next-line react-native/no-inline-styles\r\n                textStyle={{\r\n                  fontSize: 12,\r\n                  textAlign: 'center',\r\n                }}\r\n              />\r\n            </View>\r\n          );\r\n        })}\r\n\r\n        {/* Animated indicator */}\r\n        {tabs.length > 0 && showIndicator && (\r\n          <Animated.View\r\n            style={[\r\n              styles.indicator,\r\n              {\r\n                backgroundColor: indicatorColor,\r\n                transform: [{ translateX: indicatorAnim }],\r\n                width: tabWidthAnim,\r\n              },\r\n              indicatorStyle,\r\n            ]}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n\r\n    if (scrollable) {\r\n      return (\r\n        <ScrollView\r\n          ref={tabBarRef}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={[\r\n            styles.scrollableTabBar,\r\n            tabBarContainerStyle,\r\n          ]}\r\n          // eslint-disable-next-line react-native/no-inline-styles\r\n          style={{ flexGrow: 0 }}\r\n          {...scrollViewProps}\r\n        >\r\n          {tabBarContent}\r\n        </ScrollView>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={[styles.tabBarContainer, tabBarContainerStyle]}>\r\n        {tabBarContent}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    const activeTab = tabs[activeTabIndex];\r\n    if (!activeTab) return null;\r\n\r\n    return (\r\n      <View style={[styles.content, contentStyle, contentContainerStyle]}>\r\n        {activeTab.content}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, containerStyle]}>\r\n      {tabBarPosition === 'top' && renderTabBar()}\r\n      {renderContent()}\r\n      {tabBarPosition === 'bottom' && renderTabBar()}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  tabBarContainer: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e0e0e0',\r\n    overflow: 'hidden',\r\n  },\r\n  tabBar: {\r\n    flexDirection: 'row',\r\n    position: 'relative',\r\n    alignItems: 'center',\r\n  },\r\n  scrollableTabBar: {\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n  },\r\n  tabContainer: {\r\n    flex: 1,\r\n    minWidth: 0,\r\n  },\r\n  tabContainerEqualWidth: {\r\n    flex: 1,\r\n    minWidth: 0,\r\n  },\r\n  tabButton: {\r\n    borderRadius: 0,\r\n    overflow: 'hidden',\r\n  },\r\n  activeTabButton: {\r\n    // Additional styles for active tab if needed\r\n  },\r\n  indicator: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: 2,\r\n    borderRadius: 1,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  badgeContainer: {\r\n    marginLeft: 4,\r\n    flexShrink: 0,\r\n  },\r\n  badge: {\r\n    minWidth: 20,\r\n    height: 20,\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]}