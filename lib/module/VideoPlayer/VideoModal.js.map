{"version":3,"names":["React","useCallback","useRef","useEffect","useState","Modal","View","TouchableOpacity","StyleSheet","StatusBar","Text","Animated","Slider","VideoPlayer","getScreenHeight","useSafeAreaInsets","loadSubtitles","ButtonBase","formatTime","seconds","isNaN","mins","Math","floor","secs","toString","padStart","VideoModal","visible","onClose","source","autoPlay","loop","muted","showControls","showSkipButton","autoCloseOnEnd","isSubtitle","subtitle","txtSkipButton","txtCloseButton","initialSubtitle","onError","onLoad","onEnd","onProgress","isProgressBar","insets","buttonOpacity","Value","current","progress","setProgress","currentTime","setCurrentTime","duration","setDuration","subtitles","setSubtitles","currentSubtitle","setCurrentSubtitle","hasSubtitles","setHasSubtitles","subtitleLoaded","setSubtitleLoaded","error","setError","currentSubtitleLanguage","setCurrentSubtitleLanguage","showLanguageSelector","setShowLanguageSelector","resetState","handleClose","handleBackdropPress","handleVideoEnd","handleVideoError","err","loading","handleVideoProgress","progressData","seekableDuration","match","find","s","start","end","text","console","handleVideoLoad","handlePlayingChange","isPlaying","timing","toValue","useNativeDriver","loadFileSubtitle","language","subtitleUrl","parsed","length","changeSubtitleLanguage","availableLanguages","Object","keys","initialOpacity","createElement","transparent","animationType","onRequestClose","statusBarTranslucent","barStyle","backgroundColor","style","styles","modalContainer","modalContent","videoContainer","progressUpdateInterval","height","width","onPlayingChange","subtitleContainer","bottom","subtitleText","languageContainer","top","onPress","languageButton","languageButtonText","toUpperCase","languageDropdown","map","lang","key","languageOption","languageOptionActive","languageOptionText","languageOptionTextActive","progressContainer","progressBar","slider","value","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","disabled","timeContainer","timeText","closeButtonOverlay","opacity","hitSlop","left","right","closeButton","closeButtonText","backdrop","activeOpacity","create","flex","justifyContent","alignItems","header","flexDirection","paddingHorizontal","paddingVertical","title","color","fontSize","fontWeight","marginRight","minWidth","borderRadius","padding","position","zIndex","marginTop","alignSelf","maxWidth","textAlign"],"sources":["VideoModal.tsx"],"sourcesContent":["import React, { useCallback, useRef, useEffect, useState } from 'react';\nimport {\n  Modal,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  StatusBar,\n  Text,\n  Animated,\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport { VideoPlayer } from './VideoComponent';\nimport { getScreenHeight } from '../utils';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport type { LanguageCode, SubtitleEntry } from '../types';\nimport { loadSubtitles } from '../helper';\nimport { ButtonBase } from '../ButtonBase';\n\n// Helper function to format time\nconst formatTime = (seconds: number): string => {\n  if (isNaN(seconds) || seconds < 0) return '0:00';\n\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\n\nexport interface VideoModalProps {\n  visible: boolean;\n  onClose: () => void;\n  source: string;\n  title?: string;\n  autoPlay?: boolean;\n  loop?: boolean;\n  muted?: boolean;\n  showControls?: boolean;\n  showSkipButton?: boolean;\n  autoCloseOnEnd?: boolean;\n  isSubtitle?: boolean;\n  subtitle: { [key: string]: string };\n  txtSkipButton?: string;\n  txtCloseButton?: string;\n  initialSubtitle?: LanguageCode;\n  isProgressBar?: boolean;\n  onError?: (error: any, loading: boolean) => void;\n  onLoad?: (loading: boolean) => void;\n  onEnd?: () => void;\n  onProgress?: (progress: {\n    currentTime: number;\n    playableDuration: number;\n    seekableDuration: number;\n  }) => void;\n}\n\nexport const VideoModal: React.FC<VideoModalProps> = ({\n  visible,\n  onClose,\n  source,\n  autoPlay = true,\n  loop = false,\n  muted = false,\n  showControls = false,\n  showSkipButton = true,\n  autoCloseOnEnd = true,\n  isSubtitle = true,\n  subtitle,\n  txtSkipButton = 'Skip',\n  txtCloseButton = 'Close',\n  initialSubtitle = 'en',\n  onError,\n  onLoad,\n  onEnd,\n  onProgress,\n  isProgressBar = true,\n}) => {\n  const insets = useSafeAreaInsets();\n  const buttonOpacity = useRef(new Animated.Value(1)).current;\n  const [progress, setProgress] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [subtitles, setSubtitles] = useState<SubtitleEntry[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string>('');\n  const [hasSubtitles, setHasSubtitles] = useState(true);\n  const [subtitleLoaded, setSubtitleLoaded] = useState(false);\n  const [error, setError] = useState<boolean>(false);\n  const [currentSubtitleLanguage, setCurrentSubtitleLanguage] =\n    useState<LanguageCode>(initialSubtitle);\n  const [showLanguageSelector, setShowLanguageSelector] =\n    useState<boolean>(false);\n\n  const resetState = useCallback(() => {\n    setProgress(0);\n    setCurrentTime(0);\n    setDuration(0);\n    setSubtitles([]);\n    setCurrentSubtitle('');\n  }, []);\n\n  const handleClose = useCallback(() => {\n    resetState();\n    onClose();\n  }, [onClose, resetState]);\n\n  const handleBackdropPress = useCallback(() => {\n    handleClose();\n  }, [handleClose]);\n\n  const handleVideoEnd = useCallback(() => {\n    onEnd?.();\n    if (autoCloseOnEnd) {\n      handleClose();\n    }\n  }, [onEnd, autoCloseOnEnd, handleClose]);\n\n  const handleVideoError = useCallback(\n    (err: any, loading: boolean) => {\n      setError(true);\n      onError?.(err, loading);\n    },\n    [onError]\n  );\n\n  const handleVideoProgress = useCallback(\n    (progressData: any) => {\n      try {\n        setCurrentTime(progressData.currentTime);\n        setDuration(progressData.seekableDuration);\n        if (progressData.seekableDuration > 0) {\n          setProgress(progressData.currentTime / progressData.seekableDuration);\n        }\n\n        if (isSubtitle) {\n          const match = subtitles.find(\n            (s) =>\n              progressData?.currentTime >= s.start - 0.1 &&\n              progressData?.currentTime <= s.end + 0.1\n          );\n          if (match?.text !== currentSubtitle) {\n            setCurrentSubtitle(match?.text || '');\n          }\n        }\n\n        onProgress?.(progressData);\n      } catch (err) {\n        console.error('handleVideoProgress error', err);\n      }\n    },\n    [onProgress, subtitles, isSubtitle, currentSubtitle]\n  );\n\n  const handleVideoLoad = useCallback(\n    (loading: boolean) => {\n      setError(false);\n      onLoad?.(loading);\n    },\n    [onLoad]\n  );\n\n  const handlePlayingChange = useCallback(\n    (isPlaying: boolean) => {\n      Animated.timing(buttonOpacity, {\n        toValue: isPlaying ? 0.3 : 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    },\n    [buttonOpacity]\n  );\n\n  const loadFileSubtitle = useCallback(\n    async (language: LanguageCode = currentSubtitleLanguage) => {\n      try {\n        const subtitleUrl = subtitle[language] || '';\n        const parsed = await loadSubtitles(subtitleUrl);\n        setSubtitles(parsed);\n        setHasSubtitles(parsed.length > 0);\n      } catch (err) {\n        console.error('Error loading subtitles:', err);\n        setHasSubtitles(false);\n      } finally {\n        setSubtitleLoaded(true);\n      }\n    },\n    [subtitle, currentSubtitleLanguage]\n  );\n\n  const changeSubtitleLanguage = useCallback(\n    async (language: LanguageCode) => {\n      setCurrentSubtitleLanguage(language);\n      setCurrentSubtitle(''); // Clear current subtitle when changing language\n      setSubtitleLoaded(false);\n      await loadFileSubtitle(language);\n    },\n    [loadFileSubtitle]\n  );\n\n  // Get available subtitle languages\n  const availableLanguages = Object.keys(subtitle) as LanguageCode[];\n\n  useEffect(() => {\n    if (isSubtitle) {\n      setSubtitleLoaded(false);\n      loadFileSubtitle();\n    }\n  }, [isSubtitle, loadFileSubtitle]);\n\n  // Reset button opacity when modal opens\n  useEffect(() => {\n    if (visible) {\n      // If autoPlay is true, button should be dimmed initially\n      const initialOpacity = autoPlay ? 0.3 : 1;\n      Animated.timing(buttonOpacity, {\n        toValue: initialOpacity,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, buttonOpacity, autoPlay]);\n\n  useEffect(() => {\n    if (initialSubtitle) {\n      setCurrentSubtitleLanguage(initialSubtitle);\n    }\n  }, [initialSubtitle]);\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={handleClose}\n      statusBarTranslucent={true}\n    >\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor=\"rgba(0, 0, 0, 0.9)\"\n      />\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          {/* Video Player */}\n          <View style={styles.videoContainer}>\n            <VideoPlayer\n              progressUpdateInterval={100}\n              source={source}\n              height={getScreenHeight()}\n              width=\"100%\"\n              autoPlay={isSubtitle ? subtitleLoaded && autoPlay : autoPlay}\n              loop={loop}\n              muted={muted}\n              showControls={showControls}\n              onError={handleVideoError}\n              onLoad={handleVideoLoad}\n              onEnd={handleVideoEnd}\n              onProgress={handleVideoProgress}\n              onPlayingChange={handlePlayingChange}\n            />\n          </View>\n\n          {currentSubtitle && isSubtitle && hasSubtitles && !error && (\n            <View\n              style={[styles.subtitleContainer, { bottom: insets.bottom + 56 }]}\n            >\n              <Text style={styles.subtitleText}>{currentSubtitle}</Text>\n            </View>\n          )}\n\n          {/* Language Selector */}\n          {isSubtitle && availableLanguages.length > 1 && !error && (\n            <View style={[styles.languageContainer, { top: insets.top + 24 }]}>\n              <TouchableOpacity\n                onPress={() => setShowLanguageSelector(!showLanguageSelector)}\n                style={styles.languageButton}\n              >\n                <Text style={styles.languageButtonText}>\n                  {currentSubtitleLanguage.toUpperCase()}\n                </Text>\n              </TouchableOpacity>\n\n              {showLanguageSelector && (\n                <View style={styles.languageDropdown}>\n                  {availableLanguages.map((lang) => (\n                    <TouchableOpacity\n                      key={lang}\n                      onPress={() => {\n                        changeSubtitleLanguage(lang);\n                        setShowLanguageSelector(false);\n                      }}\n                      style={[\n                        styles.languageOption,\n                        lang === currentSubtitleLanguage &&\n                          styles.languageOptionActive,\n                      ]}\n                    >\n                      <Text\n                        style={[\n                          styles.languageOptionText,\n                          lang === currentSubtitleLanguage &&\n                            styles.languageOptionTextActive,\n                        ]}\n                      >\n                        {lang.toUpperCase()}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              )}\n            </View>\n          )}\n\n          {/* Progress Bar */}\n          {isProgressBar && !error && (\n            <View\n              style={[styles.progressContainer, { bottom: insets.bottom + 8 }]}\n            >\n              <View style={styles.progressBar}>\n                <Slider\n                  style={styles.slider}\n                  value={progress}\n                  minimumValue={0}\n                  maximumValue={1}\n                  minimumTrackTintColor=\"#ff3b30\"\n                  maximumTrackTintColor=\"rgba(255, 255, 255, 0.3)\"\n                  disabled={true}\n                />\n              </View>\n              <View style={styles.timeContainer}>\n                <Text style={styles.timeText}>\n                  {formatTime(currentTime)} / {formatTime(duration)}\n                </Text>\n              </View>\n            </View>\n          )}\n\n          {/* Close Button Overlay */}\n          {(showSkipButton || error) && (\n            <Animated.View\n              style={[\n                styles.closeButtonOverlay,\n                {\n                  top: insets.top + 24,\n                  opacity: buttonOpacity,\n                },\n              ]}\n            >\n              <ButtonBase\n                onPress={handleClose}\n                hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n              >\n                <View style={styles.closeButton}>\n                  <Text style={styles.closeButtonText}>\n                    {error ? txtCloseButton : txtSkipButton}\n                  </Text>\n                </View>\n              </ButtonBase>\n            </Animated.View>\n          )}\n        </View>\n\n        {/* Backdrop for closing */}\n        <TouchableOpacity\n          style={styles.backdrop}\n          activeOpacity={1}\n          onPress={handleBackdropPress}\n        />\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.9)',\n  },\n  modalContent: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#000',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 80,\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n  },\n  title: {\n    flex: 1,\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n    marginRight: 16,\n  },\n  closeButton: {\n    minWidth: 40,\n    borderRadius: 8,\n    padding: 8,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  closeButtonText: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  videoContainer: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: -1,\n  },\n  closeButtonOverlay: {\n    position: 'absolute',\n    right: 16,\n    zIndex: 10,\n  },\n  progressContainer: {\n    position: 'absolute',\n    left: 16,\n    right: 16,\n    bottom: 100,\n    zIndex: 10,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  },\n  slider: {\n    height: '100%',\n  },\n  timeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8,\n  },\n  timeText: {\n    color: '#fff',\n    fontSize: 12,\n  },\n  subtitleContainer: {\n    position: 'absolute',\n    zIndex: 10,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    padding: 4,\n    borderRadius: 8,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    maxWidth: '80%',\n  },\n  subtitleText: {\n    textAlign: 'center',\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  languageContainer: {\n    position: 'absolute',\n    left: 16,\n    zIndex: 10,\n  },\n  languageButton: {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n    minWidth: 60,\n    alignItems: 'center',\n  },\n  languageButtonText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  languageDropdown: {\n    position: 'absolute',\n    top: 40,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.9)',\n    borderRadius: 6,\n    paddingVertical: 4,\n    minWidth: 60,\n  },\n  languageOption: {\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n  },\n  languageOptionActive: {\n    backgroundColor: 'rgba(255, 59, 48, 0.3)',\n  },\n  languageOptionText: {\n    color: '#fff',\n    fontSize: 14,\n    textAlign: 'center',\n  },\n  languageOptionTextActive: {\n    color: '#ff3b30',\n    fontWeight: '600',\n  },\n});\n"],"mappings":"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","ignoreList":[]}