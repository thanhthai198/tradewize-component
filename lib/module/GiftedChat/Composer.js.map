{"version":3,"names":["React","forwardRef","useCallback","useMemo","useRef","useState","Platform","StyleSheet","TextInput","View","Image","Text","MIN_COMPOSER_HEIGHT","DEFAULT_PLACEHOLDER","MAX_COMPOSER_HEIGHT","Color","stylesCommon","ButtonBase","Composer","composerHeight","disableComposer","keyboardAppearance","multiline","onInputSizeChanged","onTextChanged","placeholder","placeholderTextColor","defaultColor","textInputAutoFocus","text","textInputProps","textInputStyle","onPressPickMedia","onFocus","onBlur","ref","dimensionsRef","isFocused","setIsFocused","isPickerOpen","setIsPickerOpen","widthText","setWidthText","lineCount","setLineCount","determineInputSizeChange","dimensions","current","width","height","handleContentSizeChange","nativeEvent","contentSize","handleLayout","e","layout","lines","Math","max","round","borderRadiusByLineCount","heightInput","createElement","style","styles","container","onPress","tintColor","defaultBlue","resizeMode","source","require","Fragment","iconPick","textInputContainer","borderRadius","_extends","testID","accessible","accessibilityLabel","editable","onContentSizeChange","onChangeText","txt","fill","textInput","select","web","outlineWidth","outlineColor","outlineOffset","autoFocus","value","enablesReturnKeyAutomatically","underlineColorAndroid","onLayout","hiddenText","create","flex","flexDirection","alignItems","gap","backgroundColor","leftBubbleBackground","paddingHorizontal","paddingRight","paddingLeft","fontWeight","fontSize","lineHeight","paddingTop","marginTop","ios","android","marginBottom","position","top","left","inputPreview","txtPreview"],"sources":["Composer.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  TextInput,\n  type TextInputProps,\n  type NativeSyntheticEvent,\n  type TextInputContentSizeChangeEventData,\n  View,\n  Image,\n  Text,\n  type LayoutChangeEvent,\n} from 'react-native';\nimport {\n  MIN_COMPOSER_HEIGHT,\n  DEFAULT_PLACEHOLDER,\n  MAX_COMPOSER_HEIGHT,\n} from './Constant';\nimport Color from './Color';\nimport stylesCommon from './styles';\nimport { ButtonBase } from '../ButtonBase';\n\nexport interface ComposerProps {\n  composerHeight?: number;\n  text?: string;\n  placeholder?: string;\n  placeholderTextColor?: string;\n  textInputProps?: Partial<TextInputProps>;\n  textInputStyle?: TextInputProps['style'];\n  textInputAutoFocus?: boolean;\n  keyboardAppearance?: TextInputProps['keyboardAppearance'];\n  multiline?: boolean;\n  disableComposer?: boolean;\n  onTextChanged?(text: string): void;\n  onInputSizeChanged?(layout: { width: number; height: number }): void;\n  onPressPickMedia?: (type: 'camera' | 'pick') => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport const Composer = forwardRef(\n  (\n    {\n      composerHeight = MIN_COMPOSER_HEIGHT,\n      disableComposer = false,\n      keyboardAppearance = 'default',\n      multiline = true,\n      onInputSizeChanged,\n      onTextChanged,\n      placeholder = DEFAULT_PLACEHOLDER,\n      placeholderTextColor = Color.defaultColor,\n      textInputAutoFocus = false,\n      text,\n      textInputProps,\n      textInputStyle,\n      onPressPickMedia,\n      onFocus,\n      onBlur,\n    }: ComposerProps,\n    ref: React.Ref<TextInput>\n  ) => {\n    const dimensionsRef: any = useRef<{ width: number; height: number }>(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [isPickerOpen, setIsPickerOpen] = useState(false);\n    const [widthText, setWidthText] = useState(0);\n    const [lineCount, setLineCount] = useState(1);\n\n    const determineInputSizeChange = useCallback(\n      (dimensions: { width: number; height: number }) => {\n        // Support earlier versions of React Native on Android.\n        if (!dimensions) return;\n\n        if (\n          !dimensionsRef.current ||\n          (dimensionsRef.current &&\n            (dimensionsRef.current.width !== dimensions.width ||\n              dimensionsRef.current.height !== dimensions.height))\n        ) {\n          dimensionsRef.current = dimensions;\n          setWidthText(dimensions.width);\n          onInputSizeChanged?.(dimensions);\n        }\n      },\n      [onInputSizeChanged]\n    );\n\n    const handleContentSizeChange = useCallback(\n      ({\n        nativeEvent: { contentSize },\n      }: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) =>\n        determineInputSizeChange(contentSize),\n      [determineInputSizeChange]\n    );\n\n    const handleLayout = (e: LayoutChangeEvent) => {\n      const height = e.nativeEvent.layout.height;\n      const lines = Math.max(1, Math.round(height / 22));\n      setLineCount(lines);\n    };\n\n    const borderRadiusByLineCount = useMemo(() => {\n      if (lineCount === 1) {\n        return 100;\n      }\n      return 16;\n    }, [lineCount]);\n\n    const heightInput = useMemo(() => {\n      if (lineCount === 1) {\n        return composerHeight;\n      }\n      const height = lineCount * 22;\n      if (height > MAX_COMPOSER_HEIGHT / 2) {\n        return MAX_COMPOSER_HEIGHT / 2 + 20;\n      }\n      return height;\n    }, [lineCount, composerHeight]);\n\n    return (\n      <View style={styles.container}>\n        {isFocused && !isPickerOpen && (\n          <ButtonBase onPress={() => setIsPickerOpen(true)}>\n            <Image\n              tintColor={Color.defaultBlue}\n              resizeMode=\"contain\"\n              source={require('./assets/next.png')}\n              style={{ width: 18, height: 18 }}\n            />\n          </ButtonBase>\n        )}\n        {(!isFocused || isPickerOpen) && (\n          <>\n            <ButtonBase onPress={() => onPressPickMedia?.('camera')}>\n              <Image\n                tintColor={Color.defaultBlue}\n                resizeMode=\"contain\"\n                source={require('./assets/camera.png')}\n                style={styles.iconPick}\n              />\n            </ButtonBase>\n\n            <ButtonBase onPress={() => onPressPickMedia?.('pick')}>\n              <Image\n                tintColor={Color.defaultBlue}\n                resizeMode=\"contain\"\n                source={require('./assets/photo.png')}\n                style={styles.iconPick}\n              />\n            </ButtonBase>\n          </>\n        )}\n\n        {/* <ButtonBase>\n        <Image source={require('../assets/mic.png')} style={styles.iconPick} />\n      </ButtonBase> */}\n\n        <View\n          style={[\n            styles.textInputContainer,\n            {\n              borderRadius: borderRadiusByLineCount,\n            },\n          ]}\n        >\n          <TextInput\n            ref={ref}\n            testID={placeholder}\n            accessible\n            accessibilityLabel={placeholder}\n            placeholder={placeholder}\n            placeholderTextColor={placeholderTextColor}\n            multiline={multiline}\n            editable={!disableComposer}\n            onContentSizeChange={handleContentSizeChange}\n            onChangeText={(txt) => {\n              onTextChanged?.(txt);\n              setIsPickerOpen(false);\n            }}\n            style={[\n              stylesCommon.fill,\n              styles.textInput,\n              textInputStyle,\n              {\n                height: heightInput,\n                ...Platform.select({\n                  web: {\n                    outlineWidth: 0,\n                    outlineColor: 'transparent',\n                    outlineOffset: 0,\n                  },\n                }),\n              },\n            ]}\n            autoFocus={textInputAutoFocus}\n            value={text}\n            enablesReturnKeyAutomatically\n            underlineColorAndroid=\"transparent\"\n            keyboardAppearance={keyboardAppearance}\n            onFocus={() => {\n              setIsFocused(true);\n              onFocus?.();\n            }}\n            onBlur={() => {\n              setIsFocused(false);\n              setIsPickerOpen(false);\n              onBlur?.();\n            }}\n            {...textInputProps}\n          />\n\n          <Text\n            onLayout={handleLayout}\n            style={[\n              styles.hiddenText,\n              {\n                width: widthText,\n              },\n            ]}\n          >\n            {text}\n          </Text>\n\n          {/* <ButtonBase>\n          <Image\n            tintColor={Color.defaultBlue}\n            resizeMode=\"contain\"\n            source={require('../assets/smileFace.png')}\n            style={styles.iconPick}\n          />\n        </ButtonBase> */}\n        </View>\n      </View>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  textInputContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    backgroundColor: Color.leftBubbleBackground,\n    paddingHorizontal: 8,\n  },\n  textInput: {\n    paddingRight: 8,\n    paddingLeft: 8,\n    fontWeight: '600',\n    fontSize: 16,\n    lineHeight: 22,\n    ...Platform.select({\n      web: {\n        paddingTop: 6,\n        paddingLeft: 4,\n      },\n    }),\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6,\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4,\n    }),\n  },\n  iconPick: {\n    width: 24,\n    height: 24,\n  },\n  hiddenText: {\n    position: 'absolute',\n    top: -9999,\n    left: -9999,\n    paddingRight: 8,\n    paddingLeft: 8,\n    fontWeight: '600',\n    fontSize: 16,\n    lineHeight: 22,\n    ...Platform.select({\n      web: {\n        paddingTop: 6,\n        paddingLeft: 4,\n      },\n    }),\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6,\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4,\n    }),\n  },\n  inputPreview: {\n    paddingRight: 8,\n    paddingLeft: 8,\n    ...Platform.select({\n      web: {\n        paddingTop: 6,\n        paddingLeft: 4,\n      },\n    }),\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6,\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4,\n    }),\n  },\n  txtPreview: {\n    fontWeight: '600',\n    fontSize: 16,\n    lineHeight: 22,\n  },\n});\n"],"mappings":"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","ignoreList":[]}