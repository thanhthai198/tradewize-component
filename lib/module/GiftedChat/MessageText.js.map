{"version":3,"names":["React","Linking","StyleSheet","View","ParsedText","useChatContext","error","WWW_URL_PATTERN","textStyle","create","fontSize","lineHeight","marginTop","marginBottom","marginLeft","marginRight","styles","left","container","text","color","link","textDecorationLine","right","DEFAULT_OPTION_TITLES","MessageText","currentMessage","optionTitles","position","containerStyle","linkStyle","linkStyleProp","customTextStyle","parsePatterns","textProps","actionSheet","onUrlPress","url","test","openURL","catch","e","onPhonePress","phone","options","length","slice","cancelButtonIndex","showActionSheetWithOptions","buttonIndex","onEmailPress","email","createElement","style","parse","type","onPress","childrenProps"],"sources":["MessageText.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Linking,\r\n  StyleSheet,\r\n  View,\r\n  type TextProps,\r\n  type StyleProp,\r\n  type ViewStyle,\r\n  type TextStyle,\r\n} from 'react-native';\r\n\r\nimport ParsedText from 'react-native-parsed-text';\r\nimport { type LeftRightStyle, type IMessage } from './types';\r\nimport { useChatContext } from './GiftedChatContext';\r\nimport { error } from './logging';\r\n\r\nconst WWW_URL_PATTERN = /^www\\./i;\r\n\r\nconst { textStyle } = StyleSheet.create({\r\n  textStyle: {\r\n    fontSize: 16,\r\n    lineHeight: 20,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nconst styles = {\r\n  left: StyleSheet.create({\r\n    container: {},\r\n    text: {\r\n      color: 'black',\r\n      ...textStyle,\r\n    },\r\n    link: {\r\n      color: 'black',\r\n      textDecorationLine: 'underline',\r\n    },\r\n  }),\r\n  right: StyleSheet.create({\r\n    container: {},\r\n    text: {\r\n      color: 'white',\r\n      ...textStyle,\r\n    },\r\n    link: {\r\n      color: 'white',\r\n      textDecorationLine: 'underline',\r\n    },\r\n  }),\r\n};\r\n\r\nconst DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];\r\n\r\nexport interface MessageTextProps<TMessage extends IMessage> {\r\n  position?: 'left' | 'right';\r\n  optionTitles?: string[];\r\n  currentMessage: TMessage;\r\n  containerStyle?: LeftRightStyle<ViewStyle>;\r\n  textStyle?: LeftRightStyle<TextStyle>;\r\n  linkStyle?: LeftRightStyle<TextStyle>;\r\n  textProps?: TextProps;\r\n  customTextStyle?: StyleProp<TextStyle>;\r\n  parsePatterns?: (linkStyle: TextStyle) => [];\r\n}\r\n\r\nexport function MessageText<TMessage extends IMessage = IMessage>({\r\n  currentMessage = {} as TMessage,\r\n  optionTitles = DEFAULT_OPTION_TITLES,\r\n  position = 'left',\r\n  containerStyle,\r\n  textStyle,\r\n  linkStyle: linkStyleProp,\r\n  customTextStyle,\r\n  parsePatterns,\r\n  textProps,\r\n}: MessageTextProps<TMessage>) {\r\n  const { actionSheet } = useChatContext();\r\n\r\n  // TODO: React.memo\r\n  // const shouldComponentUpdate = (nextProps: MessageTextProps<TMessage>) => {\r\n  //   return (\r\n  //     !!currentMessage &&\r\n  //     !!nextProps.currentMessage &&\r\n  //     currentMessage.text !== nextProps.currentMessage.text\r\n  //   )\r\n  // }\r\n\r\n  const onUrlPress = (url: string) => {\r\n    // When someone sends a message that includes a website address beginning with \"www.\" (omitting the scheme),\r\n    // react-native-parsed-text recognizes it as a valid url, but Linking fails to open due to the missing scheme.\r\n    if (WWW_URL_PATTERN.test(url)) onUrlPress(`https://${url}`);\r\n    else\r\n      Linking.openURL(url).catch((e) => {\r\n        error(e, 'No handler for URL:', url);\r\n      });\r\n  };\r\n\r\n  const onPhonePress = (phone: string) => {\r\n    const options =\r\n      optionTitles && optionTitles.length > 0\r\n        ? optionTitles.slice(0, 3)\r\n        : DEFAULT_OPTION_TITLES;\r\n    const cancelButtonIndex = options.length - 1;\r\n    actionSheet().showActionSheetWithOptions(\r\n      {\r\n        options,\r\n        cancelButtonIndex,\r\n      },\r\n      (buttonIndex?: number) => {\r\n        switch (buttonIndex) {\r\n          case 0:\r\n            Linking.openURL(`tel:${phone}`).catch((e) => {\r\n              error(e, 'No handler for telephone');\r\n            });\r\n            break;\r\n          case 1:\r\n            Linking.openURL(`sms:${phone}`).catch((e) => {\r\n              error(e, 'No handler for text');\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const onEmailPress = (email: string) =>\r\n    Linking.openURL(`mailto:${email}`).catch((e) =>\r\n      error(e, 'No handler for mailto')\r\n    );\r\n\r\n  const linkStyle = [styles[position].link, linkStyleProp?.[position]];\r\n  return (\r\n    <View style={[styles[position].container, containerStyle?.[position]]}>\r\n      <ParsedText\r\n        style={[styles[position].text, textStyle?.[position], customTextStyle]}\r\n        parse={[\r\n          ...(parsePatterns\r\n            ? parsePatterns(linkStyle as unknown as TextStyle)\r\n            : []),\r\n          { type: 'url', style: linkStyle, onPress: onUrlPress },\r\n          { type: 'phone', style: linkStyle, onPress: onPhonePress },\r\n          { type: 'email', style: linkStyle, onPress: onEmailPress },\r\n        ]}\r\n        childrenProps={{ ...textProps }}\r\n      >\r\n        {currentMessage!.text}\r\n      </ParsedText>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]}