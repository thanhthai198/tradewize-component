{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import React, { type Component, type RefObject } from 'react';\r\nimport {\r\n  type FlatListProps,\r\n  type StyleProp,\r\n  type ViewStyle,\r\n} from 'react-native';\r\n\r\nimport { type LoadEarlierProps } from '../LoadEarlier';\r\nimport { type MessageProps } from '../Message';\r\nimport {\r\n  type User,\r\n  type IMessage,\r\n  type Reply,\r\n  type DayProps,\r\n  type FileMessage,\r\n} from '../types';\r\nimport { type ReanimatedScrollEvent } from 'react-native-reanimated/lib/typescript/hook/commonTypes';\r\nimport { type FlatList } from 'react-native-reanimated/lib/typescript/Animated';\r\nimport { type AnimateProps } from 'react-native-reanimated';\r\n\r\nexport type ListViewProps<TMessage extends IMessage = IMessage> = Partial<\r\n  FlatListProps<TMessage>\r\n>;\r\n\r\nexport type AnimatedList<TMessage> = Component<\r\n  AnimateProps<FlatListProps<TMessage>>,\r\n  unknown,\r\n  unknown\r\n> &\r\n  FlatList<FlatListProps<TMessage>>;\r\n\r\nexport interface MessageContainerProps<TMessage extends IMessage = IMessage> {\r\n  forwardRef?: RefObject<AnimatedList<TMessage>>;\r\n  messages?: TMessage[];\r\n  isTyping?: boolean;\r\n  user?: User;\r\n  listViewProps?: ListViewProps;\r\n  inverted?: boolean;\r\n  loadEarlier?: boolean;\r\n  alignTop?: boolean;\r\n  isScrollToBottomEnabled?: boolean;\r\n  scrollToBottomStyle?: StyleProp<ViewStyle>;\r\n  invertibleScrollViewProps?: object;\r\n  extraData?: object;\r\n  scrollToBottomOffset?: number;\r\n  renderChatEmpty?(): React.ReactNode;\r\n  renderFooter?(props: MessageContainerProps<TMessage>): React.ReactNode;\r\n  renderMessage?(props: MessageProps<TMessage>): React.ReactElement;\r\n  renderDay?(props: DayProps): React.ReactNode;\r\n  renderLoadEarlier?(props: LoadEarlierProps): React.ReactNode;\r\n  renderTypingIndicator?(): React.ReactNode;\r\n  scrollToBottomComponent?(): React.ReactNode;\r\n  onLoadEarlier?(): void;\r\n  onQuickReply?(replies: Reply[]): void;\r\n  infiniteScroll?: boolean;\r\n  isLoadingEarlier?: boolean;\r\n  handleOnScroll?(event: ReanimatedScrollEvent): void;\r\n  onPressFile?(file: FileMessage): void;\r\n  onLongPressReaction?(\r\n    message: TMessage,\r\n    position: {\r\n      x: number;\r\n      y: number;\r\n      width: number;\r\n      height: number;\r\n      pageX: number;\r\n      pageY: number;\r\n    }\r\n  ): void;\r\n}\r\n\r\nexport interface State {\r\n  showScrollBottom: boolean;\r\n  hasScrolled: boolean;\r\n}\r\n\r\ninterface ViewLayout {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport type DaysPositions = {\r\n  [key: string]: ViewLayout & { createdAt: number };\r\n};\r\n"],"mappings":"","ignoreList":[]}