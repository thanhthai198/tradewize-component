{"version":3,"names":["dayjs","createThumbnail","mime","isSameDay","currentMessage","diffMessage","createdAt","currentCreatedAt","diffCreatedAt","isValid","isSame","isSameUser","user","_id","chunkArray","array","size","result","i","length","push","slice","generateThumbnails","videoList","results","Promise","all","map","video","index","url","uri","timeStamp","path","e","console","error","id","formatDurationSmart","seconds","totalSeconds","Math","ceil","days","floor","hours","minutes","secondsLeft","padSeconds","n","String","padStart","parts","join","normalizeFileUri","log","cleaned","replace","getFileTypeFromPath","mimeType","getType"],"sources":["utils.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\nimport { type FileMessage, type IMessage } from './types';\nimport { createThumbnail } from 'react-native-create-thumbnail';\nimport mime from 'mime';\n\nexport function isSameDay(\n  currentMessage: IMessage,\n  diffMessage: IMessage | null | undefined\n) {\n  if (!diffMessage || !diffMessage.createdAt) return false;\n\n  const currentCreatedAt = dayjs(currentMessage.createdAt);\n  const diffCreatedAt = dayjs(diffMessage.createdAt);\n\n  if (!currentCreatedAt.isValid() || !diffCreatedAt.isValid()) return false;\n\n  return currentCreatedAt.isSame(diffCreatedAt, 'day');\n}\n\nexport function isSameUser(\n  currentMessage: IMessage,\n  diffMessage: IMessage | null | undefined\n) {\n  return !!(\n    diffMessage &&\n    diffMessage.user &&\n    currentMessage.user &&\n    diffMessage.user._id === currentMessage.user._id\n  );\n}\n\nexport function chunkArray<T>(array: T[], size: number): T[][] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n\nexport const generateThumbnails = async (videoList: FileMessage[]) => {\n  const results = await Promise.all(\n    videoList.map(async (video, index) => {\n      try {\n        const result = await createThumbnail({\n          url: video.uri,\n          timeStamp: 500,\n        });\n        return { index, path: result.path };\n      } catch (e) {\n        console.error(`Lỗi với video ${video.id}`, e);\n        return { index, path: '' };\n      }\n    })\n  );\n\n  return results;\n};\n\nexport const formatDurationSmart = (seconds: number) => {\n  const totalSeconds = Math.ceil(seconds);\n\n  const days = Math.floor(totalSeconds / 86400);\n  const hours = Math.floor((totalSeconds % 86400) / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const secondsLeft = totalSeconds % 60;\n\n  const padSeconds = (n: number) => String(n).padStart(2, '0');\n\n  const parts: string[] = [];\n\n  if (days) parts.push(String(days));\n  if (days || hours) parts.push(String(hours)); // chỉ show giờ nếu có ngày hoặc giờ\n  parts.push(String(minutes));\n  parts.push(padSeconds(secondsLeft));\n\n  return parts.join(':');\n};\n\nexport const normalizeFileUri = (uri: string): string => {\n  if (!uri) return uri;\n  console.log('uri', uri);\n\n  // Loại bỏ mọi tiền tố 'file://' nếu có (đề phòng lỗi)\n  const cleaned = uri.replace(/^file:\\/+/, '');\n  console.log('cleaned', cleaned);\n\n  return `file://${cleaned}`;\n};\n\nexport function getFileTypeFromPath(path: string): string | null {\n  if (!path) return null;\n\n  const mimeType = mime.getType(path);\n  return mimeType || null;\n}\n"],"mappings":"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","ignoreList":[]}