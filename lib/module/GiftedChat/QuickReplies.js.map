{"version":3,"names":["React","useState","useMemo","useCallback","Text","StyleSheet","View","TouchableOpacity","Color","warning","stylesCommon","styles","create","container","flexDirection","flexWrap","maxWidth","quickReply","borderWidth","paddingVertical","paddingHorizontal","minHeight","borderRadius","margin","quickReplyText","overflow","sendLink","sendLinkText","color","defaultBlue","fontWeight","fontSize","sameReply","currentReply","reply","value","diffReply","QuickReplies","currentMessage","nextMessage","peterRiver","quickReplyStyle","quickReplyTextStyle","quickReplyContainerStyle","onQuickReply","sendText","renderQuickReplySend","type","quickReplies","replies","setReplies","shouldComponentDisplay","hasReplies","hasNext","_id","keepIt","handleSend","repliesData","map","messageId","handlePress","find","filter","createElement","style","values","index","selected","onPress","centerItems","borderColor","backgroundColor","key","numberOfLines","ellipsizeMode","white","title","length"],"sources":["QuickReplies.tsx"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  Text,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  type StyleProp,\n  type ViewStyle,\n  type TextStyle,\n} from 'react-native';\nimport { type IMessage, type Reply } from './types';\nimport Color from './Color';\nimport { warning } from './logging';\nimport stylesCommon from './styles';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300,\n  },\n  quickReply: {\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3,\n  },\n  quickReplyText: {\n    overflow: 'visible',\n  },\n  sendLink: {\n    borderWidth: 0,\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17,\n  },\n});\n\nexport interface QuickRepliesProps<TMessage extends IMessage = IMessage> {\n  nextMessage?: TMessage;\n  currentMessage: TMessage;\n  color?: string;\n  sendText?: string;\n  quickReplyStyle?: StyleProp<ViewStyle>;\n  quickReplyTextStyle?: StyleProp<TextStyle>;\n  quickReplyContainerStyle?: StyleProp<ViewStyle>;\n  onQuickReply?(reply: Reply[]): void;\n  renderQuickReplySend?(): React.ReactNode;\n}\n\nconst sameReply = (currentReply: Reply) => (reply: Reply) =>\n  currentReply.value === reply.value;\n\nconst diffReply = (currentReply: Reply) => (reply: Reply) =>\n  currentReply.value !== reply.value;\n\nexport function QuickReplies({\n  currentMessage,\n  nextMessage,\n  color = Color.peterRiver,\n  quickReplyStyle,\n  quickReplyTextStyle,\n  quickReplyContainerStyle,\n  onQuickReply,\n  sendText = 'Send',\n  renderQuickReplySend,\n}: QuickRepliesProps<IMessage>) {\n  const { type } = currentMessage!.quickReplies!;\n  const [replies, setReplies] = useState<Reply[]>([]);\n\n  const shouldComponentDisplay = useMemo(() => {\n    const hasReplies = !!currentMessage && !!currentMessage!.quickReplies;\n    const hasNext = !!nextMessage && !!nextMessage!._id;\n    const keepIt = currentMessage!.quickReplies!.keepIt;\n\n    if (hasReplies && !hasNext) return true;\n\n    if (hasReplies && hasNext && keepIt) return true;\n\n    return false;\n  }, [currentMessage, nextMessage]);\n\n  const handleSend = useCallback(\n    (repliesData: Reply[]) => () => {\n      onQuickReply?.(\n        repliesData.map((reply: Reply) => ({\n          ...reply,\n          messageId: currentMessage!._id,\n        }))\n      );\n    },\n    [onQuickReply, currentMessage]\n  );\n\n  const handlePress = useCallback(\n    (reply: Reply) => () => {\n      if (currentMessage) {\n        const { type } = currentMessage.quickReplies!;\n        switch (type) {\n          case 'radio': {\n            handleSend([reply])();\n            return;\n          }\n          case 'checkbox': {\n            if (replies.find(sameReply(reply)))\n              setReplies(replies.filter(diffReply(reply)));\n            else setReplies([...replies, reply]);\n\n            return;\n          }\n          default: {\n            warning(`onQuickReply unknown type: ${type}`);\n          }\n        }\n      }\n    },\n    [replies, currentMessage, handleSend]\n  );\n\n  if (!shouldComponentDisplay) return null;\n\n  return (\n    <View style={[styles.container, quickReplyContainerStyle]}>\n      {currentMessage!.quickReplies!.values.map(\n        (reply: Reply, index: number) => {\n          const selected =\n            type === 'checkbox' && replies.find(sameReply(reply));\n\n          return (\n            <TouchableOpacity\n              onPress={handlePress(reply)}\n              style={[\n                stylesCommon.centerItems,\n                styles.quickReply,\n                quickReplyStyle,\n                { borderColor: color },\n                selected && { backgroundColor: color },\n              ]}\n              key={`${reply.value}-${index}`}\n            >\n              <Text\n                numberOfLines={10}\n                ellipsizeMode=\"tail\"\n                style={[\n                  styles.quickReplyText,\n                  { color: selected ? Color.white : color },\n                  quickReplyTextStyle,\n                ]}\n              >\n                {reply.title}\n              </Text>\n            </TouchableOpacity>\n          );\n        }\n      )}\n      {replies.length > 0 && (\n        <TouchableOpacity\n          style={[stylesCommon.centerItems, styles.quickReply, styles.sendLink]}\n          onPress={handleSend(replies)}\n        >\n          {renderQuickReplySend?.() || (\n            <Text style={styles.sendLinkText}>{sendText}</Text>\n          )}\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]}