{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import { type LayoutChangeEvent, type ViewStyle } from 'react-native';\r\nimport { type AvatarProps } from '../Avatar';\r\nimport { type SystemMessageProps } from '../SystemMessage';\r\nimport { type DayProps } from '../Day';\r\nimport {\r\n  type IMessage,\r\n  type User,\r\n  type LeftRightStyle,\r\n  type FileMessage,\r\n} from '../types';\r\nimport { type BubbleProps } from '../Bubble';\r\n\r\nexport interface MessageProps<TMessage extends IMessage> {\r\n  showUserAvatar?: boolean;\r\n  position: 'left' | 'right';\r\n  currentMessage: TMessage;\r\n  nextMessage?: TMessage;\r\n  previousMessage?: TMessage;\r\n  user: User;\r\n  inverted?: boolean;\r\n  containerStyle?: LeftRightStyle<ViewStyle>;\r\n  renderBubble?(props: BubbleProps<TMessage>): React.ReactNode;\r\n  renderDay?(props: DayProps): React.ReactNode;\r\n  renderSystemMessage?(props: SystemMessageProps<TMessage>): React.ReactNode;\r\n  renderAvatar?(props: AvatarProps<TMessage>): React.ReactNode;\r\n  shouldUpdateMessage?(\r\n    props: MessageProps<IMessage>,\r\n    nextProps: MessageProps<IMessage>\r\n  ): boolean;\r\n  onPressFile?(file: FileMessage): void;\r\n  onLongPressReaction?(\r\n    message: TMessage,\r\n    position: {\r\n      x: number;\r\n      y: number;\r\n      width: number;\r\n      height: number;\r\n      pageX: number;\r\n      pageY: number;\r\n    }\r\n  ): void;\r\n  onMessageLayout?(event: LayoutChangeEvent): void;\r\n}\r\n"],"mappings":"","ignoreList":[]}