{"version":3,"names":["StyleSheet","View","Color","MessageFile","MessageText","getScreenWidth","React","MessageReply","messageReply","onPressFile","onSaveThumbnail","_messageReply$file","createElement","style","styles","container","file","length","currentMessage","messageWidth","width","_id","text","space","position","customTextStyle","color","black","create","backgroundColor","minWidth","borderRadius","marginBottom","borderWidth","borderColor","height"],"sources":["MessageReply.tsx"],"sourcesContent":["import { StyleSheet, View } from 'react-native';\r\nimport Color from './Color';\r\nimport { type FileMessage, type IMessage } from './types';\r\nimport { MessageFile } from './MessageFile';\r\nimport { MessageText } from './MessageText';\r\nimport { getScreenWidth } from '../utils';\r\nimport React from 'react';\r\n\r\ninterface MessageReplyProps {\r\n  messageReply: IMessage;\r\n  onPressFile?: (\r\n    file: FileMessage,\r\n    isShowAll?: boolean,\r\n    arrMedia?: IMessage\r\n  ) => void;\r\n  onSaveThumbnail?: (file: FileMessage[]) => void;\r\n}\r\n\r\nexport function MessageReply({\r\n  messageReply,\r\n  onPressFile,\r\n  onSaveThumbnail,\r\n}: MessageReplyProps) {\r\n  return (\r\n    <View style={styles.container}>\r\n      {messageReply?.file?.length && (\r\n        <MessageFile\r\n          onPressFile={onPressFile}\r\n          onSaveThumbnail={onSaveThumbnail}\r\n          currentMessage={messageReply}\r\n          messageWidth={{ width: getScreenWidth() * 0.9, _id: '1' }}\r\n        />\r\n      )}\r\n      {!messageReply?.text && <View style={styles.space} />}\r\n      {messageReply?.text && (\r\n        <MessageText\r\n          currentMessage={messageReply}\r\n          position=\"left\"\r\n          customTextStyle={{ color: Color.black }}\r\n        />\r\n      )}\r\n      <View style={styles.space} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.02)',\r\n    minWidth: getScreenWidth() * 0.12,\r\n    borderRadius: 8,\r\n    marginBottom: -4,\r\n    borderWidth: 0.5,\r\n    borderColor: 'rgba(0, 0, 0, 0.05)',\r\n  },\r\n  space: {\r\n    height: 4,\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,QAAQ,cAAc;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAE3B,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,cAAc,QAAQ,UAAU;AACzC,OAAOC,KAAK,MAAM,OAAO;AAYzB,OAAO,SAASC,YAAYA,CAAC;EAC3BC,YAAY;EACZC,WAAW;EACXC;AACiB,CAAC,EAAE;EAAA,IAAAC,kBAAA;EACpB,oBACEL,KAAA,CAAAM,aAAA,CAACX,IAAI;IAACY,KAAK,EAAEC,MAAM,CAACC;EAAU,GAC3B,CAAAP,YAAY,aAAZA,YAAY,gBAAAG,kBAAA,GAAZH,YAAY,CAAEQ,IAAI,cAAAL,kBAAA,uBAAlBA,kBAAA,CAAoBM,MAAM,kBACzBX,KAAA,CAAAM,aAAA,CAACT,WAAW;IACVM,WAAW,EAAEA,WAAY;IACzBC,eAAe,EAAEA,eAAgB;IACjCQ,cAAc,EAAEV,YAAa;IAC7BW,YAAY,EAAE;MAAEC,KAAK,EAAEf,cAAc,CAAC,CAAC,GAAG,GAAG;MAAEgB,GAAG,EAAE;IAAI;EAAE,CAC3D,CACF,EACA,EAACb,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEc,IAAI,kBAAIhB,KAAA,CAAAM,aAAA,CAACX,IAAI;IAACY,KAAK,EAAEC,MAAM,CAACS;EAAM,CAAE,CAAC,EACpD,CAAAf,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEc,IAAI,kBACjBhB,KAAA,CAAAM,aAAA,CAACR,WAAW;IACVc,cAAc,EAAEV,YAAa;IAC7BgB,QAAQ,EAAC,MAAM;IACfC,eAAe,EAAE;MAAEC,KAAK,EAAExB,KAAK,CAACyB;IAAM;EAAE,CACzC,CACF,eACDrB,KAAA,CAAAM,aAAA,CAACX,IAAI;IAACY,KAAK,EAAEC,MAAM,CAACS;EAAM,CAAE,CACxB,CAAC;AAEX;AAEA,MAAMT,MAAM,GAAGd,UAAU,CAAC4B,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,eAAe,EAAE,qBAAqB;IACtCC,QAAQ,EAAEzB,cAAc,CAAC,CAAC,GAAG,IAAI;IACjC0B,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC,CAAC;IAChBC,WAAW,EAAE,GAAG;IAChBC,WAAW,EAAE;EACf,CAAC;EACDX,KAAK,EAAE;IACLY,MAAM,EAAE;EACV;AACF,CAAC,CAAC","ignoreList":[]}