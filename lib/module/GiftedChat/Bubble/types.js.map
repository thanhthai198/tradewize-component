{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import type React from 'react';\r\nimport type { StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport type { QuickRepliesProps } from '../QuickReplies';\r\nimport type { MessageTextProps } from '../MessageText';\r\nimport type { TimeProps } from '../Time';\r\nimport type {\r\n  User,\r\n  IMessage,\r\n  LeftRightStyle,\r\n  Reply,\r\n  Omit,\r\n  MessageVideoProps,\r\n  MessageAudioProps,\r\n  FileMessage,\r\n} from '../types';\r\n\r\nexport type RenderCustomMessageFileProps<TMessage extends IMessage> = Omit<\r\n  BubbleProps<TMessage>,\r\n  'containerStyle' | 'wrapperStyle'\r\n> &\r\n  MessageVideoProps<TMessage>;\r\n\r\nexport type RenderMessageAudioProps<TMessage extends IMessage> = Omit<\r\n  BubbleProps<TMessage>,\r\n  'containerStyle' | 'wrapperStyle'\r\n> &\r\n  MessageAudioProps<TMessage>;\r\n\r\nexport type RenderMessageTextProps<TMessage extends IMessage> = Omit<\r\n  BubbleProps<TMessage>,\r\n  'containerStyle' | 'wrapperStyle'\r\n> &\r\n  MessageTextProps<TMessage>;\r\n\r\nexport interface BubbleProps<TMessage extends IMessage> {\r\n  user?: User;\r\n  touchableProps?: object;\r\n  renderUsernameOnMessage?: boolean;\r\n  isCustomViewBottom?: boolean;\r\n  inverted?: boolean;\r\n  position: 'left' | 'right';\r\n  currentMessage: TMessage;\r\n  nextMessage?: TMessage;\r\n  previousMessage?: TMessage;\r\n  optionTitles?: string[];\r\n  containerStyle?: LeftRightStyle<ViewStyle>;\r\n  wrapperStyle?: LeftRightStyle<ViewStyle>;\r\n  textStyle?: LeftRightStyle<TextStyle>;\r\n  bottomContainerStyle?: LeftRightStyle<ViewStyle>;\r\n  tickStyle?: StyleProp<TextStyle>;\r\n  containerToNextStyle?: LeftRightStyle<ViewStyle>;\r\n  containerToPreviousStyle?: LeftRightStyle<ViewStyle>;\r\n  usernameStyle?: TextStyle;\r\n  quickReplyStyle?: StyleProp<ViewStyle>;\r\n  quickReplyTextStyle?: StyleProp<TextStyle>;\r\n  quickReplyContainerStyle?: StyleProp<ViewStyle>;\r\n  isReaction?: boolean;\r\n  onPress?(context?: unknown, message?: unknown): void;\r\n  onLongPress?(context?: unknown, message?: unknown): void;\r\n  onQuickReply?(replies: Reply[]): void;\r\n  renderCustomMessageFile?(\r\n    props: RenderCustomMessageFileProps<TMessage>\r\n  ): React.ReactNode;\r\n  renderMessageAudio?(\r\n    props: RenderMessageAudioProps<TMessage>\r\n  ): React.ReactNode;\r\n  renderMessageText?(props: RenderMessageTextProps<TMessage>): React.ReactNode;\r\n  renderCustomView?(bubbleProps: BubbleProps<TMessage>): React.ReactNode;\r\n  renderTime?(timeProps: TimeProps<TMessage>): React.ReactNode;\r\n  renderTicks?(currentMessage: TMessage): React.ReactNode;\r\n  renderUsername?(user?: TMessage['user']): React.ReactNode;\r\n  renderQuickReplySend?(): React.ReactNode;\r\n  renderQuickReplies?(\r\n    quickReplies: QuickRepliesProps<TMessage>\r\n  ): React.ReactNode;\r\n  onPressFile?(image: FileMessage): void;\r\n  onLongPressReaction?(\r\n    message: TMessage,\r\n    position: {\r\n      x: number;\r\n      y: number;\r\n      width: number;\r\n      height: number;\r\n      pageX: number;\r\n      pageY: number;\r\n    }\r\n  ): void;\r\n}\r\n"],"mappings":"","ignoreList":[]}