{"version":3,"names":["React","useRef","useState","useEffect","TouchableOpacity","PanResponder","Animated","StyleSheet","Image","Popup","FanMenu","getScreenHeight","getScreenWidth","getDirection","MIN_EDGE_DISTANCE","FloatButton","onPress","children","size","backgroundColor","initialPosition","style","icon","iconColor","showPopup","popupContent","popupWidth","popupHeight","popupBackgroundColor","popupBorderRadius","onPopupClose","showFanMenu","menuItems","menuRadius","menuStartAngle","menuEndAngle","menuItemBackgroundColor","menuItemIconColor","onMenuClose","mainButtonSize","minEdgeDistance","yAxisEndLimit","yAxisStartLimit","pan","ValueXY","current","rotateAnim","Value","isDragging","setIsDragging","popupVisible","setPopupVisible","fanMenuVisible","setFanMenuVisible","buttonPosition","setButtonPosition","x","y","rotateDirection","setRotateDirection","timing","toValue","duration","useNativeDriver","start","setValue","defaultPos","horizontal","vertical","panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","setOffset","_value","onPanResponderMove","event","dx","dy","onPanResponderRelease","flattenOffset","newX","newY","finalX","finalY","finalPosition","spring","tension","friction","rotate","interpolate","inputRange","outputRange","handlePress","length","handlePopupClose","handleFanMenuClose","createElement","Fragment","View","_extends","styles","container","width","height","transform","translateX","translateY","panHandlers","button","borderRadius","activeOpacity","tintColor","defaultIcon","source","require","visible","onClose","position","items","radius","startAngle","endAngle","itemBackgroundColor","zIndex","alignItems","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["index.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport {\n  TouchableOpacity,\n  PanResponder,\n  Animated,\n  StyleSheet,\n  Image,\n} from 'react-native';\nimport Popup from './Popup';\nimport FanMenu from './FanMenu';\nimport { getScreenHeight, getScreenWidth } from '../utils';\nimport { getDirection } from './utils';\nimport type { MenuItem } from './type';\n\ninterface FloatButtonProps {\n  onPress?: () => void;\n  children?: React.ReactNode;\n  size?: number;\n  backgroundColor?: string;\n  initialPosition?: { x: number; y: number };\n  style?: any;\n  icon?: any;\n  iconColor?: string;\n  // Popup props\n  showPopup?: boolean;\n  popupContent?: React.ReactNode;\n  popupWidth?: number;\n  popupHeight?: number;\n  popupBackgroundColor?: string;\n  popupBorderRadius?: number;\n  onPopupClose?: () => void;\n  // Fan Menu props\n  showFanMenu?: boolean;\n  menuItems?: MenuItem[];\n  menuRadius?: number;\n  menuStartAngle?: number;\n  menuEndAngle?: number;\n  menuItemBackgroundColor?: string;\n  menuItemIconColor?: string;\n  onMenuClose?: () => void;\n  // Main button props for fan menu\n  mainButtonSize?: number;\n  mainButtonColor?: string;\n  mainButtonIcon?: string;\n  // Minimum distance from screen edges\n  minEdgeDistance?: number;\n  // Y axis limit\n  yAxisEndLimit?: number;\n  yAxisStartLimit?: number;\n}\n\nconst MIN_EDGE_DISTANCE = 16;\n\nconst FloatButton: React.FC<FloatButtonProps> = ({\n  onPress,\n  children,\n  size = 60,\n  backgroundColor = '#007AFF',\n  initialPosition,\n  style,\n  icon,\n  iconColor = '#FFFFFF',\n  // Popup props\n  showPopup = false,\n  popupContent,\n  popupWidth = 200,\n  popupHeight = 150,\n  popupBackgroundColor = '#FFFFFF',\n  popupBorderRadius = 12,\n  onPopupClose,\n  // Fan Menu props\n  showFanMenu = false,\n  menuItems = [],\n  menuRadius = 90,\n  menuStartAngle = 90,\n  menuEndAngle = 270,\n  menuItemBackgroundColor = '#007AFF',\n  menuItemIconColor = '#FFFFFF',\n  onMenuClose,\n  // Main button props for fan menu\n  mainButtonSize = 60,\n  // mainButtonColor = '#007AFF',\n  // mainButtonIcon = '+',\n  // Minimum distance from screen edges\n  minEdgeDistance = 16,\n  // Y axis limit\n  yAxisEndLimit = 50,\n  yAxisStartLimit = 50,\n}) => {\n  const pan = useRef(new Animated.ValueXY()).current;\n  const rotateAnim = useRef(new Animated.Value(0)).current;\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [fanMenuVisible, setFanMenuVisible] = useState(false);\n  const [buttonPosition, setButtonPosition] = useState({ x: 0, y: 0 });\n  const [rotateDirection, setRotateDirection] = useState<string[]>([\n    '0deg',\n    '-180deg',\n  ]);\n\n  useEffect(() => {\n    Animated.timing(rotateAnim, {\n      toValue: fanMenuVisible ? 1 : 0, // 1 = 180°, 0 = 0°\n      duration: 400,\n      useNativeDriver: false,\n    }).start();\n  }, [fanMenuVisible, rotateAnim]);\n\n  // Set initial position\n  useEffect(() => {\n    if (initialPosition) {\n      pan.setValue(initialPosition);\n      setButtonPosition(initialPosition);\n    } else {\n      // Default position: bottom right corner\n      const defaultPos = {\n        x: getScreenWidth() - size - MIN_EDGE_DISTANCE,\n        y: getScreenHeight() - size - getScreenHeight() * 0.25,\n      };\n      pan.setValue(defaultPos);\n      setButtonPosition(defaultPos);\n    }\n  }, [initialPosition, size, pan]);\n\n  // Set rotate direction\n  useEffect(() => {\n    const { horizontal, vertical } = getDirection(buttonPosition);\n    if (horizontal === 'right' && vertical === 'bottom') {\n      setRotateDirection(['0deg', '-180deg']);\n    } else if (horizontal === 'right' && vertical === 'top') {\n      setRotateDirection(['-180deg', '0deg']);\n    } else if (horizontal === 'left' && vertical === 'bottom') {\n      setRotateDirection(['0deg', '-180deg']);\n    } else if (horizontal === 'left' && vertical === 'top') {\n      setRotateDirection(['-180deg', '0deg']);\n    }\n  }, [buttonPosition, rotateAnim]);\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        setIsDragging(true);\n        pan.setOffset({\n          x: (pan.x as any)._value,\n          y: (pan.y as any)._value,\n        });\n        pan.setValue({ x: 0, y: 0 });\n      },\n      onPanResponderMove: Animated.event([null, { dx: pan.x, dy: pan.y }], {\n        useNativeDriver: false,\n      }),\n      onPanResponderRelease: () => {\n        setIsDragging(false);\n        pan.flattenOffset();\n\n        // Snap to edges if near screen boundaries\n        const newX = (pan.x as any)._value;\n        const newY = (pan.y as any)._value;\n\n        let finalX = newX;\n        let finalY = newY;\n\n        // Snap to left or right edge\n        if (newX < getScreenWidth() / 2) {\n          finalX = minEdgeDistance;\n        } else {\n          finalX = getScreenWidth() - size - minEdgeDistance;\n        }\n\n        // Ensure button stays within screen bounds\n        if (finalY < yAxisStartLimit) {\n          finalY = yAxisStartLimit;\n        } else if (\n          finalY >\n          getScreenHeight() - size - yAxisStartLimit - yAxisEndLimit\n        ) {\n          finalY = getScreenHeight() - size - yAxisStartLimit - yAxisEndLimit;\n        }\n\n        const finalPosition = { x: finalX, y: finalY };\n        setButtonPosition(finalPosition);\n\n        Animated.spring(pan, {\n          toValue: finalPosition,\n          useNativeDriver: false,\n          tension: 100,\n          friction: 8,\n        }).start();\n      },\n    })\n  ).current;\n\n  const rotate = rotateAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: rotateDirection,\n  });\n\n  const handlePress = () => {\n    if (!isDragging) {\n      if (showFanMenu && menuItems.length > 0) {\n        setFanMenuVisible(true);\n      } else if (showPopup && popupContent) {\n        setPopupVisible(true);\n      } else if (onPress) {\n        onPress();\n      }\n    }\n  };\n\n  const handlePopupClose = () => {\n    setPopupVisible(false);\n    if (onPopupClose) {\n      onPopupClose();\n    }\n  };\n\n  const handleFanMenuClose = () => {\n    setFanMenuVisible(false);\n    if (onMenuClose) {\n      onMenuClose();\n    }\n  };\n\n  return (\n    <>\n      <Animated.View\n        style={[\n          styles.container,\n          {\n            width: size,\n            height: size,\n            transform: [\n              { translateX: pan.x },\n              { translateY: pan.y },\n              { rotate },\n            ],\n          },\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        <TouchableOpacity\n          style={[\n            styles.button,\n            {\n              width: size,\n              height: size,\n              backgroundColor,\n              borderRadius: size / 2,\n            },\n          ]}\n          onPress={handlePress}\n          activeOpacity={0.8}\n        >\n          {children || (\n            <Image\n              tintColor={iconColor}\n              style={styles.defaultIcon}\n              source={icon ? icon : require('./assets/setting.png')}\n            />\n          )}\n        </TouchableOpacity>\n      </Animated.View>\n\n      {/* Popup */}\n      {showPopup && popupContent && (\n        <Popup\n          visible={popupVisible}\n          onClose={handlePopupClose}\n          position={buttonPosition}\n          width={popupWidth}\n          height={popupHeight}\n          backgroundColor={popupBackgroundColor}\n          borderRadius={popupBorderRadius}\n        >\n          {popupContent}\n        </Popup>\n      )}\n\n      {/* Fan Menu */}\n      {showFanMenu && menuItems.length > 0 && (\n        <FanMenu\n          visible={fanMenuVisible}\n          onClose={handleFanMenuClose}\n          items={menuItems}\n          position={buttonPosition}\n          radius={menuRadius}\n          startAngle={menuStartAngle}\n          endAngle={menuEndAngle}\n          itemBackgroundColor={menuItemBackgroundColor}\n          iconColor={menuItemIconColor}\n          mainButtonSize={mainButtonSize}\n          // mainButtonColor={mainButtonColor}\n          // mainButtonIcon={mainButtonIcon}\n          minEdgeDistance={minEdgeDistance}\n        />\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    zIndex: 1000,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  defaultIcon: {\n    width: 24,\n    height: 24,\n  },\n});\n\nexport default FloatButton;\n"],"mappings":"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","ignoreList":[]}