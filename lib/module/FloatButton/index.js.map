{"version":3,"names":["React","useRef","useState","useEffect","TouchableOpacity","PanResponder","Animated","StyleSheet","Image","Popup","FanMenu","getScreenHeight","getScreenWidth","getDirection","MIN_EDGE_DISTANCE","DRAG_THRESHOLD","TAP_DELAY","FloatButton","onPress","children","size","backgroundColor","initialPosition","style","icon","iconColor","isPlusEdgeDistance","showPopup","popupContent","popupWidth","popupHeight","popupBackgroundColor","popupBorderRadius","onPopupClose","showFanMenu","menuItems","menuRadius","menuStartAngle","menuEndAngle","menuItemBackgroundColor","menuItemIconColor","onMenuClose","styleIconItem","mainButtonSize","minEdgeDistance","yAxisEndLimit","yAxisStartLimit","pan","ValueXY","current","rotateAnim","Value","isDragging","setIsDragging","popupVisible","setPopupVisible","fanMenuVisible","setFanMenuVisible","buttonPosition","setButtonPosition","x","y","rotateDirection","setRotateDirection","startPosition","startTime","hasMoved","timing","toValue","duration","useNativeDriver","start","setValue","defaultPos","horizontal","vertical","panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","_evt","gestureState","Math","abs","dx","dy","onPanResponderGrant","x0","y0","Date","now","setOffset","_value","onPanResponderMove","evt","distance","sqrt","pow","event","onPanResponderRelease","endTime","timeDiff","flattenOffset","newX","newY","finalX","finalY","finalPosition","spring","tension","friction","setTimeout","rotate","interpolate","inputRange","outputRange","handlePress","console","log","length","handlePopupClose","handleFanMenuClose","createElement","Fragment","View","_extends","styles","container","width","height","transform","translateX","translateY","panHandlers","button","borderRadius","activeOpacity","delayPressIn","delayPressOut","tintColor","defaultIcon","source","require","visible","onClose","position","items","radius","startAngle","endAngle","itemBackgroundColor","stylesIcon","zIndex","alignItems","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["index.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport {\n  TouchableOpacity,\n  PanResponder,\n  Animated,\n  StyleSheet,\n  Image,\n  type StyleProp,\n  type ImageStyle,\n} from 'react-native';\nimport Popup from './Popup';\nimport FanMenu from './FanMenu';\nimport { getScreenHeight, getScreenWidth } from 'tradewize';\nimport { getDirection } from './utils';\nimport type { MenuItem } from './type';\n\ninterface FloatButtonProps {\n  onPress?: () => void;\n  children?: React.ReactNode;\n  size?: number;\n  backgroundColor?: string;\n  initialPosition?: { x: number; y: number };\n  style?: any;\n  icon?: any;\n  iconColor?: string;\n  isPlusEdgeDistance?: boolean;\n  // Popup props\n  showPopup?: boolean;\n  popupContent?: React.ReactNode;\n  popupWidth?: number;\n  popupHeight?: number;\n  popupBackgroundColor?: string;\n  popupBorderRadius?: number;\n  onPopupClose?: () => void;\n  // Fan Menu props\n  showFanMenu?: boolean;\n  menuItems?: MenuItem[];\n  menuRadius?: number;\n  menuStartAngle?: number;\n  menuEndAngle?: number;\n  menuItemBackgroundColor?: string;\n  menuItemIconColor?: string;\n  styleIconItem?: StyleProp<ImageStyle>;\n  onMenuClose?: () => void;\n  // Main button props for fan menu\n  mainButtonSize?: number;\n  mainButtonColor?: string;\n  mainButtonIcon?: string;\n  // Minimum distance from screen edges\n  minEdgeDistance?: number;\n  // Y axis limit\n  yAxisEndLimit?: number;\n  yAxisStartLimit?: number;\n}\n\nconst MIN_EDGE_DISTANCE = 16;\nconst DRAG_THRESHOLD = 10; // Minimum distance to consider as drag\nconst TAP_DELAY = 200; // Maximum time to consider as tap\n\nexport const FloatButton: React.FC<FloatButtonProps> = ({\n  onPress,\n  children,\n  size = 60,\n  backgroundColor = '#007AFF',\n  initialPosition,\n  style,\n  icon,\n  iconColor = '#FFFFFF',\n  isPlusEdgeDistance = false,\n  // Popup props\n  showPopup = false,\n  popupContent,\n  popupWidth = 200,\n  popupHeight = 150,\n  popupBackgroundColor = '#FFFFFF',\n  popupBorderRadius = 12,\n  onPopupClose,\n  // Fan Menu props\n  showFanMenu = false,\n  menuItems = [],\n  menuRadius = 90,\n  menuStartAngle = 90,\n  menuEndAngle = 270,\n  menuItemBackgroundColor = '#007AFF',\n  menuItemIconColor,\n  onMenuClose,\n  styleIconItem,\n  // Main button props for fan menu\n  mainButtonSize = 60,\n  // mainButtonColor = '#007AFF',\n  // mainButtonIcon = '+',\n  // Minimum distance from screen edges\n  minEdgeDistance = 16,\n  // Y axis limit\n  yAxisEndLimit = 50,\n  yAxisStartLimit = 50,\n}) => {\n  const pan = useRef(new Animated.ValueXY()).current;\n  const rotateAnim = useRef(new Animated.Value(0)).current;\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [fanMenuVisible, setFanMenuVisible] = useState(false);\n  const [buttonPosition, setButtonPosition] = useState({ x: 0, y: 0 });\n  const [rotateDirection, setRotateDirection] = useState<string[]>([\n    '0deg',\n    '-180deg',\n  ]);\n\n  // Add refs for better drag detection\n  const startPosition = useRef({ x: 0, y: 0 });\n  const startTime = useRef(0);\n  const hasMoved = useRef(false);\n\n  useEffect(() => {\n    Animated.timing(rotateAnim, {\n      toValue: fanMenuVisible ? 1 : 0, // 1 = 180°, 0 = 0°\n      duration: 400,\n      useNativeDriver: false,\n    }).start();\n  }, [fanMenuVisible, rotateAnim]);\n\n  // Set initial position\n  useEffect(() => {\n    if (initialPosition) {\n      pan.setValue(initialPosition);\n      setButtonPosition(initialPosition);\n    } else {\n      // Default position: bottom right corner\n      const defaultPos = {\n        x: getScreenWidth() - size - MIN_EDGE_DISTANCE,\n        y: getScreenHeight() - size - getScreenHeight() * 0.25,\n      };\n      pan.setValue(defaultPos);\n      setButtonPosition(defaultPos);\n    }\n  }, [initialPosition, size, pan]);\n\n  // Set rotate direction\n  useEffect(() => {\n    const { horizontal, vertical } = getDirection(buttonPosition);\n    if (horizontal === 'right' && vertical === 'bottom') {\n      setRotateDirection(['0deg', '-180deg']);\n    } else if (horizontal === 'right' && vertical === 'top') {\n      setRotateDirection(['-180deg', '0deg']);\n    } else if (horizontal === 'left' && vertical === 'bottom') {\n      setRotateDirection(['0deg', '-180deg']);\n    } else if (horizontal === 'left' && vertical === 'top') {\n      setRotateDirection(['-180deg', '0deg']);\n    }\n  }, [buttonPosition, rotateAnim]);\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: (_evt, gestureState) => {\n        // Only start pan responder if movement exceeds threshold\n        return (\n          Math.abs(gestureState.dx) > DRAG_THRESHOLD ||\n          Math.abs(gestureState.dy) > DRAG_THRESHOLD\n        );\n      },\n      onPanResponderGrant: (_evt, gestureState) => {\n        startPosition.current = { x: gestureState.x0, y: gestureState.y0 };\n        startTime.current = Date.now();\n        hasMoved.current = false;\n        setIsDragging(false);\n\n        pan.setOffset({\n          x: (pan.x as any)._value,\n          y: (pan.y as any)._value,\n        });\n        pan.setValue({ x: 0, y: 0 });\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        const distance = Math.sqrt(\n          Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)\n        );\n\n        if (distance > DRAG_THRESHOLD) {\n          hasMoved.current = true;\n          setIsDragging(true);\n        }\n\n        Animated.event([null, { dx: pan.x, dy: pan.y }], {\n          useNativeDriver: false,\n        })(evt, gestureState);\n      },\n      onPanResponderRelease: (_evt, gestureState) => {\n        const endTime = Date.now();\n        const timeDiff = endTime - startTime.current;\n        const distance = Math.sqrt(\n          Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)\n        );\n\n        // If it's a quick tap with minimal movement, don't consider it as drag\n        if (timeDiff < TAP_DELAY && distance < DRAG_THRESHOLD) {\n          setIsDragging(false);\n          hasMoved.current = false;\n        }\n\n        pan.flattenOffset();\n\n        // Only snap to edges if we actually dragged\n        if (hasMoved.current) {\n          // Snap to edges if near screen boundaries\n          const newX = (pan.x as any)._value;\n          const newY = (pan.y as any)._value;\n\n          let finalX = newX;\n          let finalY = newY;\n\n          // Snap to left or right edge\n          if (newX < getScreenWidth() / 2) {\n            finalX = minEdgeDistance;\n          } else {\n            finalX = getScreenWidth() - size - minEdgeDistance;\n          }\n\n          // Ensure button stays within screen bounds\n          if (finalY < yAxisStartLimit) {\n            finalY = yAxisStartLimit;\n          } else if (\n            finalY >\n            getScreenHeight() - size - yAxisStartLimit - yAxisEndLimit\n          ) {\n            finalY = getScreenHeight() - size - yAxisStartLimit - yAxisEndLimit;\n          }\n\n          const finalPosition = { x: finalX, y: finalY };\n          setButtonPosition(finalPosition);\n\n          Animated.spring(pan, {\n            toValue: finalPosition,\n            useNativeDriver: false,\n            tension: 100,\n            friction: 8,\n          }).start();\n        }\n\n        // Reset drag state after a short delay\n        setTimeout(() => {\n          setIsDragging(false);\n          hasMoved.current = false;\n        }, 100);\n      },\n    })\n  ).current;\n\n  const rotate = rotateAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: rotateDirection,\n  });\n\n  const handlePress = () => {\n    console.log('isDragging', isDragging);\n    console.log('hasMoved', hasMoved.current);\n\n    if (!isDragging && !hasMoved.current) {\n      if (showFanMenu && menuItems.length > 0) {\n        setFanMenuVisible(true);\n      } else if (showPopup && popupContent) {\n        setPopupVisible(true);\n      } else if (onPress) {\n        onPress();\n      }\n    }\n  };\n\n  const handlePopupClose = () => {\n    setPopupVisible(false);\n    if (onPopupClose) {\n      onPopupClose();\n    }\n  };\n\n  const handleFanMenuClose = () => {\n    setFanMenuVisible(false);\n    if (onMenuClose) {\n      onMenuClose();\n    }\n  };\n\n  return (\n    <>\n      <Animated.View\n        style={[\n          styles.container,\n          {\n            width: size,\n            height: size,\n            transform: [\n              { translateX: pan.x },\n              { translateY: pan.y },\n              { rotate },\n            ],\n          },\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        <TouchableOpacity\n          style={[\n            styles.button,\n            {\n              width: size,\n              height: size,\n              backgroundColor,\n              borderRadius: size / 2,\n            },\n          ]}\n          onPress={handlePress}\n          activeOpacity={0.8}\n          delayPressIn={0}\n          delayPressOut={0}\n        >\n          {children || (\n            <Image\n              tintColor={iconColor}\n              style={styles.defaultIcon}\n              source={icon ? icon : require('./assets/setting.png')}\n            />\n          )}\n        </TouchableOpacity>\n      </Animated.View>\n\n      {/* Popup */}\n      {showPopup && popupContent && (\n        <Popup\n          visible={popupVisible}\n          onClose={handlePopupClose}\n          position={buttonPosition}\n          width={popupWidth}\n          height={popupHeight}\n          backgroundColor={popupBackgroundColor}\n          borderRadius={popupBorderRadius}\n        >\n          {popupContent}\n        </Popup>\n      )}\n\n      {/* Fan Menu */}\n      {showFanMenu && menuItems.length > 0 && (\n        <FanMenu\n          visible={fanMenuVisible}\n          onClose={handleFanMenuClose}\n          items={menuItems}\n          position={buttonPosition}\n          radius={menuRadius}\n          startAngle={menuStartAngle}\n          endAngle={menuEndAngle}\n          itemBackgroundColor={menuItemBackgroundColor}\n          iconColor={menuItemIconColor}\n          mainButtonSize={mainButtonSize}\n          // mainButtonColor={mainButtonColor}\n          // mainButtonIcon={mainButtonIcon}\n          minEdgeDistance={minEdgeDistance}\n          isPlusEdgeDistance={isPlusEdgeDistance}\n          stylesIcon={styleIconItem}\n        />\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    zIndex: 1000,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  defaultIcon: {\n    width: 24,\n    height: 24,\n  },\n});\n"],"mappings":"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","ignoreList":[]}