{"version":3,"names":["Dimensions","getScreenWidth","get","width","getScreenHeight","height","parseVtt","vtt","lines","split","entries","i","length","_lines$i","line","trim","includes","startRaw","endRaw","map","s","start","timeToSeconds","end","text","j","_lines$j","_lines$j2","push","time","hh","mm","ss","ms","parseInt"],"sources":["index.tsx"],"sourcesContent":["import { Dimensions } from 'react-native';\r\nimport type { SubtitleEntry } from '../types';\r\n\r\nconst getScreenWidth = () => {\r\n  return Dimensions.get('window').width;\r\n};\r\n\r\nconst getScreenHeight = () => {\r\n  return Dimensions.get('window').height;\r\n};\r\n\r\nconst parseVtt = (vtt: string): SubtitleEntry[] => {\r\n  const lines = vtt.split('\\n');\r\n  const entries: SubtitleEntry[] = [];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const line = lines[i]?.trim();\r\n    if (!line) continue;\r\n\r\n    if (line.includes('-->')) {\r\n      const [startRaw, endRaw] = line.split('-->').map((s) => s.trim());\r\n      if (!startRaw || !endRaw) continue;\r\n\r\n      const start = timeToSeconds(startRaw);\r\n      const end = timeToSeconds(endRaw);\r\n\r\n      let text = '';\r\n      let j = i + 1;\r\n      while (j < lines.length && lines[j]?.trim()) {\r\n        text += lines[j]?.trim() + ' ';\r\n        j++;\r\n      }\r\n\r\n      entries.push({ start, end, text: text.trim() });\r\n    }\r\n  }\r\n\r\n  return entries;\r\n};\r\n\r\nconst timeToSeconds = (time: string): number => {\r\n  const [hh, mm, ss] = time.split(':');\r\n  if (!hh || !mm || !ss) return 0;\r\n\r\n  const [s, ms] = ss.split('.');\r\n  if (!s) return 0;\r\n\r\n  return (\r\n    parseInt(hh, 10) * 3600 +\r\n    parseInt(mm, 10) * 60 +\r\n    parseInt(s, 10) +\r\n    parseInt(ms || '0', 10) / 1000\r\n  );\r\n};\r\n\r\nexport { getScreenWidth, getScreenHeight, parseVtt };\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AAGzC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOD,UAAU,CAACE,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AACvC,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,OAAOJ,UAAU,CAACE,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;AACxC,CAAC;AAED,MAAMC,QAAQ,GAAIC,GAAW,IAAsB;EACjD,MAAMC,KAAK,GAAGD,GAAG,CAACE,KAAK,CAAC,IAAI,CAAC;EAC7B,MAAMC,OAAwB,GAAG,EAAE;EAEnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAAA,IAAAE,QAAA;IACrC,MAAMC,IAAI,IAAAD,QAAA,GAAGL,KAAK,CAACG,CAAC,CAAC,cAAAE,QAAA,uBAARA,QAAA,CAAUE,IAAI,CAAC,CAAC;IAC7B,IAAI,CAACD,IAAI,EAAE;IAEX,IAAIA,IAAI,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE;MACxB,MAAM,CAACC,QAAQ,EAAEC,MAAM,CAAC,GAAGJ,IAAI,CAACL,KAAK,CAAC,KAAK,CAAC,CAACU,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;MACjE,IAAI,CAACE,QAAQ,IAAI,CAACC,MAAM,EAAE;MAE1B,MAAMG,KAAK,GAAGC,aAAa,CAACL,QAAQ,CAAC;MACrC,MAAMM,GAAG,GAAGD,aAAa,CAACJ,MAAM,CAAC;MAEjC,IAAIM,IAAI,GAAG,EAAE;MACb,IAAIC,CAAC,GAAGd,CAAC,GAAG,CAAC;MACb,OAAOc,CAAC,GAAGjB,KAAK,CAACI,MAAM,KAAAc,QAAA,GAAIlB,KAAK,CAACiB,CAAC,CAAC,cAAAC,QAAA,eAARA,QAAA,CAAUX,IAAI,CAAC,CAAC,EAAE;QAAA,IAAAW,QAAA,EAAAC,SAAA;QAC3CH,IAAI,IAAI,EAAAG,SAAA,GAAAnB,KAAK,CAACiB,CAAC,CAAC,cAAAE,SAAA,uBAARA,SAAA,CAAUZ,IAAI,CAAC,CAAC,IAAG,GAAG;QAC9BU,CAAC,EAAE;MACL;MAEAf,OAAO,CAACkB,IAAI,CAAC;QAAEP,KAAK;QAAEE,GAAG;QAAEC,IAAI,EAAEA,IAAI,CAACT,IAAI,CAAC;MAAE,CAAC,CAAC;IACjD;EACF;EAEA,OAAOL,OAAO;AAChB,CAAC;AAED,MAAMY,aAAa,GAAIO,IAAY,IAAa;EAC9C,MAAM,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGH,IAAI,CAACpB,KAAK,CAAC,GAAG,CAAC;EACpC,IAAI,CAACqB,EAAE,IAAI,CAACC,EAAE,IAAI,CAACC,EAAE,EAAE,OAAO,CAAC;EAE/B,MAAM,CAACZ,CAAC,EAAEa,EAAE,CAAC,GAAGD,EAAE,CAACvB,KAAK,CAAC,GAAG,CAAC;EAC7B,IAAI,CAACW,CAAC,EAAE,OAAO,CAAC;EAEhB,OACEc,QAAQ,CAACJ,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,GACvBI,QAAQ,CAACH,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,GACrBG,QAAQ,CAACd,CAAC,EAAE,EAAE,CAAC,GACfc,QAAQ,CAACD,EAAE,IAAI,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI;AAElC,CAAC;AAED,SAAShC,cAAc,EAAEG,eAAe,EAAEE,QAAQ","ignoreList":[]}