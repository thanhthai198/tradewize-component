{"version":3,"names":["_utils","require","loadSubtitles","vttUrl","res","fetch","ok","console","warn","status","vttText","text","trim","parsed","parseVtt","length","err","error","exports","isYoutubeUrl","url","test","extractYoutubeId","match"],"sources":["index.tsx"],"sourcesContent":["import type { SubtitleEntry } from '../types';\r\nimport { parseVtt } from '../utils';\r\n\r\n//thanhthai198.github.io/my_cdn/subtitle/videoTest/es.vtt\r\nexport const loadSubtitles = async (\r\n  vttUrl: string\r\n): Promise<SubtitleEntry[]> => {\r\n  try {\r\n    if (!vttUrl) {\r\n      return [];\r\n    }\r\n    const res = await fetch(vttUrl);\r\n\r\n    if (!res.ok) {\r\n      console.warn(`[Subtitle] Failed to fetch: ${res.status}`);\r\n      return [];\r\n    }\r\n\r\n    const vttText = await res.text();\r\n\r\n    if (!vttText.trim()) {\r\n      console.warn('[Subtitle] Empty subtitle file.');\r\n      return [];\r\n    }\r\n\r\n    const parsed = parseVtt(vttText);\r\n    if (!parsed.length) {\r\n      console.warn('[Subtitle] Parsed subtitle is empty.');\r\n    }\r\n\r\n    return parsed;\r\n  } catch (err) {\r\n    console.error('[Subtitle] Load error:', err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const isYoutubeUrl = (url: string): boolean => {\r\n  return /(?:youtube\\.com|youtu\\.be)/.test(url);\r\n};\r\n\r\nexport const extractYoutubeId = (url: string): string | null => {\r\n  const match = url.match(/(?:v=|\\/)([0-9A-Za-z_-]{11})/);\r\n  return match && match[1] ? match[1] : null;\r\n};\r\n"],"mappings":";;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AAEA;AACO,MAAMC,aAAa,GAAG,MAC3BC,MAAc,IACe;EAC7B,IAAI;IACF,IAAI,CAACA,MAAM,EAAE;MACX,OAAO,EAAE;IACX;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;IAE/B,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE;MACXC,OAAO,CAACC,IAAI,CAAC,+BAA+BJ,GAAG,CAACK,MAAM,EAAE,CAAC;MACzD,OAAO,EAAE;IACX;IAEA,MAAMC,OAAO,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;IAEhC,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC,CAAC,EAAE;MACnBL,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;MAC/C,OAAO,EAAE;IACX;IAEA,MAAMK,MAAM,GAAG,IAAAC,eAAQ,EAACJ,OAAO,CAAC;IAChC,IAAI,CAACG,MAAM,CAACE,MAAM,EAAE;MAClBR,OAAO,CAACC,IAAI,CAAC,sCAAsC,CAAC;IACtD;IAEA,OAAOK,MAAM;EACf,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZT,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;IAC5C,OAAO,EAAE;EACX;AACF,CAAC;AAACE,OAAA,CAAAhB,aAAA,GAAAA,aAAA;AAEK,MAAMiB,YAAY,GAAIC,GAAW,IAAc;EACpD,OAAO,4BAA4B,CAACC,IAAI,CAACD,GAAG,CAAC;AAC/C,CAAC;AAACF,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAEK,MAAMG,gBAAgB,GAAIF,GAAW,IAAoB;EAC9D,MAAMG,KAAK,GAAGH,GAAG,CAACG,KAAK,CAAC,8BAA8B,CAAC;EACvD,OAAOA,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5C,CAAC;AAACL,OAAA,CAAAI,gBAAA,GAAAA,gBAAA","ignoreList":[]}