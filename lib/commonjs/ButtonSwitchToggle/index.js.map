{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_extends","assign","bind","arguments","length","apply","useSwitchToggle","value","onValueChange","disabled","loading","hapticFeedback","hapticType","internalValue","setInternalValue","useState","currentValue","undefined","triggerHaptic","useCallback","Vibration","vibrate","handleToggle","newValue","useSwitchDimensions","size","width","height","thumbSize","useMemo","_sizes","_sizes2","_sizes3","sizes","small","medium","large","dimensions","maxTranslateX","useSwitchColors","variant","activeBackgroundColor","inactiveBackgroundColor","thumbColor","activeThumbColor","inactiveThumbColor","variantColors","primary","active","inactive","secondary","outline","ghost","danger","success","warning","variantColor","backgroundColor","ButtonSwitchToggle","style","containerStyle","animationDuration","useSpringAnimation","springConfig","tension","friction","shadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","accessibilityLabel","accessibilityHint","customTrack","customThumb","switchWidth","switchHeight","thumbDiameter","currentThumbColor","translateX","useRef","Animated","Value","current","animateToPosition","toValue","callback","spring","useNativeDriver","start","timing","duration","useEffect","newTranslateX","switchStyle","styles","switch","borderRadius","elevation","thumbStyle","thumb","transform","interpolate","inputRange","outputRange","accessibilityProps","accessibilityRole","accessibilityState","checked","accessibilityActions","name","label","createElement","View","container","TouchableOpacity","onPress","activeOpacity","StyleSheet","create","alignItems","justifyContent","position","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n  useMemo,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  Animated,\n  TouchableOpacity,\n  Vibration,\n} from 'react-native';\nimport type { ViewStyle } from 'react-native';\n\nexport interface ButtonSwitchToggleProps {\n  // Basic props\n  value?: boolean;\n  onValueChange?: (value: boolean) => void;\n  disabled?: boolean;\n  loading?: boolean;\n\n  // Styling props\n  size?: 'small' | 'medium' | 'large';\n  variant?:\n    | 'primary'\n    | 'secondary'\n    | 'outline'\n    | 'ghost'\n    | 'danger'\n    | 'success'\n    | 'warning';\n\n  // Custom colors\n  activeBackgroundColor?: string;\n  inactiveBackgroundColor?: string;\n  thumbColor?: string;\n  activeThumbColor?: string;\n  inactiveThumbColor?: string;\n\n  // Layout props\n  width?: number;\n  height?: number;\n  thumbSize?: number;\n\n  // Custom styles\n  style?: ViewStyle;\n  containerStyle?: ViewStyle;\n\n  // Animation props\n  animationDuration?: number;\n  useSpringAnimation?: boolean;\n  springConfig?: {\n    tension?: number;\n    friction?: number;\n  };\n\n  // Shadow props\n  shadow?: boolean;\n  shadowColor?: string;\n  shadowOffset?: { width: number; height: number };\n  shadowOpacity?: number;\n  shadowRadius?: number;\n\n  // Accessibility props\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n\n  // Haptic feedback\n  hapticFeedback?: boolean;\n  hapticType?: 'light' | 'medium' | 'heavy';\n\n  // Custom components\n  customTrack?: React.ReactNode;\n  customThumb?: React.ReactNode;\n}\n\n// Custom hook for switch logic\nconst useSwitchToggle = (\n  value: boolean,\n  onValueChange?: (value: boolean) => void,\n  disabled = false,\n  loading = false,\n  hapticFeedback = false,\n  hapticType: 'light' | 'medium' | 'heavy' = 'light'\n) => {\n  const [internalValue, setInternalValue] = useState(value);\n  const currentValue = value !== undefined ? value : internalValue;\n\n  const triggerHaptic = useCallback(() => {\n    if (hapticFeedback) {\n      switch (hapticType) {\n        case 'light':\n          Vibration.vibrate(10);\n          break;\n        case 'medium':\n          Vibration.vibrate(50);\n          break;\n        case 'heavy':\n          Vibration.vibrate(100);\n          break;\n      }\n    }\n  }, [hapticFeedback, hapticType]);\n\n  const handleToggle = useCallback(() => {\n    if (disabled || loading) return;\n\n    const newValue = !currentValue;\n\n    // Update internal state if uncontrolled\n    if (value === undefined) {\n      setInternalValue(newValue);\n    }\n\n    // Trigger haptic feedback\n    triggerHaptic();\n\n    // Call external callback\n    onValueChange?.(newValue);\n  }, [currentValue, disabled, loading, value, onValueChange, triggerHaptic]);\n\n  return {\n    currentValue,\n    handleToggle,\n  };\n};\n\n// Custom hook for switch dimensions\nconst useSwitchDimensions = (\n  size: string,\n  width?: number,\n  height?: number,\n  thumbSize?: number\n) => {\n  return useMemo(() => {\n    const sizes = {\n      small: { width: 44, height: 24, thumbSize: 20 },\n      medium: { width: 52, height: 28, thumbSize: 24 },\n      large: { width: 60, height: 32, thumbSize: 28 },\n    };\n\n    const dimensions = {\n      width:\n        width || sizes[size as keyof typeof sizes]?.width || sizes.medium.width,\n      height:\n        height ||\n        sizes[size as keyof typeof sizes]?.height ||\n        sizes.medium.height,\n      thumbSize:\n        thumbSize ||\n        sizes[size as keyof typeof sizes]?.thumbSize ||\n        sizes.medium.thumbSize,\n    };\n\n    return {\n      ...dimensions,\n      maxTranslateX: dimensions.width - dimensions.thumbSize,\n    };\n  }, [size, width, height, thumbSize]);\n};\n\n// Custom hook for switch colors\nconst useSwitchColors = (\n  variant: string,\n  currentValue: boolean,\n  activeBackgroundColor?: string,\n  inactiveBackgroundColor?: string,\n  thumbColor?: string,\n  activeThumbColor?: string,\n  inactiveThumbColor?: string\n) => {\n  return useMemo(() => {\n    const variantColors = {\n      primary: { active: '#007bff', inactive: '#e9ecef' },\n      secondary: { active: '#6c757d', inactive: '#e9ecef' },\n      outline: { active: '#007bff', inactive: '#e9ecef' },\n      ghost: { active: '#007bff', inactive: '#e9ecef' },\n      danger: { active: '#dc3545', inactive: '#e9ecef' },\n      success: { active: '#28a745', inactive: '#e9ecef' },\n      warning: { active: '#ffc107', inactive: '#e9ecef' },\n    };\n\n    const variantColor =\n      variantColors[variant as keyof typeof variantColors] ||\n      variantColors.primary;\n\n    return {\n      backgroundColor: currentValue\n        ? activeBackgroundColor || variantColor.active\n        : inactiveBackgroundColor || variantColor.inactive,\n      thumbColor: currentValue\n        ? activeThumbColor || thumbColor || '#ffffff'\n        : inactiveThumbColor || thumbColor || '#ffffff',\n    };\n  }, [\n    variant,\n    currentValue,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    thumbColor,\n    activeThumbColor,\n    inactiveThumbColor,\n  ]);\n};\n\nconst ButtonSwitchToggle: React.FC<ButtonSwitchToggleProps> = ({\n  // Basic props\n  value = false,\n  onValueChange,\n  disabled = false,\n  loading = false,\n\n  // Styling props\n  size = 'medium',\n  variant = 'primary',\n\n  // Custom colors\n  activeBackgroundColor,\n  inactiveBackgroundColor,\n  thumbColor,\n  activeThumbColor,\n  inactiveThumbColor,\n\n  // Layout props\n  width,\n  height,\n  thumbSize,\n\n  // Custom styles\n  style,\n  containerStyle,\n\n  // Animation props\n  animationDuration = 300,\n  useSpringAnimation = false,\n  springConfig = { tension: 100, friction: 8 },\n\n  // Shadow props\n  shadow = false,\n  shadowColor = '#000',\n  shadowOffset = { width: 0, height: 2 },\n  shadowOpacity = 0.25,\n  shadowRadius = 3.84,\n\n  // Accessibility props\n  accessibilityLabel,\n  accessibilityHint,\n\n  // Haptic feedback\n  hapticFeedback = false,\n  hapticType = 'light',\n\n  // Custom components\n  customTrack,\n  customThumb,\n}) => {\n  // Custom hooks\n  const { currentValue, handleToggle } = useSwitchToggle(\n    value,\n    onValueChange,\n    disabled,\n    loading,\n    hapticFeedback,\n    hapticType\n  );\n\n  const {\n    width: switchWidth,\n    height: switchHeight,\n    thumbSize: thumbDiameter,\n    maxTranslateX,\n  } = useSwitchDimensions(size, width, height, thumbSize);\n\n  const { backgroundColor, thumbColor: currentThumbColor } = useSwitchColors(\n    variant,\n    currentValue,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    thumbColor,\n    activeThumbColor,\n    inactiveThumbColor\n  );\n\n  // Initialize translateX after maxTranslateX is calculated\n  const translateX = useRef(\n    new Animated.Value(currentValue ? maxTranslateX : 0)\n  ).current;\n\n  // Animate to position with improved animation\n  const animateToPosition = useCallback(\n    (toValue: number, callback?: () => void) => {\n      if (useSpringAnimation) {\n        Animated.spring(translateX, {\n          toValue,\n          useNativeDriver: true,\n          ...springConfig,\n        }).start(callback);\n      } else {\n        Animated.timing(translateX, {\n          toValue,\n          duration: animationDuration,\n          useNativeDriver: true,\n        }).start(callback);\n      }\n    },\n    [translateX, animationDuration, useSpringAnimation, springConfig]\n  );\n\n  // Update animation when value changes externally\n  useEffect(() => {\n    const newTranslateX = currentValue ? maxTranslateX : 0;\n    animateToPosition(newTranslateX);\n  }, [currentValue, maxTranslateX, animateToPosition]);\n\n  // Memoized styles for better performance\n  const switchStyle = useMemo(\n    (): ViewStyle[] => [\n      styles.switch,\n      {\n        width: switchWidth,\n        height: switchHeight,\n        backgroundColor,\n        borderRadius: switchHeight / 2,\n        ...(shadow && {\n          shadowColor,\n          shadowOffset,\n          shadowOpacity,\n          shadowRadius,\n          elevation: shadowRadius,\n        }),\n      },\n      ...(style ? [style] : []),\n    ],\n    [\n      switchWidth,\n      switchHeight,\n      backgroundColor,\n      shadow,\n      shadowColor,\n      shadowOffset,\n      shadowOpacity,\n      shadowRadius,\n      style,\n    ]\n  );\n\n  const thumbStyle = useMemo(\n    (): ViewStyle[] => [\n      styles.thumb,\n      {\n        width: thumbDiameter,\n        height: thumbDiameter,\n        borderRadius: thumbDiameter / 2,\n        backgroundColor: currentThumbColor,\n        transform: [\n          {\n            translateX: translateX.interpolate({\n              inputRange: [0, maxTranslateX],\n              outputRange: [0, maxTranslateX],\n            }),\n          },\n        ],\n      },\n    ],\n    [thumbDiameter, currentThumbColor, translateX, maxTranslateX]\n  );\n\n  // Accessibility props\n  const accessibilityProps = useMemo(\n    () => ({\n      accessibilityLabel:\n        accessibilityLabel || `${currentValue ? 'ON' : 'OFF'} toggle switch`,\n      accessibilityHint:\n        accessibilityHint ||\n        `Double tap to ${currentValue ? 'turn off' : 'turn on'}`,\n      accessibilityRole: 'switch' as const,\n      accessibilityState: { checked: currentValue },\n      accessibilityActions: [\n        { name: 'activate', label: currentValue ? 'Turn off' : 'Turn on' },\n      ],\n    }),\n    [accessibilityLabel, accessibilityHint, currentValue]\n  );\n\n  return (\n    <View style={[styles.container, containerStyle]}>\n      <TouchableOpacity\n        onPress={handleToggle}\n        disabled={disabled || loading}\n        activeOpacity={0.8}\n        style={switchStyle}\n        {...accessibilityProps}\n      >\n        {customTrack || (\n          <Animated.View style={thumbStyle}>{customThumb}</Animated.View>\n        )}\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  switch: {\n    position: 'relative',\n    justifyContent: 'center',\n  },\n  thumb: {\n    position: 'absolute',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n});\n\nexport default ButtonSwitchToggle;\n"],"mappings":"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","ignoreList":[]}