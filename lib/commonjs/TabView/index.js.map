{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_ButtonBase","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_extends","assign","bind","arguments","length","apply","TabView","tabs","initialTabIndex","onTabChange","tabBarPosition","scrollable","fullWidth","equalWidth","tabBarStyle","tabStyle","contentStyle","indicatorStyle","showIndicator","tabVariant","tabSize","tabShape","activeTabVariant","activeTabBackgroundColor","activeTabTextColor","inactiveTabBackgroundColor","inactiveTabTextColor","indicatorColor","animated","animationDuration","scrollViewProps","containerStyle","tabBarContainerStyle","contentContainerStyle","activeTabIndex","setActiveTabIndex","useState","tabLayouts","setTabLayouts","tabBarRef","useRef","indicatorAnim","Animated","Value","current","tabWidthAnim","useEffect","activeTab","key","layout","x","width","parallel","timing","toValue","duration","useNativeDriver","start","setValue","handleTabPress","useCallback","index","tab","disabled","screenWidth","Dimensions","scrollToX","Math","max","scrollTo","handleTabLayout","tabKey","event","nativeEvent","prev","renderTabBar","tabBarContent","createElement","View","style","styles","tabBar","map","isActive","isDisabled","tabContainer","tabContainerEqualWidth","onLayout","ButtonBase","title","variant","size","shape","backgroundColor","textColor","onPress","leftIcon","icon","rightIcon","badge","badgeContainer","String","textStyle","fontSize","undefined","tabButton","activeTabButton","textAlign","indicator","transform","translateX","ScrollView","ref","horizontal","showsHorizontalScrollIndicator","scrollableTabBar","flexGrow","tabBarContainer","renderContent","content","container","exports","StyleSheet","create","flex","borderBottomWidth","borderBottomColor","overflow","flexDirection","position","alignItems","flexShrink","minWidth","borderRadius","bottom","height","marginLeft"],"sources":["index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  Dimensions,\n  Animated,\n} from 'react-native';\nimport type { ScrollViewProps, ViewStyle } from 'react-native';\nimport { ButtonBase } from '../ButtonBase';\n\nexport interface TabItem {\n  key: string;\n  title: string;\n  content?: React.ReactNode;\n  disabled?: boolean;\n  badge?: string | number;\n  icon?: React.ReactNode;\n}\n\nexport interface TabViewProps {\n  // Basic props\n  tabs: TabItem[];\n  initialTabIndex?: number;\n  onTabChange?: (index: number, tab: TabItem) => void;\n\n  // Layout props\n  tabBarPosition?: 'top' | 'bottom';\n  scrollable?: boolean;\n  fullWidth?: boolean;\n  equalWidth?: boolean; // New prop to explicitly control equal width distribution\n\n  // Styling props\n  tabBarStyle?: ViewStyle;\n  tabStyle?: ViewStyle;\n  contentStyle?: ViewStyle;\n  indicatorStyle?: ViewStyle;\n  showIndicator?: boolean; // New prop to control indicator visibility\n\n  // Tab button props\n  tabVariant?:\n    | 'primary'\n    | 'secondary'\n    | 'outline'\n    | 'ghost'\n    | 'danger'\n    | 'success'\n    | 'warning';\n  tabSize?: 'small' | 'medium' | 'large' | 'xlarge';\n  tabShape?: 'rounded' | 'pill' | 'square';\n  activeTabVariant?:\n    | 'primary'\n    | 'secondary'\n    | 'outline'\n    | 'ghost'\n    | 'danger'\n    | 'success'\n    | 'warning';\n\n  // Colors\n  activeTabBackgroundColor?: string;\n  activeTabTextColor?: string;\n  inactiveTabBackgroundColor?: string;\n  inactiveTabTextColor?: string;\n  indicatorColor?: string;\n\n  // Animation props\n  animated?: boolean;\n  animationDuration?: number;\n\n  // ScrollView props\n  scrollViewProps?: ScrollViewProps;\n\n  // Custom styles\n  containerStyle?: ViewStyle;\n  tabBarContainerStyle?: ViewStyle;\n  contentContainerStyle?: ViewStyle;\n}\n\nexport const TabView: React.FC<TabViewProps> = ({\n  // Basic props\n  tabs,\n  initialTabIndex = 0,\n  onTabChange,\n\n  // Layout props\n  tabBarPosition = 'top',\n  scrollable = false,\n  fullWidth = false,\n  equalWidth = false,\n\n  // Styling props\n  tabBarStyle,\n  tabStyle,\n  contentStyle,\n  indicatorStyle,\n  showIndicator = false,\n\n  // Tab button props\n  tabVariant = 'ghost',\n  tabSize = 'medium',\n  tabShape = 'rounded',\n  activeTabVariant = 'primary',\n\n  // Colors\n  activeTabBackgroundColor,\n  activeTabTextColor,\n  inactiveTabBackgroundColor,\n  inactiveTabTextColor,\n  indicatorColor = '#007bff',\n\n  // Animation props\n  animated = true,\n  animationDuration = 300,\n\n  // ScrollView props\n  scrollViewProps,\n\n  // Custom styles\n  containerStyle,\n  tabBarContainerStyle,\n  contentContainerStyle,\n}) => {\n  const [activeTabIndex, setActiveTabIndex] = useState(initialTabIndex);\n  const [tabLayouts, setTabLayouts] = useState<{\n    [key: string]: { x: number; width: number };\n  }>({});\n  const tabBarRef = useRef<ScrollView>(null);\n  const indicatorAnim = useRef(new Animated.Value(0)).current;\n  const tabWidthAnim = useRef(new Animated.Value(0)).current;\n\n  // Validate initial tab index\n  useEffect(() => {\n    if (initialTabIndex >= 0 && initialTabIndex < tabs.length) {\n      setActiveTabIndex(initialTabIndex);\n    }\n  }, [initialTabIndex, tabs.length]);\n\n  // Animate indicator when active tab changes\n  useEffect(() => {\n    const activeTab = tabs[activeTabIndex];\n    if (activeTab && tabLayouts[activeTab.key]) {\n      const layout = tabLayouts[activeTab.key];\n      if (layout) {\n        const { x, width } = layout;\n\n        if (animated) {\n          Animated.parallel([\n            Animated.timing(indicatorAnim, {\n              toValue: x,\n              duration: animationDuration,\n              useNativeDriver: false,\n            }),\n            Animated.timing(tabWidthAnim, {\n              toValue: width,\n              duration: animationDuration,\n              useNativeDriver: false,\n            }),\n          ]).start();\n        } else {\n          indicatorAnim.setValue(x);\n          tabWidthAnim.setValue(width);\n        }\n      }\n    }\n  }, [\n    activeTabIndex,\n    tabLayouts,\n    animated,\n    animationDuration,\n    indicatorAnim,\n    tabWidthAnim,\n    tabs,\n  ]);\n\n  const handleTabPress = useCallback(\n    (index: number, tab: TabItem) => {\n      if (tab.disabled) return;\n\n      setActiveTabIndex(index);\n      onTabChange?.(index, tab);\n\n      // Scroll to tab if scrollable\n      if (scrollable && tabBarRef.current) {\n        const activeTab = tabs[index];\n        if (activeTab && tabLayouts[activeTab.key]) {\n          const layout = tabLayouts[activeTab.key];\n          if (layout) {\n            const { x, width } = layout;\n            const screenWidth = Dimensions.get('window').width;\n            const scrollToX = Math.max(0, x - screenWidth / 2 + width / 2);\n\n            tabBarRef.current.scrollTo({\n              x: scrollToX,\n              animated: true,\n            });\n          }\n        }\n      }\n    },\n    [scrollable, tabLayouts, onTabChange, tabs]\n  );\n\n  const handleTabLayout = useCallback((tabKey: string, event: any) => {\n    const { x, width } = event.nativeEvent.layout;\n    setTabLayouts((prev) => ({\n      ...prev,\n      [tabKey]: { x, width },\n    }));\n  }, []);\n\n  const renderTabBar = () => {\n    const tabBarContent = (\n      <View style={[styles.tabBar, tabBarStyle]}>\n        {tabs.map((tab, index) => {\n          const isActive = index === activeTabIndex;\n          const isDisabled = tab.disabled;\n\n          return (\n            <View\n              key={tab.key}\n              style={[\n                styles.tabContainer,\n                (fullWidth || equalWidth) && styles.tabContainerEqualWidth,\n                tabStyle,\n              ]}\n              onLayout={(event) => handleTabLayout(tab.key, event)}\n            >\n              <ButtonBase\n                title={tab.title}\n                variant={isActive ? activeTabVariant : tabVariant}\n                size={tabSize}\n                shape={tabShape}\n                backgroundColor={\n                  isActive\n                    ? activeTabBackgroundColor\n                    : inactiveTabBackgroundColor\n                }\n                textColor={isActive ? activeTabTextColor : inactiveTabTextColor}\n                disabled={isDisabled}\n                onPress={() => handleTabPress(index, tab)}\n                fullWidth={fullWidth || equalWidth}\n                leftIcon={tab.icon}\n                rightIcon={\n                  tab.badge ? (\n                    <View style={styles.badgeContainer}>\n                      <ButtonBase\n                        title={String(tab.badge)}\n                        size=\"small\"\n                        variant=\"danger\"\n                        shape=\"pill\"\n                        style={styles.badge}\n                        // eslint-disable-next-line react-native/no-inline-styles\n                        textStyle={{ fontSize: 10 }}\n                      />\n                    </View>\n                  ) : undefined\n                }\n                style={{\n                  ...styles.tabButton,\n                  ...(isActive ? styles.activeTabButton : {}),\n                }}\n                // eslint-disable-next-line react-native/no-inline-styles\n                textStyle={{\n                  fontSize: 12,\n                  textAlign: 'center',\n                }}\n              />\n            </View>\n          );\n        })}\n\n        {/* Animated indicator */}\n        {tabs.length > 0 && showIndicator && (\n          <Animated.View\n            style={[\n              styles.indicator,\n              {\n                backgroundColor: indicatorColor,\n                transform: [{ translateX: indicatorAnim }],\n                width: tabWidthAnim,\n              },\n              indicatorStyle,\n            ]}\n          />\n        )}\n      </View>\n    );\n\n    if (scrollable) {\n      return (\n        <ScrollView\n          ref={tabBarRef}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={[\n            styles.scrollableTabBar,\n            tabBarContainerStyle,\n          ]}\n          // eslint-disable-next-line react-native/no-inline-styles\n          style={{ flexGrow: 0 }}\n          {...scrollViewProps}\n        >\n          {tabBarContent}\n        </ScrollView>\n      );\n    }\n\n    return (\n      <View style={[styles.tabBarContainer, tabBarContainerStyle]}>\n        {tabBarContent}\n      </View>\n    );\n  };\n\n  const renderContent = () => {\n    const activeTab = tabs[activeTabIndex];\n    if (!activeTab) return null;\n\n    return (\n      <View style={[styles.content, contentStyle, contentContainerStyle]}>\n        {activeTab.content}\n      </View>\n    );\n  };\n\n  return (\n    <View style={[styles.container, containerStyle]}>\n      {tabBarPosition === 'top' && renderTabBar()}\n      {renderContent()}\n      {tabBarPosition === 'bottom' && renderTabBar()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  tabBarContainer: {\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n    overflow: 'hidden',\n  },\n  tabBar: {\n    flexDirection: 'row',\n    position: 'relative',\n    alignItems: 'center',\n  },\n  scrollableTabBar: {\n    flexGrow: 0,\n    flexShrink: 0,\n  },\n  tabContainer: {\n    flex: 1,\n    minWidth: 0,\n  },\n  tabContainerEqualWidth: {\n    flex: 1,\n    minWidth: 0,\n  },\n  tabButton: {\n    borderRadius: 0,\n    overflow: 'hidden',\n  },\n  activeTabButton: {\n    // Additional styles for active tab if needed\n  },\n  indicator: {\n    position: 'absolute',\n    bottom: 0,\n    height: 2,\n    borderRadius: 1,\n  },\n  content: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  badgeContainer: {\n    marginLeft: 4,\n    flexShrink: 0,\n  },\n  badge: {\n    minWidth: 20,\n    height: 20,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAQA,IAAAE,WAAA,GAAAF,OAAA;AAA2C,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,CAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAAA,SAAAkB,SAAA,WAAAA,QAAA,GAAAH,MAAA,CAAAI,MAAA,GAAAJ,MAAA,CAAAI,MAAA,CAAAC,IAAA,eAAAjB,CAAA,aAAAJ,CAAA,MAAAA,CAAA,GAAAsB,SAAA,CAAAC,MAAA,EAAAvB,CAAA,UAAAC,CAAA,GAAAqB,SAAA,CAAAtB,CAAA,YAAAG,CAAA,IAAAF,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAd,CAAA,EAAAE,CAAA,MAAAC,CAAA,CAAAD,CAAA,IAAAF,CAAA,CAAAE,CAAA,aAAAC,CAAA,KAAAe,QAAA,CAAAK,KAAA,OAAAF,SAAA;AAsEpC,MAAMG,OAA+B,GAAGA,CAAC;EAC9C;EACAC,IAAI;EACJC,eAAe,GAAG,CAAC;EACnBC,WAAW;EAEX;EACAC,cAAc,GAAG,KAAK;EACtBC,UAAU,GAAG,KAAK;EAClBC,SAAS,GAAG,KAAK;EACjBC,UAAU,GAAG,KAAK;EAElB;EACAC,WAAW;EACXC,QAAQ;EACRC,YAAY;EACZC,cAAc;EACdC,aAAa,GAAG,KAAK;EAErB;EACAC,UAAU,GAAG,OAAO;EACpBC,OAAO,GAAG,QAAQ;EAClBC,QAAQ,GAAG,SAAS;EACpBC,gBAAgB,GAAG,SAAS;EAE5B;EACAC,wBAAwB;EACxBC,kBAAkB;EAClBC,0BAA0B;EAC1BC,oBAAoB;EACpBC,cAAc,GAAG,SAAS;EAE1B;EACAC,QAAQ,GAAG,IAAI;EACfC,iBAAiB,GAAG,GAAG;EAEvB;EACAC,eAAe;EAEf;EACAC,cAAc;EACdC,oBAAoB;EACpBC;AACF,CAAC,KAAK;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG,IAAAC,eAAQ,EAAC5B,eAAe,CAAC;EACrE,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG,IAAAF,eAAQ,EAEzC,CAAC,CAAC,CAAC;EACN,MAAMG,SAAS,GAAG,IAAAC,aAAM,EAAa,IAAI,CAAC;EAC1C,MAAMC,aAAa,GAAG,IAAAD,aAAM,EAAC,IAAIE,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAC3D,MAAMC,YAAY,GAAG,IAAAL,aAAM,EAAC,IAAIE,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;;EAE1D;EACA,IAAAE,gBAAS,EAAC,MAAM;IACd,IAAItC,eAAe,IAAI,CAAC,IAAIA,eAAe,GAAGD,IAAI,CAACH,MAAM,EAAE;MACzD+B,iBAAiB,CAAC3B,eAAe,CAAC;IACpC;EACF,CAAC,EAAE,CAACA,eAAe,EAAED,IAAI,CAACH,MAAM,CAAC,CAAC;;EAElC;EACA,IAAA0C,gBAAS,EAAC,MAAM;IACd,MAAMC,SAAS,GAAGxC,IAAI,CAAC2B,cAAc,CAAC;IACtC,IAAIa,SAAS,IAAIV,UAAU,CAACU,SAAS,CAACC,GAAG,CAAC,EAAE;MAC1C,MAAMC,MAAM,GAAGZ,UAAU,CAACU,SAAS,CAACC,GAAG,CAAC;MACxC,IAAIC,MAAM,EAAE;QACV,MAAM;UAAEC,CAAC;UAAEC;QAAM,CAAC,GAAGF,MAAM;QAE3B,IAAIrB,QAAQ,EAAE;UACZc,qBAAQ,CAACU,QAAQ,CAAC,CAChBV,qBAAQ,CAACW,MAAM,CAACZ,aAAa,EAAE;YAC7Ba,OAAO,EAAEJ,CAAC;YACVK,QAAQ,EAAE1B,iBAAiB;YAC3B2B,eAAe,EAAE;UACnB,CAAC,CAAC,EACFd,qBAAQ,CAACW,MAAM,CAACR,YAAY,EAAE;YAC5BS,OAAO,EAAEH,KAAK;YACdI,QAAQ,EAAE1B,iBAAiB;YAC3B2B,eAAe,EAAE;UACnB,CAAC,CAAC,CACH,CAAC,CAACC,KAAK,CAAC,CAAC;QACZ,CAAC,MAAM;UACLhB,aAAa,CAACiB,QAAQ,CAACR,CAAC,CAAC;UACzBL,YAAY,CAACa,QAAQ,CAACP,KAAK,CAAC;QAC9B;MACF;IACF;EACF,CAAC,EAAE,CACDjB,cAAc,EACdG,UAAU,EACVT,QAAQ,EACRC,iBAAiB,EACjBY,aAAa,EACbI,YAAY,EACZtC,IAAI,CACL,CAAC;EAEF,MAAMoD,cAAc,GAAG,IAAAC,kBAAW,EAChC,CAACC,KAAa,EAAEC,GAAY,KAAK;IAC/B,IAAIA,GAAG,CAACC,QAAQ,EAAE;IAElB5B,iBAAiB,CAAC0B,KAAK,CAAC;IACxBpD,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAGoD,KAAK,EAAEC,GAAG,CAAC;;IAEzB;IACA,IAAInD,UAAU,IAAI4B,SAAS,CAACK,OAAO,EAAE;MACnC,MAAMG,SAAS,GAAGxC,IAAI,CAACsD,KAAK,CAAC;MAC7B,IAAId,SAAS,IAAIV,UAAU,CAACU,SAAS,CAACC,GAAG,CAAC,EAAE;QAC1C,MAAMC,MAAM,GAAGZ,UAAU,CAACU,SAAS,CAACC,GAAG,CAAC;QACxC,IAAIC,MAAM,EAAE;UACV,MAAM;YAAEC,CAAC;YAAEC;UAAM,CAAC,GAAGF,MAAM;UAC3B,MAAMe,WAAW,GAAGC,uBAAU,CAACxE,GAAG,CAAC,QAAQ,CAAC,CAAC0D,KAAK;UAClD,MAAMe,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAElB,CAAC,GAAGc,WAAW,GAAG,CAAC,GAAGb,KAAK,GAAG,CAAC,CAAC;UAE9DZ,SAAS,CAACK,OAAO,CAACyB,QAAQ,CAAC;YACzBnB,CAAC,EAAEgB,SAAS;YACZtC,QAAQ,EAAE;UACZ,CAAC,CAAC;QACJ;MACF;IACF;EACF,CAAC,EACD,CAACjB,UAAU,EAAE0B,UAAU,EAAE5B,WAAW,EAAEF,IAAI,CAC5C,CAAC;EAED,MAAM+D,eAAe,GAAG,IAAAV,kBAAW,EAAC,CAACW,MAAc,EAAEC,KAAU,KAAK;IAClE,MAAM;MAAEtB,CAAC;MAAEC;IAAM,CAAC,GAAGqB,KAAK,CAACC,WAAW,CAACxB,MAAM;IAC7CX,aAAa,CAAEoC,IAAI,KAAM;MACvB,GAAGA,IAAI;MACP,CAACH,MAAM,GAAG;QAAErB,CAAC;QAAEC;MAAM;IACvB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,gBACjBpG,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAAmG,IAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACC,MAAM,EAAEnE,WAAW;IAAE,GACvCP,IAAI,CAAC2E,GAAG,CAAC,CAACpB,GAAG,EAAED,KAAK,KAAK;MACxB,MAAMsB,QAAQ,GAAGtB,KAAK,KAAK3B,cAAc;MACzC,MAAMkD,UAAU,GAAGtB,GAAG,CAACC,QAAQ;MAE/B,oBACEvF,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAAmG,IAAI;QACH9B,GAAG,EAAEc,GAAG,CAACd,GAAI;QACb+B,KAAK,EAAE,CACLC,MAAM,CAACK,YAAY,EACnB,CAACzE,SAAS,IAAIC,UAAU,KAAKmE,MAAM,CAACM,sBAAsB,EAC1DvE,QAAQ,CACR;QACFwE,QAAQ,EAAGf,KAAK,IAAKF,eAAe,CAACR,GAAG,CAACd,GAAG,EAAEwB,KAAK;MAAE,gBAErDhG,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAACjG,WAAA,CAAA4G,UAAU;QACTC,KAAK,EAAE3B,GAAG,CAAC2B,KAAM;QACjBC,OAAO,EAAEP,QAAQ,GAAG7D,gBAAgB,GAAGH,UAAW;QAClDwE,IAAI,EAAEvE,OAAQ;QACdwE,KAAK,EAAEvE,QAAS;QAChBwE,eAAe,EACbV,QAAQ,GACJ5D,wBAAwB,GACxBE,0BACL;QACDqE,SAAS,EAAEX,QAAQ,GAAG3D,kBAAkB,GAAGE,oBAAqB;QAChEqC,QAAQ,EAAEqB,UAAW;QACrBW,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAACE,KAAK,EAAEC,GAAG,CAAE;QAC1ClD,SAAS,EAAEA,SAAS,IAAIC,UAAW;QACnCmF,QAAQ,EAAElC,GAAG,CAACmC,IAAK;QACnBC,SAAS,EACPpC,GAAG,CAACqC,KAAK,gBACP3H,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAAmG,IAAI;UAACC,KAAK,EAAEC,MAAM,CAACoB;QAAe,gBACjC5H,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAACjG,WAAA,CAAA4G,UAAU;UACTC,KAAK,EAAEY,MAAM,CAACvC,GAAG,CAACqC,KAAK,CAAE;UACzBR,IAAI,EAAC,OAAO;UACZD,OAAO,EAAC,QAAQ;UAChBE,KAAK,EAAC,MAAM;UACZb,KAAK,EAAEC,MAAM,CAACmB;UACd;UAAA;UACAG,SAAS,EAAE;YAAEC,QAAQ,EAAE;UAAG;QAAE,CAC7B,CACG,CAAC,GACLC,SACL;QACDzB,KAAK,EAAE;UACL,GAAGC,MAAM,CAACyB,SAAS;UACnB,IAAItB,QAAQ,GAAGH,MAAM,CAAC0B,eAAe,GAAG,CAAC,CAAC;QAC5C;QACA;QAAA;QACAJ,SAAS,EAAE;UACTC,QAAQ,EAAE,EAAE;UACZI,SAAS,EAAE;QACb;MAAE,CACH,CACG,CAAC;IAEX,CAAC,CAAC,EAGDpG,IAAI,CAACH,MAAM,GAAG,CAAC,IAAIc,aAAa,iBAC/B1C,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAA+D,QAAQ,CAACoC,IAAI;MACZC,KAAK,EAAE,CACLC,MAAM,CAAC4B,SAAS,EAChB;QACEf,eAAe,EAAElE,cAAc;QAC/BkF,SAAS,EAAE,CAAC;UAAEC,UAAU,EAAErE;QAAc,CAAC,CAAC;QAC1CU,KAAK,EAAEN;MACT,CAAC,EACD5B,cAAc;IACd,CACH,CAEC,CACP;IAED,IAAIN,UAAU,EAAE;MACd,oBACEnC,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAAoI,UAAU,EAAA/G,QAAA;QACTgH,GAAG,EAAEzE,SAAU;QACf0E,UAAU;QACVC,8BAA8B,EAAE,KAAM;QACtCjF,qBAAqB,EAAE,CACrB+C,MAAM,CAACmC,gBAAgB,EACvBnF,oBAAoB;QAEtB;QAAA;QACA+C,KAAK,EAAE;UAAEqC,QAAQ,EAAE;QAAE;MAAE,GACnBtF,eAAe,GAElB8C,aACS,CAAC;IAEjB;IAEA,oBACEpG,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAAmG,IAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACqC,eAAe,EAAErF,oBAAoB;IAAE,GACzD4C,aACG,CAAC;EAEX,CAAC;EAED,MAAM0C,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMvE,SAAS,GAAGxC,IAAI,CAAC2B,cAAc,CAAC;IACtC,IAAI,CAACa,SAAS,EAAE,OAAO,IAAI;IAE3B,oBACEvE,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAAmG,IAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACuC,OAAO,EAAEvG,YAAY,EAAEiB,qBAAqB;IAAE,GAChEc,SAAS,CAACwE,OACP,CAAC;EAEX,CAAC;EAED,oBACE/I,MAAA,CAAAe,OAAA,CAAAsF,aAAA,CAAClG,YAAA,CAAAmG,IAAI;IAACC,KAAK,EAAE,CAACC,MAAM,CAACwC,SAAS,EAAEzF,cAAc;EAAE,GAC7CrB,cAAc,KAAK,KAAK,IAAIiE,YAAY,CAAC,CAAC,EAC1C2C,aAAa,CAAC,CAAC,EACf5G,cAAc,KAAK,QAAQ,IAAIiE,YAAY,CAAC,CACzC,CAAC;AAEX,CAAC;AAAC8C,OAAA,CAAAnH,OAAA,GAAAA,OAAA;AAEF,MAAM0E,MAAM,GAAG0C,uBAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE;EACR,CAAC;EACDP,eAAe,EAAE;IACfQ,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,SAAS;IAC5BC,QAAQ,EAAE;EACZ,CAAC;EACD9C,MAAM,EAAE;IACN+C,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,UAAU;IACpBC,UAAU,EAAE;EACd,CAAC;EACDf,gBAAgB,EAAE;IAChBC,QAAQ,EAAE,CAAC;IACXe,UAAU,EAAE;EACd,CAAC;EACD9C,YAAY,EAAE;IACZuC,IAAI,EAAE,CAAC;IACPQ,QAAQ,EAAE;EACZ,CAAC;EACD9C,sBAAsB,EAAE;IACtBsC,IAAI,EAAE,CAAC;IACPQ,QAAQ,EAAE;EACZ,CAAC;EACD3B,SAAS,EAAE;IACT4B,YAAY,EAAE,CAAC;IACfN,QAAQ,EAAE;EACZ,CAAC;EACDrB,eAAe,EAAE;IACf;EAAA,CACD;EACDE,SAAS,EAAE;IACTqB,QAAQ,EAAE,UAAU;IACpBK,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IACTF,YAAY,EAAE;EAChB,CAAC;EACDd,OAAO,EAAE;IACPK,IAAI,EAAE,CAAC;IACPG,QAAQ,EAAE;EACZ,CAAC;EACD3B,cAAc,EAAE;IACdoC,UAAU,EAAE,CAAC;IACbL,UAAU,EAAE;EACd,CAAC;EACDhC,KAAK,EAAE;IACLiC,QAAQ,EAAE,EAAE;IACZG,MAAM,EAAE,EAAE;IACVR,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]}