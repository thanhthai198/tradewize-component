{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_Popup","_interopRequireDefault","_FanMenu","_tradewize","_utils","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_extends","assign","bind","arguments","length","apply","MIN_EDGE_DISTANCE","DRAG_THRESHOLD","TAP_DELAY","FloatButton","onPress","children","size","backgroundColor","initialPosition","style","icon","iconColor","isPlusEdgeDistance","showPopup","popupContent","popupWidth","popupHeight","popupBackgroundColor","popupBorderRadius","onPopupClose","showFanMenu","menuItems","menuRadius","menuStartAngle","menuEndAngle","menuItemBackgroundColor","menuItemIconColor","onMenuClose","styleIconItem","mainButtonSize","minEdgeDistance","yAxisEndLimit","yAxisStartLimit","pan","useRef","Animated","ValueXY","current","rotateAnim","Value","isDragging","setIsDragging","useState","popupVisible","setPopupVisible","fanMenuVisible","setFanMenuVisible","buttonPosition","setButtonPosition","x","y","rotateDirection","setRotateDirection","startPosition","startTime","hasMoved","useEffect","timing","toValue","duration","useNativeDriver","start","setValue","defaultPos","getScreenWidth","getScreenHeight","horizontal","vertical","getDirection","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","_evt","gestureState","Math","abs","dx","dy","onPanResponderGrant","x0","y0","Date","now","setOffset","_value","onPanResponderMove","evt","distance","sqrt","pow","event","onPanResponderRelease","endTime","timeDiff","flattenOffset","newX","newY","finalX","finalY","finalPosition","spring","tension","friction","setTimeout","rotate","interpolate","inputRange","outputRange","handlePress","console","log","handlePopupClose","handleFanMenuClose","createElement","Fragment","View","styles","container","width","height","transform","translateX","translateY","panHandlers","TouchableOpacity","button","borderRadius","activeOpacity","delayPressIn","delayPressOut","Image","tintColor","defaultIcon","source","visible","onClose","position","items","radius","startAngle","endAngle","itemBackgroundColor","stylesIcon","exports","StyleSheet","zIndex","alignItems","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["index.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  PanResponder,\r\n  Animated,\r\n  StyleSheet,\r\n  Image,\r\n  type StyleProp,\r\n  type ImageStyle,\r\n} from 'react-native';\r\nimport Popup from './Popup';\r\nimport FanMenu from './FanMenu';\r\nimport { getScreenHeight, getScreenWidth } from 'tradewize';\r\nimport { getDirection } from './utils';\r\nimport type { MenuItem } from './type';\r\n\r\ninterface FloatButtonProps {\r\n  onPress?: () => void;\r\n  children?: React.ReactNode;\r\n  size?: number;\r\n  backgroundColor?: string;\r\n  initialPosition?: { x: number; y: number };\r\n  style?: any;\r\n  icon?: any;\r\n  iconColor?: string;\r\n  isPlusEdgeDistance?: boolean;\r\n  // Popup props\r\n  showPopup?: boolean;\r\n  popupContent?: React.ReactNode;\r\n  popupWidth?: number;\r\n  popupHeight?: number;\r\n  popupBackgroundColor?: string;\r\n  popupBorderRadius?: number;\r\n  onPopupClose?: () => void;\r\n  // Fan Menu props\r\n  showFanMenu?: boolean;\r\n  menuItems?: MenuItem[];\r\n  menuRadius?: number;\r\n  menuStartAngle?: number;\r\n  menuEndAngle?: number;\r\n  menuItemBackgroundColor?: string;\r\n  menuItemIconColor?: string;\r\n  styleIconItem?: StyleProp<ImageStyle>;\r\n  onMenuClose?: () => void;\r\n  // Main button props for fan menu\r\n  mainButtonSize?: number;\r\n  mainButtonColor?: string;\r\n  mainButtonIcon?: string;\r\n  // Minimum distance from screen edges\r\n  minEdgeDistance?: number;\r\n  // Y axis limit\r\n  yAxisEndLimit?: number;\r\n  yAxisStartLimit?: number;\r\n}\r\n\r\nconst MIN_EDGE_DISTANCE = 16;\r\nconst DRAG_THRESHOLD = 10; // Minimum distance to consider as drag\r\nconst TAP_DELAY = 200; // Maximum time to consider as tap\r\n\r\nexport const FloatButton: React.FC<FloatButtonProps> = ({\r\n  onPress,\r\n  children,\r\n  size = 60,\r\n  backgroundColor = '#007AFF',\r\n  initialPosition,\r\n  style,\r\n  icon,\r\n  iconColor = '#FFFFFF',\r\n  isPlusEdgeDistance = false,\r\n  // Popup props\r\n  showPopup = false,\r\n  popupContent,\r\n  popupWidth = 200,\r\n  popupHeight = 150,\r\n  popupBackgroundColor = '#FFFFFF',\r\n  popupBorderRadius = 12,\r\n  onPopupClose,\r\n  // Fan Menu props\r\n  showFanMenu = false,\r\n  menuItems = [],\r\n  menuRadius = 90,\r\n  menuStartAngle = 90,\r\n  menuEndAngle = 270,\r\n  menuItemBackgroundColor = '#007AFF',\r\n  menuItemIconColor,\r\n  onMenuClose,\r\n  styleIconItem,\r\n  // Main button props for fan menu\r\n  mainButtonSize = 60,\r\n  // mainButtonColor = '#007AFF',\r\n  // mainButtonIcon = '+',\r\n  // Minimum distance from screen edges\r\n  minEdgeDistance = 16,\r\n  // Y axis limit\r\n  yAxisEndLimit = 50,\r\n  yAxisStartLimit = 50,\r\n}) => {\r\n  const pan = useRef(new Animated.ValueXY()).current;\r\n  const rotateAnim = useRef(new Animated.Value(0)).current;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [popupVisible, setPopupVisible] = useState(false);\r\n  const [fanMenuVisible, setFanMenuVisible] = useState(false);\r\n  const [buttonPosition, setButtonPosition] = useState({ x: 0, y: 0 });\r\n  const [rotateDirection, setRotateDirection] = useState<string[]>([\r\n    '0deg',\r\n    '-180deg',\r\n  ]);\r\n\r\n  // Add refs for better drag detection\r\n  const startPosition = useRef({ x: 0, y: 0 });\r\n  const startTime = useRef(0);\r\n  const hasMoved = useRef(false);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(rotateAnim, {\r\n      toValue: fanMenuVisible ? 1 : 0, // 1 = 180°, 0 = 0°\r\n      duration: 400,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  }, [fanMenuVisible, rotateAnim]);\r\n\r\n  // Set initial position\r\n  useEffect(() => {\r\n    if (initialPosition) {\r\n      pan.setValue(initialPosition);\r\n      setButtonPosition(initialPosition);\r\n    } else {\r\n      // Default position: bottom right corner\r\n      const defaultPos = {\r\n        x: getScreenWidth() - size - MIN_EDGE_DISTANCE,\r\n        y: getScreenHeight() - size - getScreenHeight() * 0.25,\r\n      };\r\n      pan.setValue(defaultPos);\r\n      setButtonPosition(defaultPos);\r\n    }\r\n  }, [initialPosition, size, pan]);\r\n\r\n  // Set rotate direction\r\n  useEffect(() => {\r\n    const { horizontal, vertical } = getDirection(buttonPosition);\r\n    if (horizontal === 'right' && vertical === 'bottom') {\r\n      setRotateDirection(['0deg', '-180deg']);\r\n    } else if (horizontal === 'right' && vertical === 'top') {\r\n      setRotateDirection(['-180deg', '0deg']);\r\n    } else if (horizontal === 'left' && vertical === 'bottom') {\r\n      setRotateDirection(['0deg', '-180deg']);\r\n    } else if (horizontal === 'left' && vertical === 'top') {\r\n      setRotateDirection(['-180deg', '0deg']);\r\n    }\r\n  }, [buttonPosition, rotateAnim]);\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onMoveShouldSetPanResponder: (_evt, gestureState) => {\r\n        // Only start pan responder if movement exceeds threshold\r\n        return (\r\n          Math.abs(gestureState.dx) > DRAG_THRESHOLD ||\r\n          Math.abs(gestureState.dy) > DRAG_THRESHOLD\r\n        );\r\n      },\r\n      onPanResponderGrant: (_evt, gestureState) => {\r\n        startPosition.current = { x: gestureState.x0, y: gestureState.y0 };\r\n        startTime.current = Date.now();\r\n        hasMoved.current = false;\r\n        setIsDragging(false);\r\n\r\n        pan.setOffset({\r\n          x: (pan.x as any)._value,\r\n          y: (pan.y as any)._value,\r\n        });\r\n        pan.setValue({ x: 0, y: 0 });\r\n      },\r\n      onPanResponderMove: (evt, gestureState) => {\r\n        const distance = Math.sqrt(\r\n          Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)\r\n        );\r\n\r\n        if (distance > DRAG_THRESHOLD) {\r\n          hasMoved.current = true;\r\n          setIsDragging(true);\r\n        }\r\n\r\n        Animated.event([null, { dx: pan.x, dy: pan.y }], {\r\n          useNativeDriver: false,\r\n        })(evt, gestureState);\r\n      },\r\n      onPanResponderRelease: (_evt, gestureState) => {\r\n        const endTime = Date.now();\r\n        const timeDiff = endTime - startTime.current;\r\n        const distance = Math.sqrt(\r\n          Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)\r\n        );\r\n\r\n        // If it's a quick tap with minimal movement, don't consider it as drag\r\n        if (timeDiff < TAP_DELAY && distance < DRAG_THRESHOLD) {\r\n          setIsDragging(false);\r\n          hasMoved.current = false;\r\n        }\r\n\r\n        pan.flattenOffset();\r\n\r\n        // Only snap to edges if we actually dragged\r\n        if (hasMoved.current) {\r\n          // Snap to edges if near screen boundaries\r\n          const newX = (pan.x as any)._value;\r\n          const newY = (pan.y as any)._value;\r\n\r\n          let finalX = newX;\r\n          let finalY = newY;\r\n\r\n          // Snap to left or right edge\r\n          if (newX < getScreenWidth() / 2) {\r\n            finalX = minEdgeDistance;\r\n          } else {\r\n            finalX = getScreenWidth() - size - minEdgeDistance;\r\n          }\r\n\r\n          // Ensure button stays within screen bounds\r\n          if (finalY < yAxisStartLimit) {\r\n            finalY = yAxisStartLimit;\r\n          } else if (\r\n            finalY >\r\n            getScreenHeight() - size - yAxisStartLimit - yAxisEndLimit\r\n          ) {\r\n            finalY = getScreenHeight() - size - yAxisStartLimit - yAxisEndLimit;\r\n          }\r\n\r\n          const finalPosition = { x: finalX, y: finalY };\r\n          setButtonPosition(finalPosition);\r\n\r\n          Animated.spring(pan, {\r\n            toValue: finalPosition,\r\n            useNativeDriver: false,\r\n            tension: 100,\r\n            friction: 8,\r\n          }).start();\r\n        }\r\n\r\n        // Reset drag state after a short delay\r\n        setTimeout(() => {\r\n          setIsDragging(false);\r\n          hasMoved.current = false;\r\n        }, 100);\r\n      },\r\n    })\r\n  ).current;\r\n\r\n  const rotate = rotateAnim.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: rotateDirection,\r\n  });\r\n\r\n  const handlePress = () => {\r\n    console.log('isDragging', isDragging);\r\n    console.log('hasMoved', hasMoved.current);\r\n\r\n    if (!isDragging && !hasMoved.current) {\r\n      if (showFanMenu && menuItems.length > 0) {\r\n        setFanMenuVisible(true);\r\n      } else if (showPopup && popupContent) {\r\n        setPopupVisible(true);\r\n      } else if (onPress) {\r\n        onPress();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePopupClose = () => {\r\n    setPopupVisible(false);\r\n    if (onPopupClose) {\r\n      onPopupClose();\r\n    }\r\n  };\r\n\r\n  const handleFanMenuClose = () => {\r\n    setFanMenuVisible(false);\r\n    if (onMenuClose) {\r\n      onMenuClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Animated.View\r\n        style={[\r\n          styles.container,\r\n          {\r\n            width: size,\r\n            height: size,\r\n            transform: [\r\n              { translateX: pan.x },\r\n              { translateY: pan.y },\r\n              { rotate },\r\n            ],\r\n          },\r\n          style,\r\n        ]}\r\n        {...panResponder.panHandlers}\r\n      >\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.button,\r\n            {\r\n              width: size,\r\n              height: size,\r\n              backgroundColor,\r\n              borderRadius: size / 2,\r\n            },\r\n          ]}\r\n          onPress={handlePress}\r\n          activeOpacity={0.8}\r\n          delayPressIn={0}\r\n          delayPressOut={0}\r\n        >\r\n          {children || (\r\n            <Image\r\n              tintColor={iconColor}\r\n              style={styles.defaultIcon}\r\n              source={icon ? icon : require('./assets/setting.png')}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n\r\n      {/* Popup */}\r\n      {showPopup && popupContent && (\r\n        <Popup\r\n          visible={popupVisible}\r\n          onClose={handlePopupClose}\r\n          position={buttonPosition}\r\n          width={popupWidth}\r\n          height={popupHeight}\r\n          backgroundColor={popupBackgroundColor}\r\n          borderRadius={popupBorderRadius}\r\n        >\r\n          {popupContent}\r\n        </Popup>\r\n      )}\r\n\r\n      {/* Fan Menu */}\r\n      {showFanMenu && menuItems.length > 0 && (\r\n        <FanMenu\r\n          visible={fanMenuVisible}\r\n          onClose={handleFanMenuClose}\r\n          items={menuItems}\r\n          position={buttonPosition}\r\n          radius={menuRadius}\r\n          startAngle={menuStartAngle}\r\n          endAngle={menuEndAngle}\r\n          itemBackgroundColor={menuItemBackgroundColor}\r\n          iconColor={menuItemIconColor}\r\n          mainButtonSize={mainButtonSize}\r\n          // mainButtonColor={mainButtonColor}\r\n          // mainButtonIcon={mainButtonIcon}\r\n          minEdgeDistance={minEdgeDistance}\r\n          isPlusEdgeDistance={isPlusEdgeDistance}\r\n          stylesIcon={styleIconItem}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'absolute',\r\n    zIndex: 1000,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  defaultIcon: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]}