{"version":3,"names":["_react","require","_reactNative","_Constant","_Color","_interopRequireDefault","_styles","_ButtonBase","e","__esModule","default","_extends","Object","assign","bind","n","arguments","length","t","r","hasOwnProperty","call","apply","Composer","exports","forwardRef","composerHeight","MIN_COMPOSER_HEIGHT","disableComposer","keyboardAppearance","multiline","onInputSizeChanged","onTextChanged","placeholder","DEFAULT_PLACEHOLDER","placeholderTextColor","Color","defaultColor","textInputAutoFocus","text","textInputProps","textInputStyle","onPressPickMedia","_ref","dimensionsRef","useRef","isFocused","setIsFocused","useState","isPickerOpen","setIsPickerOpen","widthText","setWidthText","lineCount","setLineCount","determineInputSizeChange","useCallback","dimensions","current","width","height","handleContentSizeChange","nativeEvent","contentSize","handleLayout","layout","lines","Math","max","round","borderRadiusByLineCount","useMemo","heightInput","MAX_COMPOSER_HEIGHT","React","createElement","View","style","styles","container","ButtonBase","onPress","Image","tintColor","defaultBlue","resizeMode","source","Fragment","iconPick","textInputContainer","borderRadius","TextInput","testID","accessible","accessibilityLabel","editable","onContentSizeChange","onChangeText","txt","stylesCommon","fill","textInput","Platform","select","web","outlineWidth","outlineColor","outlineOffset","autoFocus","value","enablesReturnKeyAutomatically","underlineColorAndroid","onFocus","onBlur","Text","onLayout","hiddenText","StyleSheet","create","flex","flexDirection","alignItems","gap","backgroundColor","leftBubbleBackground","paddingHorizontal","paddingRight","paddingLeft","fontWeight","fontSize","lineHeight","paddingTop","marginTop","ios","android","marginBottom","position","top","left","inputPreview","txtPreview"],"sources":["Composer.tsx"],"sourcesContent":["import { forwardRef, useCallback, useMemo, useRef, useState } from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  TextInput,\n  type TextInputProps,\n  type NativeSyntheticEvent,\n  type TextInputContentSizeChangeEventData,\n  View,\n  Image,\n  Text,\n  type LayoutChangeEvent,\n} from 'react-native';\nimport {\n  MIN_COMPOSER_HEIGHT,\n  DEFAULT_PLACEHOLDER,\n  MAX_COMPOSER_HEIGHT,\n} from './Constant';\nimport Color from './Color';\nimport stylesCommon from './styles';\nimport { ButtonBase } from '../ButtonBase';\n\nexport interface ComposerProps {\n  composerHeight?: number;\n  text?: string;\n  placeholder?: string;\n  placeholderTextColor?: string;\n  textInputProps?: Partial<TextInputProps>;\n  textInputStyle?: TextInputProps['style'];\n  textInputAutoFocus?: boolean;\n  keyboardAppearance?: TextInputProps['keyboardAppearance'];\n  multiline?: boolean;\n  disableComposer?: boolean;\n  onTextChanged?(text: string): void;\n  onInputSizeChanged?(layout: { width: number; height: number }): void;\n  onPressPickMedia?: (type: 'camera' | 'pick') => void;\n}\n\nexport const Composer = forwardRef(\n  (\n    {\n      composerHeight = MIN_COMPOSER_HEIGHT,\n      disableComposer = false,\n      keyboardAppearance = 'default',\n      multiline = true,\n      onInputSizeChanged,\n      onTextChanged,\n      placeholder = DEFAULT_PLACEHOLDER,\n      placeholderTextColor = Color.defaultColor,\n      textInputAutoFocus = false,\n      text,\n      textInputProps,\n      textInputStyle,\n      onPressPickMedia,\n    }: ComposerProps,\n    _ref: React.Ref<TextInput>\n  ) => {\n    const dimensionsRef: any = useRef<{ width: number; height: number }>(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [isPickerOpen, setIsPickerOpen] = useState(false);\n    const [widthText, setWidthText] = useState(0);\n    const [lineCount, setLineCount] = useState(1);\n\n    const determineInputSizeChange = useCallback(\n      (dimensions: { width: number; height: number }) => {\n        // Support earlier versions of React Native on Android.\n        if (!dimensions) return;\n\n        if (\n          !dimensionsRef.current ||\n          (dimensionsRef.current &&\n            (dimensionsRef.current.width !== dimensions.width ||\n              dimensionsRef.current.height !== dimensions.height))\n        ) {\n          dimensionsRef.current = dimensions;\n          setWidthText(dimensions.width);\n          onInputSizeChanged?.(dimensions);\n        }\n      },\n      [onInputSizeChanged]\n    );\n\n    const handleContentSizeChange = useCallback(\n      ({\n        nativeEvent: { contentSize },\n      }: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) =>\n        determineInputSizeChange(contentSize),\n      [determineInputSizeChange]\n    );\n\n    const handleLayout = (e: LayoutChangeEvent) => {\n      const height = e.nativeEvent.layout.height;\n      const lines = Math.max(1, Math.round(height / 22));\n      setLineCount(lines);\n    };\n\n    const borderRadiusByLineCount = useMemo(() => {\n      if (lineCount === 1) {\n        return 100;\n      }\n      return 16;\n    }, [lineCount]);\n\n    const heightInput = useMemo(() => {\n      if (lineCount === 1) {\n        return composerHeight;\n      }\n      const height = lineCount * 22;\n      if (height > MAX_COMPOSER_HEIGHT / 2) {\n        return MAX_COMPOSER_HEIGHT / 2 + 20;\n      }\n      return height;\n    }, [lineCount, composerHeight]);\n\n    return (\n      <View style={styles.container}>\n        {isFocused && !isPickerOpen && (\n          <ButtonBase onPress={() => setIsPickerOpen(true)}>\n            <Image\n              tintColor={Color.defaultBlue}\n              resizeMode=\"contain\"\n              source={require('../assets/next.png')}\n              style={{ width: 18, height: 18 }}\n            />\n          </ButtonBase>\n        )}\n        {(!isFocused || isPickerOpen) && (\n          <>\n            <ButtonBase onPress={() => onPressPickMedia?.('camera')}>\n              <Image\n                tintColor={Color.defaultBlue}\n                resizeMode=\"contain\"\n                source={require('../assets/camera.png')}\n                style={styles.iconPick}\n              />\n            </ButtonBase>\n\n            <ButtonBase onPress={() => onPressPickMedia?.('pick')}>\n              <Image\n                tintColor={Color.defaultBlue}\n                resizeMode=\"contain\"\n                source={require('../assets/photo.png')}\n                style={styles.iconPick}\n              />\n            </ButtonBase>\n          </>\n        )}\n\n        {/* <ButtonBase>\n        <Image source={require('../assets/mic.png')} style={styles.iconPick} />\n      </ButtonBase> */}\n\n        <View\n          style={[\n            styles.textInputContainer,\n            {\n              borderRadius: borderRadiusByLineCount,\n            },\n          ]}\n        >\n          <TextInput\n            testID={placeholder}\n            accessible\n            accessibilityLabel={placeholder}\n            placeholder={placeholder}\n            placeholderTextColor={placeholderTextColor}\n            multiline={multiline}\n            editable={!disableComposer}\n            onContentSizeChange={handleContentSizeChange}\n            onChangeText={(txt) => {\n              onTextChanged?.(txt);\n              setIsPickerOpen(false);\n            }}\n            style={[\n              stylesCommon.fill,\n              styles.textInput,\n              textInputStyle,\n              {\n                height: heightInput,\n                ...Platform.select({\n                  web: {\n                    outlineWidth: 0,\n                    outlineColor: 'transparent',\n                    outlineOffset: 0,\n                  },\n                }),\n              },\n            ]}\n            autoFocus={textInputAutoFocus}\n            value={text}\n            enablesReturnKeyAutomatically\n            underlineColorAndroid=\"transparent\"\n            keyboardAppearance={keyboardAppearance}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => {\n              setIsFocused(false);\n              setIsPickerOpen(false);\n            }}\n            {...textInputProps}\n          />\n\n          <Text\n            onLayout={handleLayout}\n            style={[\n              styles.hiddenText,\n              {\n                width: widthText,\n              },\n            ]}\n          >\n            {text}\n          </Text>\n\n          {/* <ButtonBase>\n          <Image\n            tintColor={Color.defaultBlue}\n            resizeMode=\"contain\"\n            source={require('../assets/smileFace.png')}\n            style={styles.iconPick}\n          />\n        </ButtonBase> */}\n        </View>\n      </View>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  textInputContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    backgroundColor: Color.leftBubbleBackground,\n    paddingHorizontal: 8,\n  },\n  textInput: {\n    paddingRight: 8,\n    paddingLeft: 8,\n    fontWeight: '600',\n    fontSize: 16,\n    lineHeight: 22,\n    ...Platform.select({\n      web: {\n        paddingTop: 6,\n        paddingLeft: 4,\n      },\n    }),\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6,\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4,\n    }),\n  },\n  iconPick: {\n    width: 24,\n    height: 24,\n  },\n  hiddenText: {\n    position: 'absolute',\n    top: -9999,\n    left: -9999,\n    paddingRight: 8,\n    paddingLeft: 8,\n    fontWeight: '600',\n    fontSize: 16,\n    lineHeight: 22,\n    ...Platform.select({\n      web: {\n        paddingTop: 6,\n        paddingLeft: 4,\n      },\n    }),\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6,\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4,\n    }),\n  },\n  inputPreview: {\n    paddingRight: 8,\n    paddingLeft: 8,\n    ...Platform.select({\n      web: {\n        paddingTop: 6,\n        paddingLeft: 4,\n      },\n    }),\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6,\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4,\n    }),\n  },\n  txtPreview: {\n    fontWeight: '600',\n    fontSize: 16,\n    lineHeight: 22,\n  },\n});\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAYA,IAAAE,SAAA,GAAAF,OAAA;AAKA,IAAAG,MAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,OAAA,GAAAD,sBAAA,CAAAJ,OAAA;AACA,IAAAM,WAAA,GAAAN,OAAA;AAA2C,SAAAI,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,SAAA,WAAAA,QAAA,GAAAC,MAAA,CAAAC,MAAA,GAAAD,MAAA,CAAAC,MAAA,CAAAC,IAAA,eAAAC,CAAA,aAAAP,CAAA,MAAAA,CAAA,GAAAQ,SAAA,CAAAC,MAAA,EAAAT,CAAA,UAAAU,CAAA,GAAAF,SAAA,CAAAR,CAAA,YAAAW,CAAA,IAAAD,CAAA,OAAAE,cAAA,CAAAC,IAAA,CAAAH,CAAA,EAAAC,CAAA,MAAAJ,CAAA,CAAAI,CAAA,IAAAD,CAAA,CAAAC,CAAA,aAAAJ,CAAA,KAAAJ,QAAA,CAAAW,KAAA,OAAAN,SAAA;AAkBpC,MAAMO,QAAQ,GAAAC,OAAA,CAAAD,QAAA,gBAAG,IAAAE,iBAAU,EAChC,CACE;EACEC,cAAc,GAAGC,6BAAmB;EACpCC,eAAe,GAAG,KAAK;EACvBC,kBAAkB,GAAG,SAAS;EAC9BC,SAAS,GAAG,IAAI;EAChBC,kBAAkB;EAClBC,aAAa;EACbC,WAAW,GAAGC,6BAAmB;EACjCC,oBAAoB,GAAGC,cAAK,CAACC,YAAY;EACzCC,kBAAkB,GAAG,KAAK;EAC1BC,IAAI;EACJC,cAAc;EACdC,cAAc;EACdC;AACa,CAAC,EAChBC,IAA0B,KACvB;EACH,MAAMC,aAAkB,GAAG,IAAAC,aAAM,EAAoC,IAAI,CAAC;EAC1E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG,IAAAC,eAAQ,EAAC,KAAK,CAAC;EACjD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG,IAAAF,eAAQ,EAAC,KAAK,CAAC;EACvD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAG,IAAAJ,eAAQ,EAAC,CAAC,CAAC;EAC7C,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAG,IAAAN,eAAQ,EAAC,CAAC,CAAC;EAE7C,MAAMO,wBAAwB,GAAG,IAAAC,kBAAW,EACzCC,UAA6C,IAAK;IACjD;IACA,IAAI,CAACA,UAAU,EAAE;IAEjB,IACE,CAACb,aAAa,CAACc,OAAO,IACrBd,aAAa,CAACc,OAAO,KACnBd,aAAa,CAACc,OAAO,CAACC,KAAK,KAAKF,UAAU,CAACE,KAAK,IAC/Cf,aAAa,CAACc,OAAO,CAACE,MAAM,KAAKH,UAAU,CAACG,MAAM,CAAE,EACxD;MACAhB,aAAa,CAACc,OAAO,GAAGD,UAAU;MAClCL,YAAY,CAACK,UAAU,CAACE,KAAK,CAAC;MAC9B5B,kBAAkB,aAAlBA,kBAAkB,eAAlBA,kBAAkB,CAAG0B,UAAU,CAAC;IAClC;EACF,CAAC,EACD,CAAC1B,kBAAkB,CACrB,CAAC;EAED,MAAM8B,uBAAuB,GAAG,IAAAL,kBAAW,EACzC,CAAC;IACCM,WAAW,EAAE;MAAEC;IAAY;EAC8B,CAAC,KAC1DR,wBAAwB,CAACQ,WAAW,CAAC,EACvC,CAACR,wBAAwB,CAC3B,CAAC;EAED,MAAMS,YAAY,GAAIxD,CAAoB,IAAK;IAC7C,MAAMoD,MAAM,GAAGpD,CAAC,CAACsD,WAAW,CAACG,MAAM,CAACL,MAAM;IAC1C,MAAMM,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACT,MAAM,GAAG,EAAE,CAAC,CAAC;IAClDN,YAAY,CAACY,KAAK,CAAC;EACrB,CAAC;EAED,MAAMI,uBAAuB,GAAG,IAAAC,cAAO,EAAC,MAAM;IAC5C,IAAIlB,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,OAAO,EAAE;EACX,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMmB,WAAW,GAAG,IAAAD,cAAO,EAAC,MAAM;IAChC,IAAIlB,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO3B,cAAc;IACvB;IACA,MAAMkC,MAAM,GAAGP,SAAS,GAAG,EAAE;IAC7B,IAAIO,MAAM,GAAGa,6BAAmB,GAAG,CAAC,EAAE;MACpC,OAAOA,6BAAmB,GAAG,CAAC,GAAG,EAAE;IACrC;IACA,OAAOb,MAAM;EACf,CAAC,EAAE,CAACP,SAAS,EAAE3B,cAAc,CAAC,CAAC;EAE/B,oBACEgD,KAAA,CAAAC,aAAA,CAACzE,YAAA,CAAA0E,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC;EAAU,GAC3BjC,SAAS,IAAI,CAACG,YAAY,iBACzByB,KAAA,CAAAC,aAAA,CAACpE,WAAA,CAAAyE,UAAU;IAACC,OAAO,EAAEA,CAAA,KAAM/B,eAAe,CAAC,IAAI;EAAE,gBAC/CwB,KAAA,CAAAC,aAAA,CAACzE,YAAA,CAAAgF,KAAK;IACJC,SAAS,EAAE/C,cAAK,CAACgD,WAAY;IAC7BC,UAAU,EAAC,SAAS;IACpBC,MAAM,EAAErF,OAAO,CAAC,oBAAoB,CAAE;IACtC4E,KAAK,EAAE;MAAElB,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG;EAAE,CAClC,CACS,CACb,EACA,CAAC,CAACd,SAAS,IAAIG,YAAY,kBAC1ByB,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAa,QAAA,qBACEb,KAAA,CAAAC,aAAA,CAACpE,WAAA,CAAAyE,UAAU;IAACC,OAAO,EAAEA,CAAA,KAAMvC,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAG,QAAQ;EAAE,gBACtDgC,KAAA,CAAAC,aAAA,CAACzE,YAAA,CAAAgF,KAAK;IACJC,SAAS,EAAE/C,cAAK,CAACgD,WAAY;IAC7BC,UAAU,EAAC,SAAS;IACpBC,MAAM,EAAErF,OAAO,CAAC,sBAAsB,CAAE;IACxC4E,KAAK,EAAEC,MAAM,CAACU;EAAS,CACxB,CACS,CAAC,eAEbd,KAAA,CAAAC,aAAA,CAACpE,WAAA,CAAAyE,UAAU;IAACC,OAAO,EAAEA,CAAA,KAAMvC,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAG,MAAM;EAAE,gBACpDgC,KAAA,CAAAC,aAAA,CAACzE,YAAA,CAAAgF,KAAK;IACJC,SAAS,EAAE/C,cAAK,CAACgD,WAAY;IAC7BC,UAAU,EAAC,SAAS;IACpBC,MAAM,EAAErF,OAAO,CAAC,qBAAqB,CAAE;IACvC4E,KAAK,EAAEC,MAAM,CAACU;EAAS,CACxB,CACS,CACZ,CACH,eAMDd,KAAA,CAAAC,aAAA,CAACzE,YAAA,CAAA0E,IAAI;IACHC,KAAK,EAAE,CACLC,MAAM,CAACW,kBAAkB,EACzB;MACEC,YAAY,EAAEpB;IAChB,CAAC;EACD,gBAEFI,KAAA,CAAAC,aAAA,CAACzE,YAAA,CAAAyF,SAAS,EAAAhF,QAAA;IACRiF,MAAM,EAAE3D,WAAY;IACpB4D,UAAU;IACVC,kBAAkB,EAAE7D,WAAY;IAChCA,WAAW,EAAEA,WAAY;IACzBE,oBAAoB,EAAEA,oBAAqB;IAC3CL,SAAS,EAAEA,SAAU;IACrBiE,QAAQ,EAAE,CAACnE,eAAgB;IAC3BoE,mBAAmB,EAAEnC,uBAAwB;IAC7CoC,YAAY,EAAGC,GAAG,IAAK;MACrBlE,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAGkE,GAAG,CAAC;MACpBhD,eAAe,CAAC,KAAK,CAAC;IACxB,CAAE;IACF2B,KAAK,EAAE,CACLsB,eAAY,CAACC,IAAI,EACjBtB,MAAM,CAACuB,SAAS,EAChB5D,cAAc,EACd;MACEmB,MAAM,EAAEY,WAAW;MACnB,GAAG8B,qBAAQ,CAACC,MAAM,CAAC;QACjBC,GAAG,EAAE;UACHC,YAAY,EAAE,CAAC;UACfC,YAAY,EAAE,aAAa;UAC3BC,aAAa,EAAE;QACjB;MACF,CAAC;IACH,CAAC,CACD;IACFC,SAAS,EAAEtE,kBAAmB;IAC9BuE,KAAK,EAAEtE,IAAK;IACZuE,6BAA6B;IAC7BC,qBAAqB,EAAC,aAAa;IACnClF,kBAAkB,EAAEA,kBAAmB;IACvCmF,OAAO,EAAEA,CAAA,KAAMjE,YAAY,CAAC,IAAI,CAAE;IAClCkE,MAAM,EAAEA,CAAA,KAAM;MACZlE,YAAY,CAAC,KAAK,CAAC;MACnBG,eAAe,CAAC,KAAK,CAAC;IACxB;EAAE,GACEV,cAAc,CACnB,CAAC,eAEFkC,KAAA,CAAAC,aAAA,CAACzE,YAAA,CAAAgH,IAAI;IACHC,QAAQ,EAAEnD,YAAa;IACvBa,KAAK,EAAE,CACLC,MAAM,CAACsC,UAAU,EACjB;MACEzD,KAAK,EAAER;IACT,CAAC;EACD,GAEDZ,IACG,CAUF,CACF,CAAC;AAEX,CACF,CAAC;AAED,MAAMuC,MAAM,GAAGuC,uBAAU,CAACC,MAAM,CAAC;EAC/BvC,SAAS,EAAE;IACTwC,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE;EACP,CAAC;EACDjC,kBAAkB,EAAE;IAClB8B,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE,CAAC;IACNC,eAAe,EAAEvF,cAAK,CAACwF,oBAAoB;IAC3CC,iBAAiB,EAAE;EACrB,CAAC;EACDxB,SAAS,EAAE;IACTyB,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACd,GAAG5B,qBAAQ,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE;QACH2B,UAAU,EAAE,CAAC;QACbJ,WAAW,EAAE;MACf;IACF,CAAC,CAAC;IACFK,SAAS,EAAE9B,qBAAQ,CAACC,MAAM,CAAC;MACzB8B,GAAG,EAAE,CAAC;MACNC,OAAO,EAAE,CAAC;MACV9B,GAAG,EAAE;IACP,CAAC,CAAC;IACF+B,YAAY,EAAEjC,qBAAQ,CAACC,MAAM,CAAC;MAC5B8B,GAAG,EAAE,CAAC;MACNC,OAAO,EAAE,CAAC;MACV9B,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDhB,QAAQ,EAAE;IACR7B,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDwD,UAAU,EAAE;IACVoB,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC,IAAI;IACVC,IAAI,EAAE,CAAC,IAAI;IACXZ,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACd,GAAG5B,qBAAQ,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE;QACH2B,UAAU,EAAE,CAAC;QACbJ,WAAW,EAAE;MACf;IACF,CAAC,CAAC;IACFK,SAAS,EAAE9B,qBAAQ,CAACC,MAAM,CAAC;MACzB8B,GAAG,EAAE,CAAC;MACNC,OAAO,EAAE,CAAC;MACV9B,GAAG,EAAE;IACP,CAAC,CAAC;IACF+B,YAAY,EAAEjC,qBAAQ,CAACC,MAAM,CAAC;MAC5B8B,GAAG,EAAE,CAAC;MACNC,OAAO,EAAE,CAAC;MACV9B,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDmC,YAAY,EAAE;IACZb,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACd,GAAGzB,qBAAQ,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE;QACH2B,UAAU,EAAE,CAAC;QACbJ,WAAW,EAAE;MACf;IACF,CAAC,CAAC;IACFK,SAAS,EAAE9B,qBAAQ,CAACC,MAAM,CAAC;MACzB8B,GAAG,EAAE,CAAC;MACNC,OAAO,EAAE,CAAC;MACV9B,GAAG,EAAE;IACP,CAAC,CAAC;IACF+B,YAAY,EAAEjC,qBAAQ,CAACC,MAAM,CAAC;MAC5B8B,GAAG,EAAE,CAAC;MACNC,OAAO,EAAE,CAAC;MACV9B,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDoC,UAAU,EAAE;IACVZ,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]}