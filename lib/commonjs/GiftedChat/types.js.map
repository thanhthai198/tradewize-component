{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import { type StyleProp, type ViewStyle } from 'react-native';\n\nexport type { ActionsProps } from './Actions';\nexport type { AvatarProps } from './Avatar';\nexport type { BubbleProps } from './Bubble';\nexport type { ComposerProps } from './Composer';\nexport type { DayProps } from './Day';\nexport type { GiftedAvatarProps } from './GiftedAvatar';\nexport type { InputToolbarProps } from './InputToolbar';\nexport type { LoadEarlierProps } from './LoadEarlier';\nexport type { MessageProps } from './Message';\nexport type { MessageContainerProps } from './MessageContainer';\nexport type { MessageTextProps } from './MessageText';\nexport type { QuickRepliesProps } from './QuickReplies';\nexport type { SendProps } from './Send';\nexport type { SystemMessageProps } from './SystemMessage';\nexport type { TimeProps } from './Time';\n\nexport type Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface LeftRightStyle<T> {\n  left?: StyleProp<T>;\n  right?: StyleProp<T>;\n}\n\ntype renderFunction = (x: unknown) => React.ReactNode;\n\nexport interface User {\n  _id: string | number;\n  name?: string;\n  avatar?: string | number | renderFunction;\n}\n\nexport interface Reply {\n  title: string;\n  value: string;\n  messageId?: number | string;\n}\n\nexport interface QuickReplies {\n  type: 'radio' | 'checkbox';\n  values: Reply[];\n  keepIt?: boolean;\n}\n\nexport interface FileMessage {\n  uri: string;\n  id?: string;\n  size?: number;\n  name?: string;\n  fileExtension?: string;\n  typeFile?: 'image' | 'video';\n  thumbnailPreview?: string;\n  isLoading?: boolean;\n  width?: number;\n  height?: number;\n  duration?: number;\n  progress?: number;\n  mine?: string;\n  url?: string;\n}\n\nexport interface IMessage {\n  _id: string | number;\n  text: string;\n  createdAt: Date | number;\n  user: User;\n  file?: FileMessage[];\n  audio?: string;\n  system?: boolean;\n  sent?: boolean;\n  received?: boolean;\n  pending?: boolean;\n  quickReplies?: QuickReplies;\n  isLast?: boolean;\n  reactionEmoji?: string;\n  messageReply?: IMessage;\n}\n\nexport type IChatMessage = IMessage;\n\nexport interface MessageVideoProps<TMessage extends IMessage> {\n  currentMessage: TMessage;\n  containerStyle?: StyleProp<ViewStyle>;\n  videoStyle?: StyleProp<ViewStyle>;\n  videoProps?: object;\n}\n\nexport interface MessageAudioProps<TMessage extends IMessage> {\n  currentMessage: TMessage;\n  containerStyle?: StyleProp<ViewStyle>;\n  audioStyle?: StyleProp<ViewStyle>;\n  audioProps?: object;\n}\n"],"mappings":"","ignoreList":[]}