{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import React, { type Component, type RefObject } from 'react';\nimport {\n  type FlatListProps,\n  type StyleProp,\n  type ViewStyle,\n} from 'react-native';\n\nimport { type LoadEarlierProps } from '../LoadEarlier';\nimport { type MessageProps } from '../Message';\nimport {\n  type User,\n  type IMessage,\n  type Reply,\n  type DayProps,\n  type FileMessage,\n} from '../types';\nimport { type ReanimatedScrollEvent } from 'react-native-reanimated/lib/typescript/hook/commonTypes';\nimport { type FlatList } from 'react-native-reanimated/lib/typescript/Animated';\nimport { type AnimateProps } from 'react-native-reanimated';\n\nexport type ListViewProps<TMessage extends IMessage = IMessage> = Partial<\n  FlatListProps<TMessage>\n>;\n\nexport type AnimatedList<TMessage> = Component<\n  AnimateProps<FlatListProps<TMessage>>,\n  unknown,\n  unknown\n> &\n  FlatList<FlatListProps<TMessage>>;\n\nexport interface MessageContainerProps<TMessage extends IMessage = IMessage> {\n  forwardRef?: RefObject<AnimatedList<TMessage>>;\n  messages?: TMessage[];\n  isTyping?: boolean;\n  user?: User;\n  listViewProps?: ListViewProps;\n  inverted?: boolean;\n  loadEarlier?: boolean;\n  alignTop?: boolean;\n  isScrollToBottomEnabled?: boolean;\n  scrollToBottomStyle?: StyleProp<ViewStyle>;\n  invertibleScrollViewProps?: object;\n  extraData?: object;\n  scrollToBottomOffset?: number;\n  renderChatEmpty?(): React.ReactNode;\n  renderFooter?(props: MessageContainerProps<TMessage>): React.ReactNode;\n  renderMessage?(props: MessageProps<TMessage>): React.ReactElement;\n  renderDay?(props: DayProps): React.ReactNode;\n  renderLoadEarlier?(props: LoadEarlierProps): React.ReactNode;\n  renderTypingIndicator?(): React.ReactNode;\n  scrollToBottomComponent?(): React.ReactNode;\n  onLoadEarlier?(): void;\n  onQuickReply?(replies: Reply[]): void;\n  infiniteScroll?: boolean;\n  isLoadingEarlier?: boolean;\n  handleOnScroll?(event: ReanimatedScrollEvent): void;\n  onPressFile?(file: FileMessage): void;\n  onLongPressReaction?(\n    message: TMessage,\n    position: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      pageX: number;\n      pageY: number;\n    }\n  ): void;\n}\n\nexport interface State {\n  showScrollBottom: boolean;\n  hasScrolled: boolean;\n}\n\ninterface ViewLayout {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport type DaysPositions = {\n  [key: string]: ViewLayout & { createdAt: number };\n};\n"],"mappings":"","ignoreList":[]}