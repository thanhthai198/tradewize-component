{"version":3,"names":["_reactNative","require","_Color","_interopRequireDefault","_MessageFile","_MessageText","_utils","_react","e","__esModule","default","MessageReply","messageReply","onPressFile","onSaveThumbnail","_messageReply$file","createElement","View","style","styles","container","file","length","MessageFile","currentMessage","messageWidth","width","getScreenWidth","_id","text","space","MessageText","position","customTextStyle","color","Color","black","StyleSheet","create","backgroundColor","minWidth","borderRadius","marginBottom","borderWidth","borderColor","height"],"sources":["MessageReply.tsx"],"sourcesContent":["import { StyleSheet, View } from 'react-native';\r\nimport Color from './Color';\r\nimport { type FileMessage, type IMessage } from './types';\r\nimport { MessageFile } from './MessageFile';\r\nimport { MessageText } from './MessageText';\r\nimport { getScreenWidth } from '../utils';\r\nimport React from 'react';\r\n\r\ninterface MessageReplyProps {\r\n  messageReply: IMessage;\r\n  onPressFile?: (\r\n    file: FileMessage,\r\n    isShowAll?: boolean,\r\n    arrMedia?: IMessage\r\n  ) => void;\r\n  onSaveThumbnail?: (file: FileMessage[]) => void;\r\n}\r\n\r\nexport function MessageReply({\r\n  messageReply,\r\n  onPressFile,\r\n  onSaveThumbnail,\r\n}: MessageReplyProps) {\r\n  return (\r\n    <View style={styles.container}>\r\n      {messageReply?.file?.length && (\r\n        <MessageFile\r\n          onPressFile={onPressFile}\r\n          onSaveThumbnail={onSaveThumbnail}\r\n          currentMessage={messageReply}\r\n          messageWidth={{ width: getScreenWidth() * 0.9, _id: '1' }}\r\n        />\r\n      )}\r\n      {!messageReply?.text && <View style={styles.space} />}\r\n      {messageReply?.text && (\r\n        <MessageText\r\n          currentMessage={messageReply}\r\n          position=\"left\"\r\n          customTextStyle={{ color: Color.black }}\r\n        />\r\n      )}\r\n      <View style={styles.space} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.02)',\r\n    minWidth: getScreenWidth() * 0.12,\r\n    borderRadius: 8,\r\n    marginBottom: -4,\r\n    borderWidth: 0.5,\r\n    borderColor: 'rgba(0, 0, 0, 0.05)',\r\n  },\r\n  space: {\r\n    height: 4,\r\n  },\r\n});\r\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AACA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAA0B,SAAAE,uBAAAK,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAYnB,SAASG,YAAYA,CAAC;EAC3BC,YAAY;EACZC,WAAW;EACXC;AACiB,CAAC,EAAE;EAAA,IAAAC,kBAAA;EACpB,oBACER,MAAA,CAAAG,OAAA,CAAAM,aAAA,CAAChB,YAAA,CAAAiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC;EAAU,GAC3B,CAAAR,YAAY,aAAZA,YAAY,gBAAAG,kBAAA,GAAZH,YAAY,CAAES,IAAI,cAAAN,kBAAA,uBAAlBA,kBAAA,CAAoBO,MAAM,kBACzBf,MAAA,CAAAG,OAAA,CAAAM,aAAA,CAACZ,YAAA,CAAAmB,WAAW;IACVV,WAAW,EAAEA,WAAY;IACzBC,eAAe,EAAEA,eAAgB;IACjCU,cAAc,EAAEZ,YAAa;IAC7Ba,YAAY,EAAE;MAAEC,KAAK,EAAE,IAAAC,qBAAc,EAAC,CAAC,GAAG,GAAG;MAAEC,GAAG,EAAE;IAAI;EAAE,CAC3D,CACF,EACA,EAAChB,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEiB,IAAI,kBAAItB,MAAA,CAAAG,OAAA,CAAAM,aAAA,CAAChB,YAAA,CAAAiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACW;EAAM,CAAE,CAAC,EACpD,CAAAlB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiB,IAAI,kBACjBtB,MAAA,CAAAG,OAAA,CAAAM,aAAA,CAACX,YAAA,CAAA0B,WAAW;IACVP,cAAc,EAAEZ,YAAa;IAC7BoB,QAAQ,EAAC,MAAM;IACfC,eAAe,EAAE;MAAEC,KAAK,EAAEC,cAAK,CAACC;IAAM;EAAE,CACzC,CACF,eACD7B,MAAA,CAAAG,OAAA,CAAAM,aAAA,CAAChB,YAAA,CAAAiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACW;EAAM,CAAE,CACxB,CAAC;AAEX;AAEA,MAAMX,MAAM,GAAGkB,uBAAU,CAACC,MAAM,CAAC;EAC/BlB,SAAS,EAAE;IACTmB,eAAe,EAAE,qBAAqB;IACtCC,QAAQ,EAAE,IAAAb,qBAAc,EAAC,CAAC,GAAG,IAAI;IACjCc,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC,CAAC;IAChBC,WAAW,EAAE,GAAG;IAChBC,WAAW,EAAE;EACf,CAAC;EACDd,KAAK,EAAE;IACLe,MAAM,EAAE;EACV;AACF,CAAC,CAAC","ignoreList":[]}