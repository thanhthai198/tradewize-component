{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_Color","_interopRequireDefault","_logging","_styles","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","styles","StyleSheet","create","container","flexDirection","flexWrap","maxWidth","quickReply","borderWidth","paddingVertical","paddingHorizontal","minHeight","borderRadius","margin","quickReplyText","overflow","sendLink","sendLinkText","color","Color","defaultBlue","fontWeight","fontSize","sameReply","currentReply","reply","value","diffReply","QuickReplies","currentMessage","nextMessage","peterRiver","quickReplyStyle","quickReplyTextStyle","quickReplyContainerStyle","onQuickReply","sendText","renderQuickReplySend","type","quickReplies","replies","setReplies","useState","shouldComponentDisplay","useMemo","hasReplies","hasNext","_id","keepIt","handleSend","useCallback","repliesData","map","messageId","handlePress","find","filter","warning","createElement","View","style","values","index","selected","TouchableOpacity","onPress","stylesCommon","centerItems","borderColor","backgroundColor","key","Text","numberOfLines","ellipsizeMode","white","title","length"],"sources":["QuickReplies.tsx"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\r\nimport {\r\n  Text,\r\n  StyleSheet,\r\n  View,\r\n  TouchableOpacity,\r\n  type StyleProp,\r\n  type ViewStyle,\r\n  type TextStyle,\r\n} from 'react-native';\r\nimport { type IMessage, type Reply } from './types';\r\nimport Color from './Color';\r\nimport { warning } from './logging';\r\nimport stylesCommon from './styles';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    maxWidth: 300,\r\n  },\r\n  quickReply: {\r\n    borderWidth: 1,\r\n    maxWidth: 200,\r\n    paddingVertical: 7,\r\n    paddingHorizontal: 12,\r\n    minHeight: 50,\r\n    borderRadius: 13,\r\n    margin: 3,\r\n  },\r\n  quickReplyText: {\r\n    overflow: 'visible',\r\n  },\r\n  sendLink: {\r\n    borderWidth: 0,\r\n  },\r\n  sendLinkText: {\r\n    color: Color.defaultBlue,\r\n    fontWeight: '600',\r\n    fontSize: 17,\r\n  },\r\n});\r\n\r\nexport interface QuickRepliesProps<TMessage extends IMessage = IMessage> {\r\n  nextMessage?: TMessage;\r\n  currentMessage: TMessage;\r\n  color?: string;\r\n  sendText?: string;\r\n  quickReplyStyle?: StyleProp<ViewStyle>;\r\n  quickReplyTextStyle?: StyleProp<TextStyle>;\r\n  quickReplyContainerStyle?: StyleProp<ViewStyle>;\r\n  onQuickReply?(reply: Reply[]): void;\r\n  renderQuickReplySend?(): React.ReactNode;\r\n}\r\n\r\nconst sameReply = (currentReply: Reply) => (reply: Reply) =>\r\n  currentReply.value === reply.value;\r\n\r\nconst diffReply = (currentReply: Reply) => (reply: Reply) =>\r\n  currentReply.value !== reply.value;\r\n\r\nexport function QuickReplies({\r\n  currentMessage,\r\n  nextMessage,\r\n  color = Color.peterRiver,\r\n  quickReplyStyle,\r\n  quickReplyTextStyle,\r\n  quickReplyContainerStyle,\r\n  onQuickReply,\r\n  sendText = 'Send',\r\n  renderQuickReplySend,\r\n}: QuickRepliesProps<IMessage>) {\r\n  const { type } = currentMessage!.quickReplies!;\r\n  const [replies, setReplies] = useState<Reply[]>([]);\r\n\r\n  const shouldComponentDisplay = useMemo(() => {\r\n    const hasReplies = !!currentMessage && !!currentMessage!.quickReplies;\r\n    const hasNext = !!nextMessage && !!nextMessage!._id;\r\n    const keepIt = currentMessage!.quickReplies!.keepIt;\r\n\r\n    if (hasReplies && !hasNext) return true;\r\n\r\n    if (hasReplies && hasNext && keepIt) return true;\r\n\r\n    return false;\r\n  }, [currentMessage, nextMessage]);\r\n\r\n  const handleSend = useCallback(\r\n    (repliesData: Reply[]) => () => {\r\n      onQuickReply?.(\r\n        repliesData.map((reply: Reply) => ({\r\n          ...reply,\r\n          messageId: currentMessage!._id,\r\n        }))\r\n      );\r\n    },\r\n    [onQuickReply, currentMessage]\r\n  );\r\n\r\n  const handlePress = useCallback(\r\n    (reply: Reply) => () => {\r\n      if (currentMessage) {\r\n        const { type } = currentMessage.quickReplies!;\r\n        switch (type) {\r\n          case 'radio': {\r\n            handleSend([reply])();\r\n            return;\r\n          }\r\n          case 'checkbox': {\r\n            if (replies.find(sameReply(reply)))\r\n              setReplies(replies.filter(diffReply(reply)));\r\n            else setReplies([...replies, reply]);\r\n\r\n            return;\r\n          }\r\n          default: {\r\n            warning(`onQuickReply unknown type: ${type}`);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [replies, currentMessage, handleSend]\r\n  );\r\n\r\n  if (!shouldComponentDisplay) return null;\r\n\r\n  return (\r\n    <View style={[styles.container, quickReplyContainerStyle]}>\r\n      {currentMessage!.quickReplies!.values.map(\r\n        (reply: Reply, index: number) => {\r\n          const selected =\r\n            type === 'checkbox' && replies.find(sameReply(reply));\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={handlePress(reply)}\r\n              style={[\r\n                stylesCommon.centerItems,\r\n                styles.quickReply,\r\n                quickReplyStyle,\r\n                { borderColor: color },\r\n                selected && { backgroundColor: color },\r\n              ]}\r\n              key={`${reply.value}-${index}`}\r\n            >\r\n              <Text\r\n                numberOfLines={10}\r\n                ellipsizeMode=\"tail\"\r\n                style={[\r\n                  styles.quickReplyText,\r\n                  { color: selected ? Color.white : color },\r\n                  quickReplyTextStyle,\r\n                ]}\r\n              >\r\n                {reply.title}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          );\r\n        }\r\n      )}\r\n      {replies.length > 0 && (\r\n        <TouchableOpacity\r\n          style={[stylesCommon.centerItems, styles.quickReply, styles.sendLink]}\r\n          onPress={handleSend(replies)}\r\n        >\r\n          {renderQuickReplySend?.() || (\r\n            <Text style={styles.sendLinkText}>{sendText}</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]}