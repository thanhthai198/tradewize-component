{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import { type LayoutChangeEvent, type ViewStyle } from 'react-native';\nimport { type AvatarProps } from '../Avatar';\nimport { type SystemMessageProps } from '../SystemMessage';\nimport { type DayProps } from '../Day';\nimport {\n  type IMessage,\n  type User,\n  type LeftRightStyle,\n  type FileMessage,\n} from '../types';\nimport { type BubbleProps } from '../Bubble';\n\nexport interface MessageProps<TMessage extends IMessage> {\n  showUserAvatar?: boolean;\n  position: 'left' | 'right';\n  currentMessage: TMessage;\n  nextMessage?: TMessage;\n  previousMessage?: TMessage;\n  user: User;\n  inverted?: boolean;\n  containerStyle?: LeftRightStyle<ViewStyle>;\n  renderBubble?(props: BubbleProps<TMessage>): React.ReactNode;\n  renderDay?(props: DayProps): React.ReactNode;\n  renderSystemMessage?(props: SystemMessageProps<TMessage>): React.ReactNode;\n  renderAvatar?(props: AvatarProps<TMessage>): React.ReactNode;\n  shouldUpdateMessage?(\n    props: MessageProps<IMessage>,\n    nextProps: MessageProps<IMessage>\n  ): boolean;\n  onPressFile?(file: FileMessage): void;\n  onLongPressReaction?(\n    message: TMessage,\n    position: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      pageX: number;\n      pageY: number;\n    }\n  ): void;\n  onMessageLayout?(event: LayoutChangeEvent): void;\n}\n"],"mappings":"","ignoreList":[]}